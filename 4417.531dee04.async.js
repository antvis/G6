!function(){"use strict";var t,e,a={74417:function(t,e,a){var i=a(92336),o=a(76866),n=a(93266),d=a(50411),r=a(55972);const s=(t,e)=>{if("next"!==t&&"prev"!==t)return e},l=t=>{t.prev.next=t.next,t.next.prev=t.prev,delete t.next,delete t.prev};class c{constructor(){const t={};t.prev=t,t.next=t.prev,this.shortcut=t}dequeue(){const t=this.shortcut,e=t.prev;if(e&&e!==t)return l(e),e}enqueue(t){const e=this.shortcut;t.prev&&t.next&&l(t),t.next=e.next,e.next.prev=t,e.next=t,t.prev=e}toString(){const t=[],e=this.shortcut;let a=e.prev;for(;a!==e;)t.push(JSON.stringify(a,s)),a=null==a?void 0:a.prev;return`[${t.join(", ")}]`}}class h extends c{}const g=()=>1,u=(t,e,a)=>{let i=[];const o=e[e.length-1],n=e[0];let d;for(;t.getAllNodes().length;){for(;d=n.dequeue();)f(t,e,a,d);for(;d=o.dequeue();)f(t,e,a,d);if(t.getAllNodes().length)for(let o=e.length-2;o>0;--o)if(d=e[o].dequeue(),d){i=i.concat(f(t,e,a,d,!0));break}}return i},f=(t,e,a,i,o)=>{var n,d;const r=[];return t.hasNode(i.v)&&(null===(n=t.getRelatedEdges(i.v,"in"))||void 0===n||n.forEach((i=>{const n=i.data.weight,d=t.getNode(i.source);o&&r.push({v:i.source,w:i.target,in:0,out:0}),void 0===d.data.out&&(d.data.out=0),d.data.out-=n,y(e,a,Object.assign({v:d.id},d.data))})),null===(d=t.getRelatedEdges(i.v,"out"))||void 0===d||d.forEach((i=>{const o=i.data.weight,n=i.target,d=t.getNode(n);void 0===d.data.in&&(d.data.in=0),d.data.in-=o,y(e,a,Object.assign({v:d.id},d.data))})),t.removeNode(i.v)),o?r:void 0},v=(t,e)=>{const a=new o.k;let i=0,n=0;t.getAllNodes().forEach((t=>{a.addNode({id:t.id,data:{v:t.id,in:0,out:0}})})),t.getAllEdges().forEach((t=>{const o=a.getRelatedEdges(t.source,"out").find((e=>e.target===t.target)),d=(null==e?void 0:e(t))||1;o?a.updateEdgeData(null==o?void 0:o.id,Object.assign(Object.assign({},o.data),{weight:o.data.weight+d})):a.addEdge({id:t.id,source:t.source,target:t.target,data:{weight:d}}),n=Math.max(n,a.getNode(t.source).data.out+=d),i=Math.max(i,a.getNode(t.target).data.in+=d)}));const d=[],r=n+i+3;for(let t=0;t<r;t++)d.push(new h);const s=i+1;return a.getAllNodes().forEach((t=>{y(d,s,Object.assign({v:t.id},a.getNode(t.id).data))})),{buckets:d,zeroIdx:s,graph:a}},y=(t,e,a)=>{a.out?a.in?t[a.out-a.in+e].enqueue(a):t[t.length-1].enqueue(a):t[0].enqueue(a)},p=(t,e)=>{const a="greedy"===e?((t,e)=>{var a;if(t.getAllNodes().length<=1)return[];const i=v(t,e||g);return null===(a=u(i.graph,i.buckets,i.zeroIdx).map((e=>t.getRelatedEdges(e.v,"out").filter((({target:t})=>t===e.w)))))||void 0===a?void 0:a.flat()})(t,(t=>t.data.weight||1)):m(t);null==a||a.forEach((e=>{const a=e.data;t.removeEdge(e.id),a.forwardName=e.data.name,a.reversed=!0,t.addEdge({id:e.id,source:e.target,target:e.source,data:Object.assign({},a)})}))},m=t=>{const e=[],a={},i={},o=n=>{i[n]||(i[n]=!0,a[n]=!0,t.getRelatedEdges(n,"out").forEach((t=>{a[t.target]?e.push(t):o(t.target)})),delete a[n])};return t.getAllNodes().forEach((t=>o(t.id))),e},x=(t,e,a,i)=>{let o;do{o=`${i}${Math.random()}`}while(t.hasNode(o));return a.dummy=e,t.addNode({id:o,data:a}),o},w=t=>{const e=new o.k;return t.getAllNodes().forEach((a=>{t.getChildren(a.id).length||e.addNode(Object.assign({},a))})),t.getAllEdges().forEach((t=>{e.addEdge(t)})),e},E=(t,e)=>null==t?void 0:t.reduce(((t,a,i)=>(t[a]=e[i],t)),{}),b=(t,e)=>{const a=Number(t.x),i=Number(t.y),o=Number(e.x)-a,n=Number(e.y)-i;let d,r,s=Number(t.width)/2,l=Number(t.height)/2;return o||n?(Math.abs(n)*s>Math.abs(o)*l?(n<0&&(l=-l),d=l*o/n,r=l):(o<0&&(s=-s),d=s,r=s*n/o),{x:a+d,y:i+r}):{x:0,y:0}},N=t=>{const e=[],a=k(t)+1;for(let t=0;t<a;t++)e.push([]);t.getAllNodes().forEach((t=>{const a=t.data.rank;void 0!==a&&e[a]&&e[a].push(t.id)}));for(let i=0;i<a;i++)e[i]=e[i].sort(((e,a)=>{return i=t.getNode(e).data.order,o=t.getNode(a).data.order,Number(i)-Number(o);var i,o}));return e},O=(t,e,a,i)=>{const o={width:0,height:0};return(0,d.Z)(a)&&(0,d.Z)(i)&&(o.rank=a,o.order=i),x(t,"border",o,e)},k=t=>{let e;return t.getAllNodes().forEach((t=>{const a=t.data.rank;void 0!==a&&(void 0===e||a>e)&&(e=a)})),e||(e=0),e},M=(t,e)=>t.reduce(((t,a)=>e(t)>e(a)?a:t)),A=(t,e,a,i,o,n)=>{i.includes(e.id)||(i.push(e.id),a||n.push(e.id),o(e.id).forEach((e=>A(t,e,a,i,o,n))),a&&n.push(e.id))},j=(t,e,a,i)=>{const o=Array.isArray(e)?e:[e],n=e=>i?t.getSuccessors(e):t.getNeighbors(e),d=[],r=[];return o.forEach((e=>{if(!t.hasNode(e.id))throw new Error(`Graph does not have node: ${e}`);A(t,e,"post"===a,r,n,d)})),d},z=(t,e,a,i,o,n)=>{const d={rank:n,borderType:e,width:0,height:0},r=o.data[e][n-1],s=x(t,"border",d,a);o.data[e][n]=s,t.setParent(s,i),r&&t.addEdge({id:`e${Math.random()}`,source:r,target:s,data:{weight:1}})},S=t=>{t.getAllNodes().forEach((t=>{_(t)})),t.getAllEdges().forEach((t=>{_(t)}))},_=t=>{const e=t.data.width;t.data.width=t.data.height,t.data.height=e},D=t=>{t.getAllNodes().forEach((t=>{R(t.data)})),t.getAllEdges().forEach((t=>{var e;null===(e=t.data.points)||void 0===e||e.forEach((t=>R(t))),t.data.hasOwnProperty("y")&&R(t.data)}))},R=t=>{(null==t?void 0:t.y)&&(t.y=-t.y)},P=t=>{t.getAllNodes().forEach((t=>{Z(t.data)})),t.getAllEdges().forEach((t=>{var e;null===(e=t.data.points)||void 0===e||e.forEach((t=>Z(t))),t.data.hasOwnProperty("x")&&Z(t.data)}))},Z=t=>{const e=t.x;t.x=t.y,t.y=e},L=(t,e,a,i,o,n,d)=>{const r=t.getChildren(d);if(!(null==r?void 0:r.length))return void(d!==e&&t.addEdge({id:`e${Math.random()}`,source:e,target:d,data:{weight:0,minlen:a}}));const s=O(t,"_bt"),l=O(t,"_bb"),c=t.getNode(d);t.setParent(s,d),c.data.borderTop=s,t.setParent(l,d),c.data.borderBottom=l,null==r||r.forEach((r=>{L(t,e,a,i,o,n,r.id);const c=r.data.borderTop?r.data.borderTop:r.id,h=r.data.borderBottom?r.data.borderBottom:r.id,g=r.data.borderTop?i:2*i,u=c!==h?1:o-n[d]+1;t.addEdge({id:`e${Math.random()}`,source:s,target:c,data:{minlen:u,weight:g,nestingEdge:!0}}),t.addEdge({id:`e${Math.random()}`,source:h,target:l,data:{minlen:u,weight:g,nestingEdge:!0}})})),t.getParent(d)||t.addEdge({id:`e${Math.random()}`,source:e,target:s,data:{weight:0,minlen:o+n[d]}})},I=t=>{const e={},a=(i,o)=>{const n=t.getChildren(i);null==n||n.forEach((t=>a(t.id,o+1))),e[i]=o};return t.getRoots().forEach((t=>a(t.id,1))),e},C=t=>{let e=0;return t.getAllEdges().forEach((t=>{e+=t.data.weight})),e},T="edge-label",q=(t,e,a)=>{let i=e.source,o=t.getNode(i).data.rank;const n=e.target,d=t.getNode(n).data.rank,r=e.data.labelRank;if(d===o+1)return;let s,l,c;for(t.removeEdge(e.id),c=0,++o;o<d;++c,++o)e.data.points=[],l={originalEdge:e,width:0,height:0,rank:o},s=x(t,"edge",l,"_d"),o===r&&(l.width=e.data.width,l.height=e.data.height,l.dummy=T,l.labelpos=e.data.labelpos),t.addEdge({id:`e${Math.random()}`,source:i,target:s,data:{weight:e.data.weight}}),0===c&&a.push(s),i=s;t.addEdge({id:`e${Math.random()}`,source:i,target:n,data:{weight:e.data.weight}})};var F=a(23291);const B=t=>{let e;for(;t.hasNode(e=`_root${Math.random()}`););return e},G=(t,e,a)=>{const i=E(a,a.map(((t,e)=>e))),o=e.map((e=>{const a=t.getRelatedEdges(e,"out").map((t=>({pos:i[t.target]||0,weight:t.data.weight})));return null==a?void 0:a.sort(((t,e)=>t.pos-e.pos))})).flat().filter((t=>void 0!==t));let n=1;for(;n<a.length;)n<<=1;const d=2*n-1;n-=1;const r=Array(d).fill(0,0,d);let s=0;return null==o||o.forEach((t=>{if(t){let e=t.pos+n;r[e]+=t.weight;let a=0;for(;e>0;)e%2&&(a+=r[e+1]),e=e-1>>1,r[e]+=t.weight;s+=t.weight*a}})),s},W=(t,e)=>{let a=0;for(let i=1;i<(null==e?void 0:e.length);i+=1)a+=G(t,e[i-1],e[i]);return a},$=t=>{const e={},a=t.getAllNodes(),i=a.map((t=>{var e;return null!==(e=t.data.rank)&&void 0!==e?e:-1/0})),o=Math.max(...i),n=[];for(let t=0;t<o+1;t++)n.push([]);const d=a.sort(((e,a)=>t.getNode(e.id).data.rank-t.getNode(a.id).data.rank)),r=d.filter((e=>void 0!==t.getNode(e.id).data.fixorder)).sort(((e,a)=>t.getNode(e.id).data.fixorder-t.getNode(a.id).data.fixorder));return null==r||r.forEach((a=>{isNaN(t.getNode(a.id).data.rank)||n[t.getNode(a.id).data.rank].push(a.id),e[a.id]=!0})),null==d||d.forEach((a=>t.dfsTree(a.id,(t=>{if(e.hasOwnProperty(t.id))return!0;e[t.id]=!0,isNaN(t.data.rank)||n[t.data.rank].push(t.id)})))),n},V=t=>{var e,a;const i=[];for(;null==t?void 0:t.length;){const o=t.pop();i.push(o),null===(e=o.in.reverse())||void 0===e||e.forEach((t=>{return(e=o,t=>{t.merged||(void 0===t.barycenter||void 0===e.barycenter||t.barycenter>=e.barycenter)&&H(e,t)})(t);var e})),null===(a=o.out)||void 0===a||a.forEach((e=>{return(a=o,e=>{e.in.push(a),0==--e.indegree&&t.push(e)})(e);var a}))}const o=i.filter((t=>!t.merged)),n=["vs","i","barycenter","weight"];return o.map((t=>{const e={};return null==n||n.forEach((a=>{void 0!==t[a]&&(e[a]=t[a])})),e}))},H=(t,e)=>{var a;let i=0,o=0;t.weight&&(i+=t.barycenter*t.weight,o+=t.weight),e.weight&&(i+=e.barycenter*e.weight,o+=e.weight),t.vs=null===(a=e.vs)||void 0===a?void 0:a.concat(t.vs),t.barycenter=i/o,t.weight=o,t.i=Math.min(e.i,t.i),e.merged=!0};var Y=(t,e)=>{var a,i,o;const n={};null==t||t.forEach(((t,e)=>{n[t.v]={i:e,indegree:0,in:[],out:[],vs:[t.v]};const a=n[t.v];void 0!==t.barycenter&&(a.barycenter=t.barycenter,a.weight=t.weight)})),null===(a=e.getAllEdges())||void 0===a||a.forEach((t=>{const e=n[t.source],a=n[t.target];void 0!==e&&void 0!==a&&(a.indegree++,e.out.push(n[t.target]))}));const d=null===(o=(i=Object.values(n)).filter)||void 0===o?void 0:o.call(i,(t=>!t.indegree));return V(d)};const J=(t,e,a)=>{let i,o=a;for(;e.length&&(i=e[e.length-1]).i<=o;)e.pop(),null==t||t.push(i.vs),o++;return o},X=(t,e)=>(a,i)=>{if(void 0!==a.fixorder&&void 0!==i.fixorder)return a.fixorder-i.fixorder;if(a.barycenter<i.barycenter)return-1;if(a.barycenter>i.barycenter)return 1;if(e&&void 0!==a.order&&void 0!==i.order){if(a.order<i.order)return-1;if(a.order>i.order)return 1}return t?i.i-a.i:a.i-i.i},K=(t,e,a,i,o,n)=>{var d,r,s,l;let c=t.getChildren(e).map((t=>t.id));const h=t.getNode(e),g=h?h.data.borderLeft:void 0,u=h?h.data.borderRight:void 0,f={};g&&(c=null==c?void 0:c.filter((t=>t!==g&&t!==u)));const v=((t,e)=>e.map((e=>{const a=t.getRelatedEdges(e,"in");if(!(null==a?void 0:a.length))return{v:e};const i={sum:0,weight:0};return null==a||a.forEach((e=>{const a=t.getNode(e.source);i.sum+=e.data.weight*a.data.order,i.weight+=e.data.weight})),{v:e,barycenter:i.sum/i.weight,weight:i.weight}})))(t,c||[]);null==v||v.forEach((e=>{var o;if(null===(o=t.getChildren(e.v))||void 0===o?void 0:o.length){const o=K(t,e.v,a,i,n);f[e.v]=o,o.hasOwnProperty("barycenter")&&Q(e,o)}}));const y=Y(v,a);U(y,f),null===(d=y.filter((t=>t.vs.length>0)))||void 0===d||d.forEach((e=>{const a=t.getNode(e.vs[0]);a&&(e.fixorder=a.data.fixorder,e.order=a.data.order)}));const p=((t,e,a,i)=>{const o=((t,e)=>{const a={lhs:[],rhs:[]};return null==t||t.forEach((t=>{e(t)?a.lhs.push(t):a.rhs.push(t)})),a})(t,(t=>{const e=t.hasOwnProperty("fixorder")&&!isNaN(t.fixorder);return i?!e&&t.hasOwnProperty("barycenter"):e||t.hasOwnProperty("barycenter")})),n=o.lhs,d=o.rhs.sort(((t,e)=>-t.i- -e.i)),r=[];let s=0,l=0,c=0;null==n||n.sort(X(!!e,!!a)),c=J(r,d,c),null==n||n.forEach((t=>{var e;c+=null===(e=t.vs)||void 0===e?void 0:e.length,r.push(t.vs),s+=t.barycenter*t.weight,l+=t.weight,c=J(r,d,c)}));const h={vs:r.flat()};return l&&(h.barycenter=s/l,h.weight=l),h})(y,i,o,n);if(g&&(p.vs=[g,p.vs,u].flat(),null===(r=t.getPredecessors(g))||void 0===r?void 0:r.length)){const e=t.getNode((null===(s=t.getPredecessors(g))||void 0===s?void 0:s[0].id)||""),a=t.getNode((null===(l=t.getPredecessors(u))||void 0===l?void 0:l[0].id)||"");p.hasOwnProperty("barycenter")||(p.barycenter=0,p.weight=0),p.barycenter=(p.barycenter*p.weight+e.data.order+a.data.order)/(p.weight+2),p.weight+=2}return p},U=(t,e)=>{null==t||t.forEach((t=>{var a;const i=null===(a=t.vs)||void 0===a?void 0:a.map((t=>e[t]?e[t].vs:t));t.vs=i.flat()}))},Q=(t,e)=>{void 0!==t.barycenter?(t.barycenter=(t.barycenter*t.weight+e.barycenter*e.weight)/(t.weight+e.weight),t.weight+=e.weight):(t.barycenter=e.barycenter,t.weight=e.weight)},tt=(t,e,a)=>e.map((e=>((t,e,a)=>{const i=B(t),n=new o.k({tree:[{id:i,children:[],data:{}}]});return t.getAllNodes().forEach((o=>{const d=t.getParent(o.id);(o.data.rank===e||o.data.minRank<=e&&e<=o.data.maxRank)&&(n.hasNode(o.id)||n.addNode(Object.assign({},o)),(null==d?void 0:d.id)&&!n.hasNode(null==d?void 0:d.id)&&n.addNode(Object.assign({},d)),n.setParent(o.id,(null==d?void 0:d.id)||i),t.getRelatedEdges(o.id,a).forEach((e=>{const a=e.source===o.id?e.target:e.source;n.hasNode(a)||n.addNode(Object.assign({},t.getNode(a)));const i=n.getRelatedEdges(a,"out").find((({target:t})=>t===o.id)),d=void 0!==i?i.data.weight:0;i?n.updateEdgeData(i.id,Object.assign(Object.assign({},i.data),{weight:e.data.weight+d})):n.addEdge({id:e.id,source:a,target:o.id,data:{weight:e.data.weight+d}})})),o.data.hasOwnProperty("minRank")&&n.updateNodeData(o.id,Object.assign(Object.assign({},o.data),{borderLeft:o.data.borderLeft[e],borderRight:o.data.borderRight[e]})))})),n})(t,e,a))),et=(t,e,a,i)=>{const n=new o.k;null==t||t.forEach((t=>{var o;const d=t.getRoots()[0].id,r=K(t,d,n,e,a,i);for(let e=0;e<(null===(o=r.vs)||void 0===o?void 0:o.length);e++){const a=t.getNode(r.vs[e]);a&&(a.data.order=e)}((t,e,a)=>{const i={};let o;null==a||a.forEach((a=>{let n,d,r=t.getParent(a);for(;r;){if(n=t.getParent(r.id),n?(d=i[n.id],i[n.id]=r.id):(d=o,o=r.id),d&&d!==r.id)return e.hasNode(d)||e.addNode({id:d,data:{}}),e.hasNode(r.id)||e.addNode({id:r.id,data:{}}),void(e.hasEdge(`e${d}-${r.id}`)||e.addEdge({id:`e${d}-${r.id}`,source:d,target:r.id,data:{}}));r=n}}))})(t,n,r.vs)}))},at=(t,e)=>{null==e||e.forEach((e=>{null==e||e.forEach(((e,a)=>{t.getNode(e).data.order=a}))}))},it=(t,e)=>{const a=(t=>{const e={};let a=0;const i=o=>{const n=a;t.getChildren(o).forEach((t=>i(t.id))),e[o]={low:n,lim:a++}};return t.getRoots().forEach((t=>i(t.id))),e})(t);e.forEach((e=>{var i,o;let n=e,d=t.getNode(n);const r=d.data.originalEdge;if(!r)return;const s=((t,e,a,i)=>{var o,n;const d=[],r=[],s=Math.min(e[a].low,e[i].low),l=Math.max(e[a].lim,e[i].lim);let c,h;c=a;do{c=null===(o=t.getParent(c))||void 0===o?void 0:o.id,d.push(c)}while(c&&(e[c].low>s||l>e[c].lim));for(h=c,c=i;c&&c!==h;)r.push(c),c=null===(n=t.getParent(c))||void 0===n?void 0:n.id;return{lca:h,path:d.concat(r.reverse())}})(t,a,r.source,r.target),l=s.path,c=s.lca;let h=0,g=l[h],u=!0;for(;n!==r.target;){if(d=t.getNode(n),u){for(;g!==c&&(null===(i=t.getNode(g))||void 0===i?void 0:i.data.maxRank)<d.data.rank;)h++,g=l[h];g===c&&(u=!1)}if(!u){for(;h<l.length-1&&(null===(o=t.getNode(l[h+1]))||void 0===o?void 0:o.data.minRank)<=d.data.rank;)h++;g=l[h]}t.hasNode(g)&&t.setParent(n,g),n=t.getSuccessors(n)[0].id}}))},ot=(t,e)=>{const a={},i=(e,i)=>{let o=0,n=0;const d=e.length,r=null==i?void 0:i[(null==i?void 0:i.length)-1];return null==i||i.forEach(((e,s)=>{var l;const c=dt(t,e),h=c?t.getNode(c.id).data.order:d;(c||e===r)&&(null===(l=i.slice(n,s+1))||void 0===l||l.forEach((e=>{var i;null===(i=t.getPredecessors(e))||void 0===i||i.forEach((i=>{var n;const d=t.getNode(i.id),r=d.data.order;!(r<o||h<r)||d.data.dummy&&(null===(n=t.getNode(e))||void 0===n?void 0:n.data.dummy)||rt(a,i.id,e)}))})),n=s+1,o=h)})),i};return(null==e?void 0:e.length)&&e.reduce(i),a},nt=(t,e)=>{const a={};function i(e,i){const o=function(t){return JSON.stringify(t.slice(1))}(e);i.get(o)||(!function(e,i,o,n,d){var r,s;let l;for(let c=i;c<o;c++)l=e[c],(null===(r=t.getNode(l))||void 0===r?void 0:r.data.dummy)&&(null===(s=t.getPredecessors(l))||void 0===s||s.forEach((e=>{const i=t.getNode(e.id);i.data.dummy&&(i.data.order<n||i.data.order>d)&&rt(a,e.id,l)})))}(...e),i.set(o,!0))}const o=(e,a)=>{let o,n=-1,d=0;const r=new Map;return null==a||a.forEach(((s,l)=>{var c;if("border"===(null===(c=t.getNode(s))||void 0===c?void 0:c.data.dummy)){const e=t.getPredecessors(s)||[];e.length&&(o=t.getNode(e[0].id).data.order,i([a,d,l,n,o],r),d=l,n=o)}i([a,d,a.length,o,e.length],r)})),a};return(null==e?void 0:e.length)&&e.reduce(o),a},dt=(t,e)=>{var a,i;if(null===(a=t.getNode(e))||void 0===a?void 0:a.data.dummy)return null===(i=t.getPredecessors(e))||void 0===i?void 0:i.find((e=>t.getNode(e.id).data.dummy))},rt=(t,e,a)=>{let i=e,o=a;if(i>o){const t=i;i=o,o=t}let n=t[i];n||(t[i]=n={}),n[o]=!0},st=(t,e,a)=>{let i=e,o=a;if(i>a){i=a,o=e}return!!t[i]},lt=(t,e,a,i)=>{const o={},n={},d={};return null==e||e.forEach((t=>{null==t||t.forEach(((t,e)=>{o[t]=t,n[t]=t,d[t]=e}))})),null==e||e.forEach((t=>{let e=-1;null==t||t.forEach((t=>{let r=i(t).map((t=>t.id));if(r.length){r=r.sort(((t,e)=>d[t]-d[e]));const i=(r.length-1)/2;for(let s=Math.floor(i),l=Math.ceil(i);s<=l;++s){const i=r[s];n[t]===t&&e<d[i]&&!st(a,t,i)&&(n[i]=t,n[t]=o[t]=o[i],e=d[i])}}}))})),{root:o,align:n}},ct=(t,e,a,i,o,n,d)=>{var r;const s={},l=ht(t,e,a,o,n,d),c=d?"borderLeft":"borderRight",h=(t,e)=>{let a=l.getAllNodes(),i=a.pop();const o={};for(;i;)o[i.id]?t(i.id):(o[i.id]=!0,a.push(i),a=a.concat(e(i.id))),i=a.pop()};return h((t=>{s[t]=(l.getRelatedEdges(t,"in")||[]).reduce(((t,e)=>Math.max(t,(s[e.source]||0)+e.data.weight)),0)}),l.getPredecessors.bind(l)),h((e=>{const a=(l.getRelatedEdges(e,"out")||[]).reduce(((t,e)=>Math.min(t,(s[e.target]||0)-e.data.weight)),Number.POSITIVE_INFINITY),i=t.getNode(e);a!==Number.POSITIVE_INFINITY&&i.data.borderType!==c&&(s[e]=Math.max(s[e],a))}),l.getSuccessors.bind(l)),null===(r=Object.values(i))||void 0===r||r.forEach((t=>{s[t]=s[a[t]]})),s},ht=(t,e,a,i,n,d)=>{const r=new o.k,s=vt(i,n,d);return null==e||e.forEach((e=>{let i;null==e||e.forEach((e=>{const o=a[e];if(r.hasNode(o)||r.addNode({id:o,data:{}}),i){const n=a[i],d=r.getRelatedEdges(n,"out").find((t=>t.target===o));d?r.updateEdgeData(d.id,Object.assign(Object.assign({},d.data),{weight:Math.max(s(t,e,i),d.data.weight||0)})):r.addEdge({id:`e${Math.random()}`,source:n,target:o,data:{weight:Math.max(s(t,e,i),0)}})}i=e}))})),r},gt=(t,e)=>M(Object.values(e),(e=>{var a;let i=Number.NEGATIVE_INFINITY,o=Number.POSITIVE_INFINITY;return null===(a=Object.keys(e))||void 0===a||a.forEach((a=>{const n=e[a],d=yt(t,a)/2;i=Math.max(n+d,i),o=Math.min(n-d,o)})),i-o}));function ut(t,e){const a=Object.values(e),i=Math.min(...a),o=Math.max(...a);["u","d"].forEach((a=>{["l","r"].forEach((n=>{const d=a+n,r=t[d];let s;if(r===e)return;const l=Object.values(r);s="l"===n?i-Math.min(...l):o-Math.max(...l),s&&(t[d]={},Object.keys(r).forEach((e=>{t[d][e]=r[e]+s})))}))}))}const ft=(t,e)=>{const a={};return Object.keys(t.ul).forEach((i=>{if(e)a[i]=t[e.toLowerCase()][i];else{const e=Object.values(t).map((t=>t[i]));a[i]=(e[0]+e[1])/2}})),a},vt=(t,e,a)=>(i,o,n)=>{const d=i.getNode(o),r=i.getNode(n);let s=0,l=0;if(s+=d.data.width/2,d.data.hasOwnProperty("labelpos"))switch((d.data.labelpos||"").toLowerCase()){case"l":l=-d.data.width/2;break;case"r":l=d.data.width/2}if(l&&(s+=a?l:-l),l=0,s+=(d.data.dummy?e:t)/2,s+=(r.data.dummy?e:t)/2,s+=r.data.width/2,r.data.labelpos)switch((r.data.labelpos||"").toLowerCase()){case"l":l=r.data.width/2;break;case"r":l=-r.data.width/2}return l&&(s+=a?l:-l),l=0,s},yt=(t,e)=>t.getNode(e).data.width||0,pt=(t,e)=>{var a;const i=w(t);((t,e)=>{const{ranksep:a=0}=e||{},i=N(t);let o=0;null==i||i.forEach((e=>{const i=e.map((e=>t.getNode(e).data.height)),n=Math.max(...i,0);null==e||e.forEach((e=>{t.getNode(e).data.y=o+n/2})),o+=n+a}))})(i,e);const o=((t,e)=>{const{align:a,nodesep:i=0,edgesep:o=0}=e||{},n=N(t),d=Object.assign(ot(t,n),nt(t,n)),r={};let s=[];["u","d"].forEach((e=>{s="u"===e?n:Object.values(n).reverse(),["l","r"].forEach((a=>{"r"===a&&(s=s.map((t=>Object.values(t).reverse())));const n=("u"===e?t.getPredecessors:t.getSuccessors).bind(t),l=lt(0,s,d,n),c=ct(t,s,l.root,l.align,i,o,"r"===a);"r"===a&&Object.keys(c).forEach((t=>c[t]=-c[t])),r[e+a]=c}))}));const l=gt(t,r);return l&&ut(r,l),ft(r,a)})(i,e);null===(a=Object.keys(o))||void 0===a||a.forEach((t=>{i.getNode(t).data.x=o[t]}))},mt=t=>{const e={},a=i=>{var o;const n=t.getNode(i);if(!n)return 0;if(e[i])return n.data.rank;let d;return e[i]=!0,null===(o=t.getRelatedEdges(i,"out"))||void 0===o||o.forEach((t=>{const e=a(t.target)-t.data.minlen;e&&(void 0===d||e<d)&&(d=e)})),d||(d=0),n.data.rank=d,d};t.getAllNodes().filter((e=>0===t.getRelatedEdges(e.id,"in").length)).forEach((t=>a(t.id)))},xt=(t,e)=>t.getNode(e.target).data.rank-t.getNode(e.source).data.rank-e.data.minlen,wt=(t,e)=>{const a=i=>{e.getRelatedEdges(i,"both").forEach((o=>{const n=o.source,d=i===n?o.target:n;t.hasNode(d)||xt(e,o)||(t.addNode({id:d,data:{}}),t.addEdge({id:o.id,source:i,target:d,data:{}}),a(d))}))};return t.getAllNodes().forEach((t=>a(t.id))),t.getAllNodes().length},Et=(t,e)=>{const a=i=>{var o;null===(o=e.getRelatedEdges(i,"both"))||void 0===o||o.forEach((o=>{const n=o.source,d=i===n?o.target:n;t.hasNode(d)||void 0===e.getNode(d).data.layer&&xt(e,o)||(t.addNode({id:d,data:{}}),t.addEdge({id:o.id,source:i,target:d,data:{}}),a(d))}))};return t.getAllNodes().forEach((t=>a(t.id))),t.getAllNodes().length},bt=(t,e)=>M(e.getAllEdges(),(a=>t.hasNode(a.source)!==t.hasNode(a.target)?xt(e,a):1/0)),Nt=(t,e,a)=>{t.getAllNodes().forEach((t=>{const i=e.getNode(t.id);i.data.rank||(i.data.rank=0),i.data.rank+=a}))},Ot=t=>{const e=(t=>{const e=new o.k;return t.getAllNodes().forEach((t=>{e.addNode(Object.assign({},t))})),t.getAllEdges().forEach((t=>{const a=e.getRelatedEdges(t.source,"out").find((e=>e.target===t.target));a?e.updateEdgeData(null==a?void 0:a.id,Object.assign(Object.assign({},a.data),{weight:a.data.weight+t.data.weight||0,minlen:Math.max(a.data.minlen,t.data.minlen||1)})):e.addEdge({id:t.id,source:t.source,target:t.target,data:{weight:t.data.weight||0,minlen:t.data.minlen||1}})})),e})(t);mt(e);const a=(t=>{const e=new o.k({tree:[]}),a=t.getAllNodes()[0],i=t.getAllNodes().length;let n,d;for(e.addNode(a);wt(e,t)<i;)n=bt(e,t),d=e.hasNode(n.source)?xt(t,n):-xt(t,n),Nt(e,t,d);return e})(e);let i,n;for(jt(a),kt(a,e);i=St(a);)n=_t(a,e,i),Dt(a,e,i,n)},kt=(t,e)=>{let a=j(t,t.getAllNodes(),"post",!1);a=a.slice(0,(null==a?void 0:a.length)-1),a.forEach((a=>{Mt(t,e,a)}))},Mt=(t,e,a)=>{const i=t.getNode(a).data.parent;t.getRelatedEdges(a,"both").find((t=>t.target===i||t.source===i)).data.cutvalue=At(t,e,a)},At=(t,e,a)=>{const i=t.getNode(a).data.parent;let o=!0,n=e.getRelatedEdges(a,"out").find((t=>t.target===i)),d=0;return n||(o=!1,n=e.getRelatedEdges(i,"out").find((t=>t.target===a))),d=n.data.weight,e.getRelatedEdges(a,"both").forEach((e=>{const n=e.source===a,r=n?e.target:e.source;if(r!==i){const i=n===o,s=e.data.weight;if(d+=i?s:-s,Pt(t,a,r)){const e=t.getRelatedEdges(a,"both").find((t=>t.source===r||t.target===r)).data.cutvalue;d+=i?-e:e}}})),d},jt=(t,e=t.getAllNodes()[0].id)=>{zt(t,{},1,e)},zt=(t,e,a,i,o)=>{var n;const d=a;let r=a;const s=t.getNode(i);return e[i]=!0,null===(n=t.getNeighbors(i))||void 0===n||n.forEach((a=>{e[a.id]||(r=zt(t,e,r,a.id,i))})),s.data.low=d,s.data.lim=r++,o?s.data.parent=o:delete s.data.parent,r},St=t=>t.getAllEdges().find((t=>t.data.cutvalue<0)),_t=(t,e,a)=>{let i=a.source,o=a.target;e.getRelatedEdges(i,"out").find((t=>t.target===o))||(i=a.target,o=a.source);const n=t.getNode(i),d=t.getNode(o);let r=n,s=!1;n.data.lim>d.data.lim&&(r=d,s=!0);const l=e.getAllEdges().filter((e=>s===Zt(t.getNode(e.source),r)&&s!==Zt(t.getNode(e.target),r)));return M(l,(t=>xt(e,t)))},Dt=(t,e,a,i)=>{const o=t.getRelatedEdges(a.source,"both").find((t=>t.source===a.target||t.target===a.target));o&&t.removeEdge(o.id),t.addEdge({id:`e${Math.random()}`,source:i.source,target:i.target,data:{}}),jt(t),kt(t,e),Rt(t,e)},Rt=(t,e)=>{const a=t.getAllNodes().find((t=>!t.data.parent));let i=j(t,a,"pre",!1);i=i.slice(1),i.forEach((a=>{const i=t.getNode(a).data.parent;let o=e.getRelatedEdges(a,"out").find((t=>t.target===i)),n=!1;!o&&e.hasNode(i)&&(o=e.getRelatedEdges(i,"out").find((t=>t.target===a)),n=!0),e.getNode(a).data.rank=(e.hasNode(i)&&e.getNode(i).data.rank||0)+(n?null==o?void 0:o.data.minlen:-(null==o?void 0:o.data.minlen))}))},Pt=(t,e,a)=>t.getRelatedEdges(e,"both").find((t=>t.source===a||t.target===a)),Zt=(t,e)=>e.data.low<=t.data.lim&&t.data.lim<=e.data.lim,Lt=mt,It=t=>{(t=>{const e={};let a;const i=o=>{var n;const d=t.getNode(o);if(!d)return 0;if(e[o])return d.data.rank;let r;return e[o]=!0,null===(n=t.getRelatedEdges(o,"out"))||void 0===n||n.forEach((t=>{const e=i(t.target)-t.data.minlen;e&&(void 0===r||e<r)&&(r=e)})),r||(r=0),(void 0===a||r<a)&&(a=r),d.data.rank=r,r};t.getAllNodes().filter((e=>0===t.getRelatedEdges(e.id,"in").length)).forEach((t=>{t&&i(t.id)})),void 0===a&&(a=0);const o={},n=(e,a)=>{var i;const d=t.getNode(e),r=isNaN(d.data.layer)?a:d.data.layer;(void 0===d.data.rank||d.data.rank<r)&&(d.data.rank=r),o[e]||(o[e]=!0,null===(i=t.getRelatedEdges(e,"out"))||void 0===i||i.forEach((t=>{n(t.target,r+t.data.minlen)})))};t.getAllNodes().forEach((t=>{const e=t.data;e&&(isNaN(e.layer)?e.rank-=a:n(t.id,e.layer))}))})(t),(t=>{const e=new o.k({tree:[]}),a=t.getAllNodes()[0],i=t.getAllNodes().length;let n,d;for(e.addNode(a);Et(e,t)<i;)n=bt(e,t),d=e.hasNode(n.source)?xt(t,n):-xt(t,n),Nt(e,t,d)})(t)},Ct=t=>{Ot(t)},Tt=(t,e)=>{const{acyclicer:a,ranker:i,rankdir:o="tb",nodeOrder:n,keepNodeOrder:d,align:r,nodesep:s=50,edgesep:l=20,ranksep:c=50}=e;ie(t),p(t,a);const{nestingRoot:h,nodeRankFactor:g}=(t=>{const e=x(t,"root",{},"_root"),a=I(t);let i=Math.max(...Object.values(a));Math.abs(i)===1/0&&(i=1);const o=i-1,n=2*o+1;t.getAllEdges().forEach((t=>{t.data.minlen*=n}));const d=C(t)+1;return t.getRoots().forEach((i=>{L(t,e,n,d,o,a,i.id)})),{nestingRoot:e,nodeRankFactor:n}})(t);((t,e)=>{switch(e){case"network-simplex":Ct(t);break;case"tight-tree":default:It(t);break;case"longest-path":Lt(t)}})(w(t),i),Jt(t),((t,e=0)=>{const a=t.getAllNodes(),i=a.filter((t=>void 0!==t.data.rank)).map((t=>t.data.rank)),o=Math.min(...i),n=[];a.forEach((t=>{const e=(t.data.rank||0)-o;n[e]||(n[e]=[]),n[e].push(t.id)}));let d=0;for(let a=0;a<n.length;a++){const i=n[a];void 0===i?a%e!=0&&(d-=1):d&&(null==i||i.forEach((e=>{const a=t.getNode(e);a&&(a.data.rank=a.data.rank||0,a.data.rank+=d)})))}})(t,g),((t,e)=>{e&&t.removeNode(e),t.getAllEdges().forEach((e=>{e.data.nestingEdge&&t.removeEdge(e.id)}))})(t,h),(t=>{const e=t.getAllNodes().filter((t=>void 0!==t.data.rank)).map((t=>t.data.rank)),a=Math.min(...e);t.getAllNodes().forEach((t=>{t.data.hasOwnProperty("rank")&&a!==1/0&&(t.data.rank-=a)}))})(t),Xt(t),Kt(t);const u=[];((t,e)=>{t.getAllEdges().forEach((a=>q(t,a,e)))})(t,u),it(t,u),(t=>{const e=a=>{const i=t.getChildren(a),o=t.getNode(a);if((null==i?void 0:i.length)&&i.forEach((t=>e(t.id))),o.data.hasOwnProperty("minRank")){o.data.borderLeft=[],o.data.borderRight=[];for(let e=o.data.minRank,i=o.data.maxRank+1;e<i;e+=1)z(t,"borderLeft","_bl",a,o,e),z(t,"borderRight","_br",a,o,e)}};t.getRoots().forEach((t=>e(t.id)))})(t),d&&((t,e)=>{const a=t.getAllNodes().filter((e=>{var a;return!(null===(a=t.getChildren(e.id))||void 0===a?void 0:a.length)})).map((t=>t.data.rank)),i=Math.max(...a),o=[];for(let t=0;t<i+1;t++)o[t]=[];null==e||e.forEach((e=>{const a=t.getNode(e);a&&!a.data.dummy&&(isNaN(a.data.rank)||(a.data.fixorder=o[a.data.rank].length,o[a.data.rank].push(e)))}))})(t,n),((t,e)=>{const a=k(t),i=[],o=[];for(let t=1;t<a+1;t++)i.push(t);for(let t=a-1;t>-1;t--)o.push(t);const n=tt(t,i,"in"),d=tt(t,o,"out");let r=$(t);at(t,r);let s,l=Number.POSITIVE_INFINITY;for(let a=0,i=0;i<4;++a,++i){et(a%2?n:d,a%4>=2,!1,e),r=N(t);const o=W(t,r);o<l&&(i=0,s=(0,F.Z)(r),l=o)}r=$(t),at(t,r);for(let a=0,i=0;i<4;++a,++i){et(a%2?n:d,a%4>=2,!0,e),r=N(t);const o=W(t,r);o<l&&(i=0,s=(0,F.Z)(r),l=o)}at(t,s)})(t,d),oe(t),((t,e)=>{const a=e.toLowerCase();"lr"!==a&&"rl"!==a||S(t)})(t,o),pt(t,{align:r,nodesep:s,edgesep:l,ranksep:c}),ne(t),ae(t),((t,e)=>{e.forEach((e=>{let a=t.getNode(e);const{data:i}=a,o=i.originalEdge;let n;o&&t.addEdge(o);let d=e;for(;a.data.dummy;)n=t.getSuccessors(d)[0],t.removeNode(d),o.data.points.push({x:a.data.x,y:a.data.y}),a.data.dummy===T&&(o.data.x=a.data.x,o.data.y=a.data.y,o.data.width=a.data.width,o.data.height=a.data.height),d=n.id,a=t.getNode(d)}))})(t,u),te(t),((t,e)=>{const a=e.toLowerCase();"bt"!==a&&"rl"!==a||D(t),"lr"!==a&&"rl"!==a||(P(t),S(t))})(t,o);const{width:f,height:v}=Ut(t);return Qt(t),ee(t),(t=>{t.getAllEdges().forEach((e=>{const a=e.data;if(a.reversed){t.removeEdge(e.id);const i=a.forwardName;delete a.reversed,delete a.forwardName,t.addEdge({id:e.id,source:e.target,target:e.source,data:Object.assign(Object.assign({},a),{forwardName:i})})}}))})(t),{width:f,height:v}},qt=(t,e)=>{t.getAllNodes().forEach((a=>{const i=t.getNode(a.id);if(e.hasNode(a.id)){const t=e.getNode(a.id);i.data.fixorder=t.data._order,delete t.data._order}else delete i.data.fixorder}))},Ft=(t,e)=>{t.getAllNodes().forEach((a=>{var i;const o=t.getNode(a.id);if(o){const t=e.getNode(a.id);o.data.x=t.data.x,o.data.y=t.data.y,o.data._order=t.data.order,o.data._rank=t.data.rank,(null===(i=e.getChildren(a.id))||void 0===i?void 0:i.length)&&(o.data.width=t.data.width,o.data.height=t.data.height)}})),t.getAllEdges().forEach((a=>{const i=t.getEdge(a.id),o=e.getEdge(a.id);i.data.points=o?o.data.points:[],o&&o.data.hasOwnProperty("x")&&(i.data.x=o.data.x,i.data.y=o.data.y)}))},Bt=["width","height","layer","fixorder"],Gt={width:0,height:0},Wt=["minlen","weight","width","height","labeloffset"],$t={minlen:1,weight:1,width:0,height:0,labeloffset:10,labelpos:"r"},Vt=["labelpos"],Ht=t=>{const e=new o.k({tree:[]});return t.getAllNodes().forEach((a=>{const i=re(t.getNode(a.id).data),o=Object.assign(Object.assign({},Gt),i),n=de(o,Bt);e.hasNode(a.id)||e.addNode({id:a.id,data:Object.assign({},n)});const d=t.hasTreeStructure("combo")?t.getParent(a.id,"combo"):t.getParent(a.id);(0,r.Z)(d)||(e.hasNode(d.id)||e.addNode(Object.assign({},d)),e.setParent(a.id,d.id))})),t.getAllEdges().forEach((a=>{const i=re(t.getEdge(a.id).data),o={};null==Vt||Vt.forEach((t=>{void 0!==i[t]&&(o[t]=i[t])})),e.addEdge({id:a.id,source:a.source,target:a.target,data:Object.assign({},$t,de(i,Wt),o)})})),e},Yt=(t,e)=>{const{ranksep:a=0,rankdir:i}=e;return t.getAllNodes().forEach((t=>{isNaN(t.data.layer)||t.data.layer||(t.data.layer=0)})),t.getAllEdges().forEach((t=>{var e;t.data.minlen*=2,"c"!==(null===(e=t.data.labelpos)||void 0===e?void 0:e.toLowerCase())&&("TB"===i||"BT"===i?t.data.width+=t.data.labeloffset:t.data.height+=t.data.labeloffset)})),a/2},Jt=t=>{t.getAllEdges().forEach((e=>{if(e.data.width&&e.data.height){const a=t.getNode(e.source),i={e:e,rank:(t.getNode(e.target).data.rank-a.data.rank)/2+a.data.rank};x(t,"edge-proxy",i,"_ep")}}))},Xt=t=>{let e=0;return t.getAllNodes().forEach((a=>{var i,o;a.data.borderTop&&(a.data.minRank=null===(i=t.getNode(a.data.borderTop))||void 0===i?void 0:i.data.rank,a.data.maxRank=null===(o=t.getNode(a.data.borderBottom))||void 0===o?void 0:o.data.rank,e=Math.max(e,a.data.maxRank||-1/0))})),e},Kt=t=>{t.getAllNodes().forEach((e=>{"edge-proxy"===e.data.dummy&&(t.getEdge(e.data.e.id).data.labelRank=e.data.rank,t.removeNode(e.id))}))},Ut=(t,e)=>{let a,i,o=0,n=0;const{marginx:d=0,marginy:r=0}=e||{},s=t=>{if(!t.data)return;const e=t.data.x,d=t.data.y,r=t.data.width,s=t.data.height;isNaN(e)||isNaN(r)||(void 0===a&&(a=e-r/2),a=Math.min(a,e-r/2),o=Math.max(o,e+r/2)),isNaN(d)||isNaN(s)||(void 0===i&&(i=d-s/2),i=Math.min(i,d-s/2),n=Math.max(n,d+s/2))};return t.getAllNodes().forEach((t=>{s(t)})),t.getAllEdges().forEach((t=>{(null==t?void 0:t.data.hasOwnProperty("x"))&&s(t)})),a-=d,i-=r,t.getAllNodes().forEach((t=>{t.data.x-=a,t.data.y-=i})),t.getAllEdges().forEach((t=>{var e;null===(e=t.data.points)||void 0===e||e.forEach((t=>{t.x-=a,t.y-=i})),t.data.hasOwnProperty("x")&&(t.data.x-=a),t.data.hasOwnProperty("y")&&(t.data.y-=i)})),{width:o-a+d,height:n-i+r}},Qt=t=>{t.getAllEdges().forEach((e=>{const a=t.getNode(e.source),i=t.getNode(e.target);let o,n;e.data.points?(o=e.data.points[0],n=e.data.points[e.data.points.length-1]):(e.data.points=[],o={x:i.data.x,y:i.data.y},n={x:a.data.x,y:a.data.y}),e.data.points.unshift(b(a.data,o)),e.data.points.push(b(i.data,n))}))},te=t=>{t.getAllEdges().forEach((t=>{if(t.data.hasOwnProperty("x"))switch("l"!==t.data.labelpos&&"r"!==t.data.labelpos||(t.data.width-=t.data.labeloffset),t.data.labelpos){case"l":t.data.x-=t.data.width/2+t.data.labeloffset;break;case"r":t.data.x+=t.data.width/2+t.data.labeloffset}}))},ee=t=>{t.getAllEdges().forEach((t=>{var e;t.data.reversed&&(null===(e=t.data.points)||void 0===e||e.reverse())}))},ae=t=>{t.getAllNodes().forEach((e=>{var a,i,o;if(null===(a=t.getChildren(e.id))||void 0===a?void 0:a.length){const a=t.getNode(e.id),n=t.getNode(a.data.borderTop),d=t.getNode(a.data.borderBottom),r=t.getNode(a.data.borderLeft[(null===(i=a.data.borderLeft)||void 0===i?void 0:i.length)-1]),s=t.getNode(a.data.borderRight[(null===(o=a.data.borderRight)||void 0===o?void 0:o.length)-1]);a.data.width=Math.abs((null==s?void 0:s.data.x)-(null==r?void 0:r.data.x))||10,a.data.height=Math.abs((null==d?void 0:d.data.y)-(null==n?void 0:n.data.y))||10,a.data.x=((null==r?void 0:r.data.x)||0)+a.data.width/2,a.data.y=((null==n?void 0:n.data.y)||0)+a.data.height/2}})),t.getAllNodes().forEach((e=>{"border"===e.data.dummy&&t.removeNode(e.id)}))},ie=t=>{t.getAllEdges().forEach((e=>{if(e.source===e.target){const a=t.getNode(e.source);a.data.selfEdges||(a.data.selfEdges=[]),a.data.selfEdges.push(e),t.removeEdge(e.id)}}))},oe=t=>{const e=N(t);null==e||e.forEach((e=>{let a=0;null==e||e.forEach(((e,i)=>{var o;const n=t.getNode(e);n.data.order=i+a,null===(o=n.data.selfEdges)||void 0===o||o.forEach((e=>{x(t,"selfedge",{width:e.data.width,height:e.data.height,rank:n.data.rank,order:i+ ++a,e:e},"_se")})),delete n.data.selfEdges}))}))},ne=t=>{t.getAllNodes().forEach((e=>{const a=t.getNode(e.id);if("selfedge"===a.data.dummy){const i=t.getNode(a.data.e.source),o=i.data.x+i.data.width/2,n=i.data.y,d=a.data.x-o,r=i.data.height/2;t.hasEdge(a.data.e.id)?t.updateEdgeData(a.data.e.id,a.data.e.data):t.addEdge({id:a.data.e.id,source:a.data.e.source,target:a.data.e.target,data:a.data.e.data}),t.removeNode(e.id),a.data.e.data.points=[{x:o+2*d/3,y:n-r},{x:o+5*d/6,y:n-r},{y:n,x:o+d},{x:o+5*d/6,y:n+r},{x:o+2*d/3,y:n+r}],a.data.e.data.x=a.data.x,a.data.e.data.y=a.data.y}}))},de=(t,e)=>{const a={};return null==e||e.forEach((e=>{void 0!==t[e]&&(a[e]=+t[e])})),a},re=(t={})=>{const e={};return Object.keys(t).forEach((a=>{e[a.toLowerCase()]=t[a]})),e};var se=a(1139),le=a(12492);function ce(t){if(!t)return[0,0,0];if((0,d.Z)(t))return[t,t,t];if(0===t.length)return[0,0,0];const[e,a=e,i=e]=t;return[e,a,i]}function he(t,e){let a;return a=(0,se.Z)(e)?e:(0,d.Z)(e)?()=>e:()=>t,a}function ge(t,e,a=!0){return e||0===e?(0,se.Z)(e)?e:(0,d.Z)(e)?()=>e:Array.isArray(e)?()=>a?Math.max(...e)||t:e:(0,le.Z)(e)&&e.width&&e.height?()=>a?Math.max(e.width,e.height)||t:[e.width,e.height]:()=>t:e=>{const{size:i}=e.data||{};return i?Array.isArray(i)?a?Math.max(...i)||t:i:(0,le.Z)(i)&&i.width&&i.height?a?Math.max(i.width,i.height)||t:[i.width,i.height]:i:t}}const ue=(t,e,a=10)=>{let i;const o="function"==typeof e?e:()=>e||0;i=t?Array.isArray(t)?e=>t:(0,se.Z)(t)?t:e=>t:t=>{var e,i,o;if(null===(e=t.data)||void 0===e?void 0:e.bboxSize)return null===(i=t.data)||void 0===i?void 0:i.bboxSize;if(null===(o=t.data)||void 0===o?void 0:o.size){const e=t.data.size;return Array.isArray(e)?e:(0,le.Z)(e)?[e.width,e.height]:e}return a};return t=>{const e=i(t),a=o(t);return Math.max(...ce(e))+a}},fe=t=>{if(null===t)return t;if(t instanceof Date)return new Date(t.getTime());if(t instanceof Array){const e=[];return t.forEach((t=>{e.push(t)})),e.map((t=>fe(t)))}if("object"==typeof t){const e={};return Object.keys(t).forEach((a=>{e[a]=fe(t[a])})),e}return t},ve=(t,e)=>{const a=fe(t);return a.data=a.data||{},e&&((0,d.Z)(a.data.x)||(a.data.x=Math.random()*e[0]),(0,d.Z)(a.data.y)||(a.data.y=Math.random()*e[1])),a},ye={rankdir:"TB",nodesep:50,ranksep:50,edgeLabelSpace:!0,ranker:"tight-tree",controlPoints:!1,radial:!1,focusNode:null};const pe=(t,e,a,i,o,n,d)=>{let r=(null==t?void 0:t.slice(1,t.length-1))||[];if(e&&a){let{x:t,y:s}=e.data,{x:l,y:c}=a.data;if(o&&(t=e.data.y,s=e.data.x,l=a.data.y,c=a.data.x),c!==s&&t!==l){const h=i.indexOf(s),g=i[h+1];if(g){const t=r[0],e=o?{x:(s+g)/2,y:(null==t?void 0:t.y)||l}:{x:(null==t?void 0:t.x)||l,y:(s+g)/2};t&&!n(t,e)||r.unshift(e)}const u=i.indexOf(c),f=Math.abs(u-h);if(1===f)r=d(r,e.data,a.data),r.length||r.push(o?{x:(s+c)/2,y:t}:{x:t,y:(s+c)/2});else if(f>1){const e=i[u-1];if(e){const a=r[r.length-1],i=o?{x:(c+e)/2,y:(null==a?void 0:a.y)||l}:{x:(null==a?void 0:a.x)||t,y:(c+e)/2};a&&!n(a,i)||r.push(i)}}}}return r},me=(t,e,a)=>{const i=t.getAllNodes(),o=t.getAllEdges();if(!(null==i?void 0:i.length)){return{nodes:[],edges:o}}if(1===i.length){e&&t.mergeNodeData(i[0].id,{x:a[0],y:a[1]});return{nodes:[Object.assign(Object.assign({},i[0]),{data:Object.assign(Object.assign({},i[0].data),{x:a[0],y:a[1]})})],edges:o}}},xe={radius:null,startRadius:null,endRadius:null,startAngle:0,endAngle:2*Math.PI,clockwise:!0,divisions:1,ordering:null,angleRatio:1};const we=(t,e,a=!1)=>{const i=[ve(e[0])],o={},n=e.length;o[e[0].id]=!0;let d=0;return e.forEach(((r,s)=>{if(0!==s)if(s!==n-1&&t.getDegree(r.id,"both")===t.getDegree(e[s+1].id,"both")&&!t.areNeighbors(i[d].id,r.id)||o[r.id]){const s=a?t.getSuccessors(i[d].id):t.getNeighbors(i[d].id);let l=!1;for(let e=0;e<s.length;e++){const a=s[e];if(t.getDegree(a.id)===t.getDegree(r.id)&&!o[a.id]){i.push(ve(a)),o[a.id]=!0,l=!0;break}}let c=0;for(;!l&&(o[e[c].id]||(i.push(ve(e[c])),o[e[c].id]=!0,l=!0),c++,c!==n););}else i.push(ve(r)),o[r.id]=!0,d++})),i};const Ee=(t,e,a)=>{let i=t,o=e,n=a;return i||"undefined"==typeof window||(i=window.innerWidth),o||"undefined"==typeof window||(o=window.innerHeight),n||(n=[i/2,o/2]),[i,o,n]};var be=a(54335);const Ne=Array.isArray,Oe={nodeSize:30,nodeSpacing:10,preventOverlap:!1,sweep:void 0,equidistant:!1,startAngle:1.5*Math.PI,clockwise:!0,maxLevelDiff:void 0,sortBy:"degree"};class ke{constructor(t={}){this.options=t,this.id="concentric",this.options=Object.assign(Object.assign({},Oe),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericConcentricLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericConcentricLayout(!0,t,e)}))}genericConcentricLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},this.options),a),{center:o,width:n,height:r,sortBy:s,maxLevelDiff:l,sweep:c,clockwise:h,equidistant:g,preventOverlap:u,startAngle:f=1.5*Math.PI,nodeSize:v,nodeSpacing:y}=i,p=e.getAllNodes(),m=e.getAllEdges(),x=n||"undefined"==typeof window?n:window.innerWidth,w=r||"undefined"==typeof window?r:window.innerHeight,E=o||[x/2,w/2];if(!(null==p?void 0:p.length)||1===p.length)return me(e,t,E);const b=[];let N,O=0;Ne(v)?N=Math.max(v[0],v[1]):(0,se.Z)(v)?(N=-1/0,p.forEach((t=>{const e=Math.max(...ce(v(t)));e>N&&(N=e)}))):N=v,Ne(y)?O=Math.max(y[0],y[1]):(0,d.Z)(y)&&(O=y),p.forEach((t=>{const e=ve(t);b.push(e);let a=N;const{data:i}=e;Ne(i.size)?a=Math.max(i.size[0],i.size[1]):(0,d.Z)(i.size)?a=i.size:(0,le.Z)(i.size)&&(a=Math.max(i.size.width,i.size.height)),N=Math.max(N,a),(0,se.Z)(y)&&(O=Math.max(y(t),O))}));const k={};b.forEach(((t,e)=>{k[t.id]=e}));let M=s;(0,be.Z)(M)&&void 0!==b[0].data[M]||(M="degree"),"degree"===M?b.sort(((t,a)=>e.getDegree(a.id,"both")-e.getDegree(t.id,"both"))):b.sort(((t,e)=>e.data[M]-t.data[M]));const A=b[0],j=(l||("degree"===M?e.getDegree(A.id,"both"):A.data[M]))/4,z=[{nodes:[]}];let S=z[0];b.forEach((t=>{if(S.nodes.length>0){const a="degree"===M?Math.abs(e.getDegree(S.nodes[0].id,"both")-e.getDegree(t.id,"both")):Math.abs(S.nodes[0].data[M]-t.data[M]);j&&a>=j&&(S={nodes:[]},z.push(S))}S.nodes.push(t)}));let _=N+O;if(!u){const t=z.length>0&&z[0].nodes.length>1,e=(Math.min(x,w)/2-_)/(z.length+(t?1:0));_=Math.min(_,e)}let D=0;if(z.forEach((t=>{const e=void 0===c?2*Math.PI-2*Math.PI/t.nodes.length:c;if(t.dTheta=e/Math.max(1,t.nodes.length-1),t.nodes.length>1&&u){const e=Math.cos(t.dTheta)-Math.cos(0),a=Math.sin(t.dTheta)-Math.sin(0),i=Math.sqrt(_*_/(e*e+a*a));D=Math.max(i,D)}t.r=D,D+=_})),g){let t=0,e=0;for(let a=0;a<z.length;a++){const i=(z[a].r||0)-e;t=Math.max(t,i)}e=0,z.forEach(((a,i)=>{0===i&&(e=a.r||0),a.r=e,e+=t}))}z.forEach((t=>{const e=t.dTheta||0,a=t.r||0;t.nodes.forEach(((t,i)=>{const o=f+(h?1:-1)*e*i;t.data.x=E[0]+a*Math.cos(o),t.data.y=E[1]+a*Math.sin(o)}))})),t&&b.forEach((t=>e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y})));return{nodes:b,edges:m}}))}}var Me=a(90418),Ae=a(52674);const je=.1;function ze(t,e,a,i,o=2){const n=e/a,d=t.getAllNodes(),r=d.map(((t,e)=>{const{nodeStrength:a,x:i,y:o,z:d,size:r}=t.data;return{x:i,y:o,z:d,size:r,index:e,id:t.id,vx:0,vy:0,vz:0,weight:n*a}})),s=(2===o?(0,Me.Z)(r,(t=>t.x),(t=>t.y)):(0,Ae.Z)(r,(t=>t.x),(t=>t.y),(t=>t.z))).visitAfter(Se),l=new Map;return r.forEach((t=>{l.set(t.id,t),function(t,e,a){e.visit(((e,i,o,n,d)=>((t,e,a,i,o,n,d)=>{var r;if((null===(r=t.data)||void 0===r?void 0:r.id)===n.id)return;const s=[a,i,o][d-1],l=n.x-t.x||je,c=n.y-t.y||je,h=n.z-t.z||je,g=[l,c,h],u=s-e;let f=0;for(let t=0;t<d;t++)f+=g[t]*g[t];const v=Math.sqrt(f)*f;if(u*u*.81<f){const e=t.weight/v;return n.vx+=l*e,n.vy+=c*e,n.vz+=h*e,!0}if(t.length)return!1;if(t.data!==n){const e=t.data.weight/v;n.vx+=l*e,n.vy+=c*e,n.vz+=h*e}})(e,i,o,n,d,t,a)))}(t,s,o)})),r.map(((t,e)=>{const{id:a,data:o}=d[e],{mass:n=1}=o;i[a]={x:t.vx/n,y:t.vy/n,z:t.vz/n}})),i}function Se(t){let e=0,a=0,i=0,o=0,n=0;const d=t.length;if(d){for(let r=0;r<d;r++){const d=t[r];d&&d.weight&&(e+=d.weight,a+=d.x*d.weight,i+=d.y*d.weight,o+=d.z*d.weight,n+=d.size*d.weight)}t.x=a/e,t.y=i/e,t.z=o/e,t.size=n/e,t.weight=e}else{const e=t;t.x=e.data.x,t.y=e.data.y,t.z=e.data.z,t.size=e.data.size,t.weight=e.data.weight}}const _e={dimensions:2,maxIteration:500,gravity:10,factor:1,edgeStrength:50,nodeStrength:1e3,coulombDisScale:.005,damping:.9,maxSpeed:200,minMovement:.4,interval:.02,linkDistance:200,clusterNodeStrength:20,preventOverlap:!0,distanceThresholdMode:"mean"};class De{constructor(t={}){this.options=t,this.id="force",this.timeInterval=0,this.judgingDistance=0,this.running=!1,this.options=Object.assign(Object.assign({},_e),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericForceLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericForceLayout(!0,t,e)}))}stop(){this.timeInterval&&"undefined"!=typeof window&&window.clearInterval(this.timeInterval),this.running=!1}tick(t=this.options.maxIteration||1){if(this.lastResult)return this.lastResult;for(let e=0;(this.judgingDistance>this.lastOptions.minMovement||e<1)&&e<t;e++)this.runOneStep(this.lastCalcGraph,this.lastGraph,e,this.lastVelMap,this.lastOptions),this.updatePosition(this.lastGraph,this.lastCalcGraph,this.lastVelMap,this.lastOptions);const e={nodes:this.lastLayoutNodes,edges:this.lastLayoutEdges};return this.lastAssign&&e.nodes.forEach((t=>this.lastGraph.mergeNodeData(t.id,{x:t.data.x,y:t.data.y,z:3===this.options.dimensions?t.data.z:void 0}))),e}genericForceLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},this.options),a),n=e.getAllNodes(),r=e.getAllEdges(),s=this.formatOptions(i,e),{dimensions:l,width:c,height:h,nodeSize:g,getMass:u,nodeStrength:f,edgeStrength:v,linkDistance:y}=s,p=n.map(((t,e)=>Object.assign(Object.assign({},t),{data:Object.assign(Object.assign({},t.data),{x:(0,d.Z)(t.data.x)?t.data.x:Math.random()*c,y:(0,d.Z)(t.data.y)?t.data.y:Math.random()*h,z:(0,d.Z)(t.data.z)?t.data.z:Math.random()*Math.sqrt(c*h),size:g(t)||30,mass:u(t),nodeStrength:f(t)})}))),m=r.map((t=>Object.assign(Object.assign({},t),{data:Object.assign(Object.assign({},t.data),{edgeStrength:v(t),linkDistance:y(t,e.getNode(t.source),e.getNode(t.target))})})));if(!(null==n?void 0:n.length))return this.lastResult={nodes:[],edges:r},{nodes:[],edges:r};const x={};n.forEach(((t,e)=>{x[t.id]={x:0,y:0,z:0}}));const w=new o.k({nodes:p,edges:m});this.formatCentripetal(s,w);const{maxIteration:E,minMovement:b,onTick:N}=s;if(this.lastLayoutNodes=p,this.lastLayoutEdges=m,this.lastAssign=t,this.lastGraph=e,this.lastCalcGraph=w,this.lastOptions=s,this.lastVelMap=x,"undefined"==typeof window)return;let O=0;return new Promise((a=>{this.timeInterval=window.setInterval((()=>{n&&this.running||a({nodes:Ie(e,p),edges:r}),this.runOneStep(w,e,O,x,s),this.updatePosition(e,w,x,s),t&&p.forEach((t=>e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y,z:3===l?t.data.z:void 0}))),null==N||N({nodes:Ie(e,p),edges:r}),O++,(O>=E||this.judgingDistance<b)&&(window.clearInterval(this.timeInterval),a({nodes:Ie(e,p),edges:r}))}),0),this.running=!0}))}))}formatOptions(t,e){const a=Object.assign({},t),{width:i,height:o,getMass:n}=t;a.width=i||"undefined"==typeof window?i:window.innerWidth,a.height=o||"undefined"==typeof window?o:window.innerHeight,t.center||(a.center=[a.width/2,a.height/2]),n||(a.getMass=t=>{let a=1;(0,d.Z)(null==t?void 0:t.data.mass)&&(a=null==t?void 0:t.data.mass);const i=e.getDegree(t.id,"both");return!i||i<5?a:5*i*a}),a.nodeSize=ue(t.nodeSize,t.nodeSpacing);const r=t.linkDistance?he(1,t.linkDistance):t=>1+a.nodeSize(e.getNode(t.source))+a.nodeSize(e.getNode(t.target));return a.linkDistance=r,a.nodeStrength=he(1,t.nodeStrength),a.edgeStrength=he(1,t.edgeStrength),a}formatCentripetal(t,e){const{dimensions:a,centripetalOptions:i,center:o,clusterNodeStrength:n,leafCluster:d,clustering:r,nodeClusterBy:s}=t,l=e.getAllNodes(),c=i||{leaf:2,single:2,others:1,center:t=>({x:o[0],y:o[1],z:3===a?o[2]:void 0})};let h,g;if("function"!=typeof n&&(t.clusterNodeStrength=t=>n),d&&s&&(h=Re(e,s),g=Array.from(new Set(null==l?void 0:l.map((t=>t.data[s]))))||[],t.centripetalOptions=Object.assign(c,{single:100,leaf:e=>{const{siblingLeaves:a,sameTypeLeaves:i}=h[e.id]||{};return(null==i?void 0:i.length)===(null==a?void 0:a.length)||1===(null==g?void 0:g.length)?1:t.clusterNodeStrength(e)},others:1,center:t=>{const a=e.getDegree(t.id,"both");if(!a)return{x:100,y:100,z:0};let i;if(1===a){const{sameTypeLeaves:e=[]}=h[t.id]||{};1===e.length?i=void 0:e.length>1&&(i=Le(e))}else i=void 0;return{x:null==i?void 0:i.x,y:null==i?void 0:i.y,z:null==i?void 0:i.z}}})),r&&s){h||(h=Re(e,s)),g||(g=Array.from(new Set(l.map((t=>t.data[s]))))),g=g.filter((t=>void 0!==t));const a={};g.forEach((t=>{const i=l.filter((e=>e.data[s]===t)).map((t=>e.getNode(t.id)));a[t]=Le(i)})),t.centripetalOptions=Object.assign(c,{single:e=>t.clusterNodeStrength(e),leaf:e=>t.clusterNodeStrength(e),others:e=>t.clusterNodeStrength(e),center:t=>{const e=a[t.data[s]];return{x:null==e?void 0:e.x,y:null==e?void 0:e.y,z:null==e?void 0:e.z}}})}const{leaf:u,single:f,others:v}=t.centripetalOptions||{};u&&"function"!=typeof u&&(t.centripetalOptions.leaf=()=>u),f&&"function"!=typeof f&&(t.centripetalOptions.single=()=>f),v&&"function"!=typeof v&&(t.centripetalOptions.others=()=>v)}runOneStep(t,e,a,i,o){const n={},d=t.getAllNodes(),r=t.getAllEdges();if(!(null==d?void 0:d.length))return;const{monitor:s}=o;if(this.calRepulsive(t,n,o),r&&this.calAttractive(t,n,o),this.calGravity(t,e,n,o),this.updateVelocity(t,n,i,o),s){s({energy:this.calTotalEnergy(n,d),nodes:e.getAllNodes(),edges:e.getAllEdges(),iterations:a})}}calTotalEnergy(t,e){if(!(null==e?void 0:e.length))return 0;let a=0;return e.forEach(((e,i)=>{const o=t[e.id].x,n=t[e.id].y,d=3===this.options.dimensions?t[e.id].z:0,r=o*o+n*n+d*d,{mass:s=1}=e.data;a+=s*r*.5})),a}calRepulsive(t,e,a){const{dimensions:i,factor:o,coulombDisScale:n}=a;ze(t,o,n*n,e,i)}calAttractive(t,e,a){const{dimensions:i,nodeSize:o}=a;t.getAllEdges().forEach(((a,n)=>{const{source:d,target:r}=a,s=t.getNode(d),l=t.getNode(r);if(!s||!l)return;let c=l.data.x-s.data.x,h=l.data.y-s.data.y,g=3===i?l.data.z-s.data.z:0;c||h||(c=.01*Math.random(),h=.01*Math.random(),3!==i||g||(g=.01*Math.random()));const u=Math.sqrt(c*c+h*h+g*g);if(u<o(s)+o(l))return;const f=c/u,v=h/u,y=g/u,{linkDistance:p=200,edgeStrength:m=200}=a.data||{},x=(p-u)*m,w=1/(s.data.mass||1),E=1/(l.data.mass||1),b=f*x,N=v*x,O=y*x;e[d].x-=b*w,e[d].y-=N*w,e[d].z-=O*w,e[r].x+=b*E,e[r].y+=N*E,e[r].z+=O*E}))}calGravity(t,e,a,i){const{getCenter:o}=i,n=t.getAllNodes(),r=e.getAllNodes(),s=e.getAllEdges(),{width:l,height:c,center:h,gravity:g,centripetalOptions:u}=i;n&&n.forEach((i=>{const{id:n,data:f}=i,{mass:v,x:y,y:p,z:m}=f,x=e.getNode(n);let w=0,E=0,b=0,N=g;const O=t.getDegree(n,"in"),k=t.getDegree(n,"out"),M=t.getDegree(n,"both"),A=null==o?void 0:o(x,M);if(A){const[t,e,a]=A;w=y-t,E=p-e,N=a}else w=y-h[0],E=p-h[1],b=m-h[2];if(N&&(a[n].x-=N*w/v,a[n].y-=N*E/v,a[n].z-=N*b/v),u){const{leaf:t,single:e,others:i,center:o}=u,{x:h,y:g,z:f,centerStrength:w}=(null==o?void 0:o(x,r,s,l,c))||{x:0,y:0,z:0,centerStrength:0};if(!(0,d.Z)(h)||!(0,d.Z)(g))return;const E=(y-h)/v,b=(p-g)/v,N=(m-f)/v;if(w&&(a[n].x-=w*E,a[n].y-=w*b,a[n].z-=w*N),0===M){const t=e(x);if(!t)return;return a[n].x-=t*E,a[n].y-=t*b,void(a[n].z-=t*N)}if(0===O||0===k){const e=t(x,r,s);if(!e)return;return a[n].x-=e*E,a[n].y-=e*b,void(a[n].z-=e*N)}const A=i(x);if(!A)return;a[n].x-=A*E,a[n].y-=A*b,a[n].z-=A*N}}))}updateVelocity(t,e,a,i){const{damping:o,maxSpeed:n,interval:d,dimensions:r}=i,s=t.getAllNodes();(null==s?void 0:s.length)&&s.forEach((t=>{const{id:i}=t;let s=(a[i].x+e[i].x*d)*o||.01,l=(a[i].y+e[i].y*d)*o||.01,c=3===r?(a[i].z+e[i].z*d)*o||.01:0;const h=Math.sqrt(s*s+l*l+c*c);if(h>n){const t=n/h;s*=t,l*=t,c*=t}a[i]={x:s,y:l,z:c}}))}updatePosition(t,e,a,i){const{distanceThresholdMode:o,interval:n,dimensions:r}=i,s=e.getAllNodes();if(!(null==s?void 0:s.length))return void(this.judgingDistance=0);let l=0;"max"===o?this.judgingDistance=-1/0:"min"===o&&(this.judgingDistance=1/0),s.forEach((i=>{const{id:s}=i,c=t.getNode(s);if((0,d.Z)(c.data.fx)&&(0,d.Z)(c.data.fy))return void e.mergeNodeData(s,{x:c.data.fx,y:c.data.fy,z:3===r?c.data.fz:void 0});const h=a[s].x*n,g=a[s].y*n,u=3===r?a[s].z*n:0;e.mergeNodeData(s,{x:i.data.x+h,y:i.data.y+g,z:i.data.z+u});const f=Math.sqrt(h*h+g*g+u*u);switch(o){case"max":this.judgingDistance<f&&(this.judgingDistance=f);break;case"min":this.judgingDistance>f&&(this.judgingDistance=f);break;default:l+=f}})),o&&"mean"!==o||(this.judgingDistance=l/s.length)}}const Re=(t,e)=>{const a=t.getAllNodes();if(!(null==a?void 0:a.length))return{};const i={};return a.forEach(((a,o)=>{1===t.getDegree(a.id,"both")&&(i[a.id]=Pe(t,"leaf",a,e))})),i},Pe=(t,e,a,i)=>{const o=t.getDegree(a.id,"in"),n=t.getDegree(a.id,"out");let d=a,r=[];0===o?(d=t.getSuccessors(a.id)[0],r=t.getNeighbors(d.id)):0===n&&(d=t.getPredecessors(a.id)[0],r=t.getNeighbors(d.id)),r=r.filter((e=>0===t.getDegree(e.id,"in")||0===t.getDegree(e.id,"out")));return{coreNode:d,siblingLeaves:r,sameTypeLeaves:Ze(t,e,i,a,r)}},Ze=(t,e,a,i,o)=>{const n=i.data[a]||"";let d=(null==o?void 0:o.filter((t=>t.data[a]===n)))||[];return"leaf"===e&&(d=d.filter((e=>0===t.getDegree(e.id,"in")||0===t.getDegree(e.id,"out")))),d},Le=t=>{const e={x:0,y:0};t.forEach((t=>{const{x:a,y:i}=t.data;e.x+=a||0,e.y+=i||0}));const a=t.length||1;return{x:e.x/a,y:e.y/a}},Ie=(t,e)=>e.map((e=>{const{id:a,data:i}=e,o=t.getNode(a);return Object.assign(Object.assign({},o),{data:Object.assign(Object.assign({},o.data),{x:i.x,y:i.y,z:i.z})})}));var Ce=a(22243);const Te=t=>{const e=[],a=t.length;for(let i=0;i<a;i+=1){e[i]=[];for(let o=0;o<a;o+=1)i===o?e[i][o]=0:0!==t[i][o]&&t[i][o]?e[i][o]=t[i][o]:e[i][o]=1/0}for(let t=0;t<a;t+=1)for(let i=0;i<a;i+=1)for(let o=0;o<a;o+=1)e[i][o]>e[i][t]+e[t][o]&&(e[i][o]=e[i][t]+e[t][o]);return e},qe=(t,e)=>{const{nodes:a,edges:i}=t,o=[],n={};if(!a)throw new Error("invalid nodes data!");return a&&a.forEach(((t,e)=>{n[t.id]=e;o.push([])})),null==i||i.forEach((t=>{const{source:a,target:i}=t,d=n[a],r=n[i];void 0!==d&&void 0!==r&&(o[d][r]=1,e||(o[r][d]=1))})),o},Fe=(t,e)=>Math.sqrt((t.x-e.x)*(t.x-e.x)+(t.y-e.y)*(t.y-e.y)),Be=(t,e,a,i="TB",o,n={})=>{if(!(null==e?void 0:e.length))return;const{stopBranchFn:d,stopAllFn:r}=n;for(let s=0;s<e.length;s++){const l=e[s];if(t.hasNode(l.id)&&!(null==d?void 0:d(l))){if(null==r?void 0:r(l))return;"TB"===i&&a(l),Be(t,t.getChildren(l.id,o),a,i,o,n),"TB"!==i&&a(l)}}},Ge={center:[0,0],linkDistance:50};class We{constructor(t={}){this.options=t,this.id="mds",this.options=Object.assign(Object.assign({},Ge),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericMDSLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericMDSLayout(!0,t,e)}))}genericMDSLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},this.options),a),{center:o=[0,0],linkDistance:n=50}=i,d=e.getAllNodes(),r=e.getAllEdges();if(!(null==d?void 0:d.length)||1===d.length)return me(e,t,o);const s=qe({nodes:d,edges:r},!1),l=Te(s);$e(l);const c=((t,e)=>{const a=[];return t.forEach((t=>{const i=[];t.forEach((t=>{i.push(t*e)})),a.push(i)})),a})(l,n),h=Ve(c),g=[];h.forEach(((t,e)=>{const a=ve(d[e]);a.data.x=t[0]+o[0],a.data.y=t[1]+o[1],g.push(a)})),t&&g.forEach((t=>e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y})));return{nodes:g,edges:r}}))}}const $e=t=>{let e=-999999;t.forEach((t=>{t.forEach((t=>{t!==1/0&&e<t&&(e=t)}))})),t.forEach(((a,i)=>{a.forEach(((a,o)=>{a===1/0&&(t[i][o]=e)}))}))},Ve=t=>{const e=Ce.y3.mul(Ce.y3.pow(t,2),-.5),a=e.mean("row"),i=e.mean("column"),o=e.mean();e.add(o).subRowVector(a).subColumnVector(i);const n=new Ce.Sc(e),d=Ce.y3.sqrt(n.diagonalMatrix).diagonal();return n.leftSingularVectors.toJSON().map((t=>Ce.y3.mul([t],[d]).toJSON()[0].splice(0,2)))};function He(t){return!!t.tick&&!!t.stop}const Ye={gForce:!0,force2:!0,d3force:!0,fruchterman:!0,forceAtlas2:!0,force:!0,"graphin-force":!0},Je={center:[0,0],comboPadding:10,treeKey:"combo"};function Xe(t,e,a,o){var n;return(0,i.__awaiter)(this,void 0,void 0,(function*(){return He(t)?(t.execute(e,a),t.stop(),t.tick(null!==(n=a.iterations)&&void 0!==n?n:300)):o?yield t.assign(e,a):yield t.execute(e,a)}))}var Ke=a(53746),Ue=a(25595),Qe=a(96101),ta=a(65002),ea=a(56184),aa=a(18473),ia=a(39972),oa=a(4808),na=a(9633),da=a(88428);class ra{constructor(t){this.id="d3-force",this.config={inputNodeAttrs:["x","y","vx","vy","fx","fy"],outputNodeAttrs:["x","y","vx","vy"],simulationAttrs:["alpha","alphaMin","alphaDecay","alphaTarget","velocityDecay","randomSource"]},this.forceMap={link:Qe.Z,manyBody:ta.Z,center:ea.Z,collide:aa.Z,radial:ia.Z,x:oa.Z,y:na.Z},this.options={link:{id:t=>t.id},manyBody:{},center:{x:0,y:0}},this.context={options:{},assign:!1,nodes:[],edges:[]},(0,Ke.Z)(this.options,t),this.options.forceSimulation&&(this.simulation=this.options.forceSimulation)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericLayout(!0,t,e)}))}stop(){this.simulation.stop()}tick(t){return this.simulation.tick(t),this.getResult()}restart(){this.simulation.restart()}setFixedPosition(t,e){const a=this.context.nodes.find((e=>e.id===t));a&&e.forEach(((t,e)=>{if("number"==typeof t||null===t){a[["fx","fy","fz"][e]]=t}}))}getOptions(t){var e,a;const i=(0,Ke.Z)({},this.options,t);return i.collide&&void 0===(null===(e=i.collide)||void 0===e?void 0:e.radius)&&(i.collide=i.collide||{},i.collide.radius=null!==(a=i.nodeSize)&&void 0!==a?a:10),void 0===i.iterations&&(i.link&&void 0===i.link.iterations&&(i.iterations=i.link.iterations),i.collide&&void 0===i.collide.iterations&&(i.iterations=i.collide.iterations)),this.context.options=i,i}genericLayout(t,e,a){var o;return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=this.getOptions(a),n=e.getAllNodes().map((({id:t,data:e})=>Object.assign(Object.assign({id:t},e),(0,Ue.Z)(e.data,this.config.inputNodeAttrs)))),d=e.getAllEdges().map((t=>Object.assign({},t)));Object.assign(this.context,{assign:t,nodes:n,edges:d,graph:e});const r=new Promise((t=>{this.resolver=t})),s=this.setSimulation(i);return s.nodes(n),null===(o=s.force("link"))||void 0===o||o.links(d),r}))}getResult(){const{assign:t,nodes:e,edges:a,graph:i}=this.context,o=e.map((t=>({id:t.id,data:Object.assign(Object.assign({},t.data),(0,Ue.Z)(t,this.config.outputNodeAttrs))}))),n=a.map((({id:t,source:e,target:a,data:i})=>({id:t,source:"object"==typeof e?e.id:e,target:"object"==typeof a?a.id:a,data:i})));return t&&o.forEach((t=>i.mergeNodeData(t.id,t.data))),{nodes:o,edges:n}}initSimulation(){return(0,da.Z)()}setSimulation(t){const e=this.simulation||this.options.forceSimulation||this.initSimulation();return this.simulation||(this.simulation=e.on("tick",(()=>{var e;return null===(e=t.onTick)||void 0===e?void 0:e.call(t,this.getResult())})).on("end",(()=>{var t;return null===(t=this.resolver)||void 0===t?void 0:t.call(this,this.getResult())}))),sa(e,this.config.simulationAttrs.map((e=>[e,t[e]]))),Object.entries(this.forceMap).forEach((([a,i])=>{const o=a;if(t[a]){let a=e.force(o);a||(a=i(),e.force(o,a)),sa(a,Object.entries(t[o]))}else e.force(o,null)})),e}}const sa=(t,e)=>e.reduce(((e,[a,i])=>e[a]&&void 0!==i?e[a].call(t,i):e),t);var la=a(68718),ca=a(67247),ha=a(4401),ga=a(81751),ua=a(33423),fa=a(56574),va=a(48859),ya=a(59061),pa=a(17564);var ma=a(15439),xa=a.n(ma);class wa{constructor(t){this.id="dagre",this.options={},Object.assign(this.options,wa.defaultOptions,t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericDagreLayout(!1,t,Object.assign(Object.assign({},this.options),e))}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericDagreLayout(!0,t,Object.assign(Object.assign({},this.options),e))}))}genericDagreLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const{nodeSize:o}=a,n=new ma.graphlib.Graph;n.setGraph(a),n.setDefaultEdgeLabel((()=>({})));[...e.getAllNodes(),...e.getAllEdges()].some((({id:t})=>(0,d.Z)(t)))&&console.error("Dagre layout only support string id, it will convert number to string."),e.getAllNodes().forEach((t=>{const{id:e}=t,a=Object.assign({},t.data);if(void 0!==o){const[e,i]=ce((0,se.Z)(o)?o(t):o);Object.assign(a,{width:e,height:i})}n.setNode(e.toString(),a)})),e.getAllEdges().forEach((({id:t,source:e,target:a})=>{n.setEdge(e.toString(),a.toString(),{id:t})})),xa().layout(n);const r={nodes:[],edges:[]};return n.nodes().forEach((a=>{const i=n.node(a);r.nodes.push({id:a,data:i}),t&&e.mergeNodeData(a,i)})),n.edges().forEach((a=>{const o=n.edge(a),{id:d}=o,s=(0,i.__rest)(o,["id"]),{v:l,w:c}=a;r.edges.push({id:d,source:l,target:c,data:s}),t&&e.mergeEdgeData(d,s)})),r}))}}wa.defaultOptions={};class Ea{constructor(t){this.id=t.id||0,this.rx=t.rx,this.ry=t.ry,this.fx=0,this.fy=0,this.mass=t.mass,this.degree=t.degree,this.g=t.g||0}distanceTo(t){const e=this.rx-t.rx,a=this.ry-t.ry;return Math.hypot(e,a)}setPos(t,e){this.rx=t,this.ry=e}resetForce(){this.fx=0,this.fy=0}addForce(t){const e=t.rx-this.rx,a=t.ry-this.ry;let i=Math.hypot(e,a);i=i<1e-4?1e-4:i;const o=this.g*(this.degree+1)*(t.degree+1)/i;this.fx+=o*e/i,this.fy+=o*a/i}in(t){return t.contains(this.rx,this.ry)}add(t){const e=this.mass+t.mass,a=(this.rx*this.mass+t.rx*t.mass)/e,i=(this.ry*this.mass+t.ry*t.mass)/e,o=this.degree+t.degree;return new Ea({rx:a,ry:i,mass:e,degree:o})}}class ba{constructor(t){this.xmid=t.xmid,this.ymid=t.ymid,this.length=t.length,this.massCenter=t.massCenter||[0,0],this.mass=t.mass||1}getLength(){return this.length}contains(t,e){const a=this.length/2;return t<=this.xmid+a&&t>=this.xmid-a&&e<=this.ymid+a&&e>=this.ymid-a}NW(){const t=this.xmid-this.length/4,e=this.ymid+this.length/4,a=this.length/2;return new ba({xmid:t,ymid:e,length:a})}NE(){const t=this.xmid+this.length/4,e=this.ymid+this.length/4,a=this.length/2;return new ba({xmid:t,ymid:e,length:a})}SW(){const t=this.xmid-this.length/4,e=this.ymid-this.length/4,a=this.length/2;return new ba({xmid:t,ymid:e,length:a})}SE(){const t=this.xmid+this.length/4,e=this.ymid-this.length/4,a=this.length/2;return new ba({xmid:t,ymid:e,length:a})}}class Na{constructor(t){this.body=null,this.quad=null,this.NW=null,this.NE=null,this.SW=null,this.SE=null,this.theta=.5,null!=t&&(this.quad=t)}insert(t){null!=this.body?this._isExternal()?(this.quad&&(this.NW=new Na(this.quad.NW()),this.NE=new Na(this.quad.NE()),this.SW=new Na(this.quad.SW()),this.SE=new Na(this.quad.SE())),this._putBody(this.body),this._putBody(t),this.body=this.body.add(t)):(this.body=this.body.add(t),this._putBody(t)):this.body=t}_putBody(t){this.quad&&(t.in(this.quad.NW())&&this.NW?this.NW.insert(t):t.in(this.quad.NE())&&this.NE?this.NE.insert(t):t.in(this.quad.SW())&&this.SW?this.SW.insert(t):t.in(this.quad.SE())&&this.SE&&this.SE.insert(t))}_isExternal(){return null==this.NW&&null==this.NE&&null==this.SW&&null==this.SE}updateForce(t){if(null!=this.body&&t!==this.body)if(this._isExternal())t.addForce(this.body);else{(this.quad?this.quad.getLength():0)/this.body.distanceTo(t)<this.theta?t.addForce(this.body):(this.NW&&this.NW.updateForce(t),this.NE&&this.NE.updateForce(t),this.SW&&this.SW.updateForce(t),this.SE&&this.SE.updateForce(t))}}}const Oa={center:[0,0],width:300,height:300,kr:5,kg:1,mode:"normal",preventOverlap:!1,dissuadeHubs:!1,maxIteration:0,ks:.1,ksmax:10,tao:.1};const ka={maxIteration:1e3,gravity:10,speed:5,clustering:!1,clusterGravity:10,width:300,height:300,nodeClusterBy:"cluster"};const Ma={begin:[0,0],preventOverlap:!0,preventOverlapPadding:10,condense:!1,rows:void 0,cols:void 0,position:void 0,sortBy:"degree",nodeSize:30,width:300,height:300};const Aa=(t,e)=>{let a;const i=t.rows||5,o=t.cols||5;if(null==e)a=Math.min(i,o);else{Math.min(i,o)===t.rows?t.rows=e:t.cols=e}return a},ja=(t,e)=>{let a;const i=t.rows||5,o=t.cols||5;if(null==e)a=Math.max(i,o);else{Math.max(i,o)===t.rows?t.rows=e:t.cols=e}return a},za=(t,e)=>t[`c-${e.row}-${e.col}`]||!1,Sa=(t,e)=>t[`c-${e.row}-${e.col}`]=!0,_a=(t,e)=>{const a=t.cols||5;e.col++,e.col>=a&&(e.col=0,e.row++)},Da=(t,e,a,i,o,n,d,r)=>{let s,l;const c=o[t.id];if(c)s=c.col*a+a/2+e[0],l=c.row*i+i/2+e[1];else{for(;za(r,d);)_a(n,d);s=d.col*a+a/2+e[0],l=d.row*i+i/2+e[1],Sa(r,d),_a(n,d)}t.data.x=s,t.data.y=l},Ra={iterations:10,height:10,width:10,speed:100,gravity:10,k:5},Pa=(t,e,a,i,o,n)=>{e.forEach(((d,r)=>{a[r]={x:0,y:0},e.forEach(((e,s)=>{if(r===s)return;if(o[r]!==o[s])return;let l=d.x-e.x,c=d.y-e.y,h=Math.sqrt(l*l+c*c);if(0===h){h=1;const t=r>s?1:-1;l=.01*t,c=.01*t}if(h<n(t[r])/2+n(t[s])/2){const t=i*i/h;a[r].x+=l/h*t,a[r].y+=c/h*t}}))}))},Za=(t,e,a,i,o,n,d,r)=>{const s=n||d/10;return i&&e.forEach(((e,a)=>{const i=t[a].x-t[o].x,n=t[a].y-t[o].y,d=Math.sqrt(i*i+n*n);let r=n/d,s=-i/d;const l=Math.sqrt(e.x*e.x+e.y*e.y);let c=Math.acos((r*e.x+s*e.y)/l);c>Math.PI/2&&(c-=Math.PI/2,r*=-1,s*=-1);const h=Math.cos(c)*l;e.x=r*h,e.y=s*h})),t.forEach(((n,d)=>{if(d===o)return;const l=Math.sqrt(e[d].x*e[d].x+e[d].y*e[d].y);if(l>0&&d!==o){const c=Math.min(s*(a/800),l);if(n.x+=e[d].x/l*c,n.y+=e[d].y/l*c,i){let e=n.x-t[o].x,a=n.y-t[o].y;const i=Math.sqrt(e*e+a*a);e=e/i*r[d],a=a/i*r[d],n.x=t[o].x+e,n.y=t[o].y+a}}})),t},La={maxIteration:1e3,focusNode:null,unitRadius:null,linkDistance:50,preventOverlap:!1,strictRadial:!0,maxPreventOverlapIteration:200,sortStrength:10};const Ia=(t,e,a,i,o,n,d)=>{if(!t)return[];const r=[];if(e){const s={};e.forEach(((e,l)=>{const c=[];e.forEach(((e,r)=>{var h,g;if(l===r)c.push(0);else if(i[l]===i[r])if("data"===n)c.push(e*(Math.abs(l-r)*d)/(i[l]/o));else if(n){let a,u;if(s[t[l].id])a=s[t[l].id];else{const e=("id"===n?t[l].id:null===(h=t[l].data)||void 0===h?void 0:h[n])||0;a=(0,be.Z)(e)?e.charCodeAt(0):e,s[t[l].id]=a}if(s[t[r].id])u=s[t[r].id];else{const e=("id"===n?t[r].id:null===(g=t[r].data)||void 0===g?void 0:g[n])||0;u=(0,be.Z)(e)?e.charCodeAt(0):e,s[t[r].id]=u}c.push(e*(Math.abs(a-u)*d)/(i[l]/o))}else c.push(e*a/(i[l]/o));else{const t=(a+o)/2;c.push(e*t)}})),r.push(c)}))}return r},Ca=t=>{const e=t.length,a=t[0].length,i=[];for(let o=0;o<e;o++){const e=[];for(let i=0;i<a;i++)0!==t[o][i]?e.push(1/(t[o][i]*t[o][i])):e.push(0);i.push(e)}return i},Ta=(t,e)=>{let a=-1;return t.forEach(((t,i)=>{t.id===e&&(a=i)})),Math.max(a,0)},qa=(t,e,a)=>{const i=t.length;for(let o=0;o<i;o++)if(t[e][o]===1/0){t[e][o]=a,t[o][e]=a;for(let n=0;n<i;n++)t[o][n]!==1/0&&t[e][n]===1/0&&(t[e][n]=a+t[o][n],t[n][e]=a+t[o][n])}for(let a=0;a<i;a++)if(a!==e)for(let o=0;o<i;o++)if(t[a][o]===1/0){let i=Math.abs(t[e][a]-t[e][o]);i=0===i?1:i,t[a][o]=i}},Fa=(t,e)=>{let a=0;for(let i=0;i<t[e].length;i++)t[e][i]!==1/0&&(a=t[e][i]>a?t[e][i]:a);return a},Ba={center:[0,0],width:300,height:300};const Ga={circular:class{constructor(t={}){this.options=t,this.id="circular",this.options=Object.assign(Object.assign({},xe),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericCircularLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericCircularLayout(!0,t,e)}))}genericCircularLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},this.options),a),{width:o,height:n,center:d,divisions:r,startAngle:s=0,endAngle:l=2*Math.PI,angleRatio:c,ordering:h,clockwise:g,nodeSpacing:u,nodeSize:f}=i,v=e.getAllNodes(),y=e.getAllEdges(),[p,m,x]=Ee(o,n,d),w=null==v?void 0:v.length;if(!w||1===w)return me(e,t,x);const E=(l-s)/w;let{radius:b,startRadius:N,endRadius:O}=i;if(u){const t=he(10,u),e=ge(10,f);let a=-1/0;v.forEach((t=>{const i=e(t);a<i&&(a=i)}));let i=0;v.forEach(((e,o)=>{i+=0===o?a||10:(t(e)||0)+(a||10)})),b=i/(2*Math.PI)}else b||N||O?!N&&O?N=O:N&&!O&&(O=N):b=Math.min(m,p)/2;const k=E*c;let M=[];M="topology"===h?we(e,v):"topology-directed"===h?we(e,v,!0):"degree"===h?function(t,e){const a=[];return e.forEach(((t,e)=>{a.push(ve(t))})),a.sort(((e,a)=>t.getDegree(e.id,"both")-t.getDegree(a.id,"both"))),a}(e,v):v.map((t=>ve(t)));const A=Math.ceil(w/r);for(let t=0;t<w;++t){let e=b;e||null===N||null===O||(e=N+t*(O-N)/(w-1)),e||(e=10+100*t/(w-1));let a=s+t%A*k+2*Math.PI/r*Math.floor(t/A);g||(a=l-t%A*k-2*Math.PI/r*Math.floor(t/A)),M[t].data.x=x[0]+Math.cos(a)*e,M[t].data.y=x[1]+Math.sin(a)*e}t&&M.forEach((t=>{e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y})}));return{nodes:M,edges:y}}))}},concentric:ke,mds:We,random:class{constructor(t={}){this.options=t,this.id="random",this.options=Object.assign(Object.assign({},Ba),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericRandomLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericRandomLayout(!0,t,e)}))}genericRandomLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},this.options),a),{center:o,width:n,height:d}=i,r=e.getAllNodes(),s=n||"undefined"==typeof window?n:window.innerWidth,l=d||"undefined"==typeof window?d:window.innerHeight,c=o||[s/2,l/2],h=[];r&&r.forEach((t=>{h.push({id:t.id,data:{x:.9*(Math.random()-.5)*s+c[0],y:.9*(Math.random()-.5)*l+c[1]}})})),t&&h.forEach((t=>e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y})));return{nodes:h,edges:e.getAllEdges()}}))}},grid:class{constructor(t={}){this.options=t,this.id="grid",this.options=Object.assign(Object.assign({},Ma),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericGridLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericGridLayout(!0,t,e)}))}genericGridLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},this.options),a),{begin:o=[0,0],condense:n,preventOverlapPadding:r,preventOverlap:s,rows:l,cols:c,nodeSpacing:h,nodeSize:g,width:u,height:f,position:v}=i;let{sortBy:y}=i;const p=e.getAllNodes(),m=e.getAllEdges(),x=null==p?void 0:p.length;if(!x||1===x)return me(e,t,o);const w=p.map((t=>ve(t)));"id"===y||(0,be.Z)(y)&&void 0!==w[0].data[y]||(y="degree"),"degree"===y?w.sort(((t,a)=>e.getDegree(a.id,"both")-e.getDegree(t.id,"both"))):"id"===y?w.sort(((t,e)=>(0,d.Z)(e.id)&&(0,d.Z)(t.id)?e.id-t.id:`${t.id}`.localeCompare(`${e.id}`))):w.sort(((t,e)=>e.data[y]-t.data[y]));const E=u||"undefined"==typeof window?u:window.innerWidth,b=f||"undefined"==typeof window?f:window.innerHeight,N=x,O={rows:l,cols:c};if(null!=l&&null!=c)O.rows=l,O.cols=c;else if(null!=l&&null==c)O.rows=l,O.cols=Math.ceil(N/O.rows);else if(null==l&&null!=c)O.cols=c,O.rows=Math.ceil(N/O.cols);else{const t=Math.sqrt(N*b/E);O.rows=Math.round(t),O.cols=Math.round(E/b*t)}if(O.rows=Math.max(O.rows,1),O.cols=Math.max(O.cols,1),O.cols*O.rows>N){const t=Aa(O),e=ja(O);(t-1)*e>=N?Aa(O,t-1):(e-1)*t>=N&&ja(O,e-1)}else for(;O.cols*O.rows<N;){const t=Aa(O),e=ja(O);(e+1)*t>=N?ja(O,e+1):Aa(O,t+1)}let k=n?0:E/O.cols,M=n?0:b/O.rows;if(s||h){const t=he(10,h),a=ge(30,g,!1);w.forEach((i=>{i.data.x&&i.data.y||(i.data.x=0,i.data.y=0);const o=e.getNode(i.id),[n,d]=ce(a(o)||30),s=void 0!==t?t(i):r,l=n+s,c=d+s;k=Math.max(k,l),M=Math.max(M,c)}))}const A={},j={row:0,col:0},z={};for(let t=0;t<w.length;t++){const a=w[t];let i;if(v&&(i=v(e.getNode(a.id))),i&&(void 0!==i.row||void 0!==i.col)){const t={row:i.row,col:i.col};if(void 0===t.col)for(t.col=0;za(A,t);)t.col++;else if(void 0===t.row)for(t.row=0;za(A,t);)t.row++;z[a.id]=t,Sa(A,t)}Da(a,o,k,M,z,O,j,A)}const S={nodes:w,edges:m};return t&&w.forEach((t=>{e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y})})),S}))}},radial:class{constructor(t={}){this.options=t,this.id="radial",this.options=Object.assign(Object.assign({},La),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericRadialLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericRadialLayout(!0,t,e)}))}genericRadialLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},this.options),a),{width:o,height:n,center:d,focusNode:r,unitRadius:s,nodeSize:l,nodeSpacing:c,strictRadial:h,preventOverlap:g,maxPreventOverlapIteration:u,sortBy:f,linkDistance:v=50,sortStrength:y=10,maxIteration:p=1e3}=i,m=e.getAllNodes(),x=e.getAllEdges(),w=o||"undefined"==typeof window?o:window.innerWidth,E=n||"undefined"==typeof window?n:window.innerHeight,b=d||[w/2,E/2];if(!(null==m?void 0:m.length)||1===m.length)return me(e,t,b);let N=m[0];if((0,be.Z)(r)){for(let t=0;t<m.length;t++)if(m[t].id===r){N=m[t];break}}else N=r||m[0];const O=Ta(m,N.id),k=qe({nodes:m,edges:x},!1),M=Te(k),A=Fa(M,O);qa(M,O,A+1);const j=M[O];let z=w-b[0]>b[0]?b[0]:w-b[0],S=E-b[1]>b[1]?b[1]:E-b[1];0===z&&(z=w/2),0===S&&(S=E/2);const _=Math.min(z,S),D=Math.max(...j),R=[],P=s||_/D;j.forEach(((t,e)=>{R[e]=t*P}));const Z=Ia(m,M,v,R,P,f,y),L=Ca(Z),I=((t,e,a)=>{try{const a=Ce.y3.mul(Ce.y3.pow(e,2),-.5),i=a.mean("row"),o=a.mean("column"),n=a.mean();a.add(n).subRowVector(i).subColumnVector(o);const d=new Ce.Sc(a),r=Ce.y3.sqrt(d.diagonalMatrix).diagonal();return d.leftSingularVectors.toJSON().map((e=>Ce.y3.mul([e],[r]).toJSON()[0].splice(0,t)))}catch(t){const i=[];for(let t=0;t<e.length;t++){const t=Math.random()*a,e=Math.random()*a;i.push([t,e])}return i}})(v,Z,v);let C,T=I.map((([t,e])=>({x:(isNaN(t)?Math.random()*v:t)-I[O][0],y:(isNaN(e)?Math.random()*v:e)-I[O][1]})));if(this.run(p,T,L,Z,R,O),g){C=ue(l,c);const t={nodes:m,nodeSizeFunc:C,positions:T,radii:R,height:E,width:w,strictRadial:Boolean(h),focusIdx:O,iterations:u||200,k:T.length/4.5};T=((t,e)=>{const a=Object.assign(Object.assign({},Ra),e),{positions:i,iterations:o,width:n,k:d,speed:r=100,strictRadial:s,focusIdx:l,radii:c=[],nodeSizeFunc:h}=a,g=t.getAllNodes(),u=[],f=n/10;for(let t=0;t<o;t++)i.forEach(((t,e)=>{u[e]={x:0,y:0}})),Pa(g,i,u,d,c,h),Za(i,u,r,s,l,f,n,c);return i})(e,t)}const q=[];T.forEach(((t,e)=>{const a=ve(m[e]);a.data.x=t.x+b[0],a.data.y=t.y+b[1],q.push(a)})),t&&q.forEach((t=>e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y})));return{nodes:q,edges:x}}))}run(t,e,a,i,o,n){for(let d=0;d<=t;d++){const r=d/t;this.oneIteration(r,e,o,i,a,n)}}oneIteration(t,e,a,i,o,n){const d=1-t;e.forEach(((r,s)=>{const l=Fe(r,{x:0,y:0}),c=0===l?0:1/l;if(s===n)return;let h=0,g=0,u=0;e.forEach(((t,e)=>{if(s===e)return;const a=Fe(r,t),n=0===a?0:1/a,d=i[e][s];u+=o[s][e],h+=o[s][e]*(t.x+d*(r.x-t.x)*n),g+=o[s][e]*(t.y+d*(r.y-t.y)*n)}));const f=0===a[s]?0:1/a[s];u*=d,u+=t*f*f,h*=d,h+=t*f*r.x*c,r.x=h/u,g*=d,g+=t*f*r.y*c,r.y=g/u}))}},force:De,d3force:ra,"d3-force-3d":class extends ra{constructor(){super(...arguments),this.id="d3-force-3d",this.config={inputNodeAttrs:["x","y","z","vx","vy","vz","fx","fy","fz"],outputNodeAttrs:["x","y","z","vx","vy","vz"],simulationAttrs:["alpha","alphaMin","alphaDecay","alphaTarget","velocityDecay","randomSource","numDimensions"]},this.forceMap={link:la.Z,manyBody:ca.Z,center:ha.Z,collide:ga.Z,radial:ua.Z,x:fa.Z,y:va.Z,z:ya.Z},this.options={numDimensions:3,link:{id:t=>t.id},manyBody:{},center:{x:0,y:0,z:0}}}initSimulation(){return(0,pa.Z)()}},fruchterman:class{constructor(t={}){this.options=t,this.id="fruchterman",this.timeInterval=0,this.running=!1,this.options=Object.assign(Object.assign({},ka),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericFruchtermanLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericFruchtermanLayout(!0,t,e)}))}stop(){this.timeInterval&&"undefined"!=typeof window&&window.clearInterval(this.timeInterval),this.running=!1}tick(t=this.options.maxIteration||1){if(this.lastResult)return this.lastResult;for(let e=0;e<t;e++)this.runOneStep(this.lastGraph,this.lastClusterMap,this.lastOptions);const e={nodes:this.lastLayoutNodes,edges:this.lastLayoutEdges};return this.lastAssign&&e.nodes.forEach((t=>this.lastGraph.mergeNodeData(t.id,{x:t.data.x,y:t.data.y,z:3===this.options.dimensions?t.data.z:void 0}))),e}genericFruchtermanLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){if(this.running)return;const i=this.formatOptions(a),{dimensions:n,width:d,height:r,center:s,clustering:l,nodeClusterBy:c,maxIteration:h,onTick:g}=i,u=e.getAllNodes(),f=e.getAllEdges();if(!(null==u?void 0:u.length)){const t={nodes:[],edges:f};return this.lastResult=t,t}if(1===u.length){t&&e.mergeNodeData(u[0].id,{x:s[0],y:s[1],z:3===n?s[2]:void 0});const a={nodes:[Object.assign(Object.assign({},u[0]),{data:Object.assign(Object.assign({},u[0].data),{x:s[0],y:s[1],z:3===n?s[2]:void 0})})],edges:f};return this.lastResult=a,a}const v=u.map((t=>ve(t,[d,r]))),y=new o.k({nodes:v,edges:f}),p={};if(l&&v.forEach((t=>{const e=t.data[c];p[e]||(p[e]={name:e,cx:0,cy:0,count:0})})),this.lastLayoutNodes=v,this.lastLayoutEdges=f,this.lastAssign=t,this.lastGraph=y,this.lastOptions=i,this.lastClusterMap=p,"undefined"==typeof window)return;let m=0;return new Promise((a=>{this.timeInterval=window.setInterval((()=>{this.running?(this.runOneStep(y,p,i),t&&v.forEach((({id:t,data:a})=>e.mergeNodeData(t,{x:a.x,y:a.y,z:3===n?a.z:void 0}))),null==g||g({nodes:v,edges:f}),m++,m>=h&&(window.clearInterval(this.timeInterval),a({nodes:v,edges:f}))):a({nodes:v,edges:f})}),0),this.running=!0}))}))}formatOptions(t={}){const e=Object.assign(Object.assign({},this.options),t),{clustering:a,nodeClusterBy:i}=e,{center:o,width:n,height:d}=e;return e.width=n||"undefined"==typeof window?n:window.innerWidth,e.height=d||"undefined"==typeof window?d:window.innerHeight,e.center=o||[e.width/2,e.height/2],e.clustering=a&&!!i,e}runOneStep(t,e,a){const{dimensions:i,height:o,width:n,gravity:r,center:s,speed:l,clustering:c,nodeClusterBy:h,clusterGravity:g}=a,u=o*n,f=Math.sqrt(u)/10,v=t.getAllNodes(),y=u/(v.length+1),p=Math.sqrt(y),m={};if(this.applyCalculate(t,m,p,y),c){for(const t in e)e[t].cx=0,e[t].cy=0,e[t].count=0;v.forEach((t=>{const{data:a}=t,i=e[a[h]];(0,d.Z)(a.x)&&(i.cx+=a.x),(0,d.Z)(a.y)&&(i.cy+=a.y),i.count++}));for(const t in e)e[t].cx/=e[t].count,e[t].cy/=e[t].count;const t=g||r;v.forEach(((a,i)=>{const{id:o,data:n}=a;if(!(0,d.Z)(n.x)||!(0,d.Z)(n.y))return;const r=e[n[h]],s=Math.sqrt((n.x-r.cx)*(n.x-r.cx)+(n.y-r.cy)*(n.y-r.cy)),l=p*t;m[o].x-=l*(n.x-r.cx)/s,m[o].y-=l*(n.y-r.cy)/s}))}v.forEach(((t,e)=>{const{id:a,data:o}=t;if(!(0,d.Z)(o.x)||!(0,d.Z)(o.y))return;const n=.01*p*r;m[a].x-=n*(o.x-s[0]),m[a].y-=n*(o.y-s[1]),3===i&&(m[a].z-=n*(o.z-s[2]))})),v.forEach(((e,a)=>{const{id:o,data:n}=e;if((0,d.Z)(n.fx)&&(0,d.Z)(n.fy))return n.x=n.fx,n.y=n.fy,void(3===i&&(n.z=n.fz));if(!(0,d.Z)(n.x)||!(0,d.Z)(n.y))return;const r=Math.sqrt(m[o].x*m[o].x+m[o].y*m[o].y+(3===i?m[o].z*m[o].z:0));if(r>0){const e=Math.min(f*(l/800),r);t.mergeNodeData(o,{x:n.x+m[o].x/r*e,y:n.y+m[o].y/r*e,z:3===i?n.z+m[o].z/r*e:void 0})}}))}applyCalculate(t,e,a,i){this.calRepulsive(t,e,i),this.calAttractive(t,e,a)}calRepulsive(t,e,a){const i=t.getAllNodes();i.forEach((({data:t,id:o},n)=>{e[o]={x:0,y:0,z:0},i.forEach((({data:i,id:r},s)=>{if(n<=s||!(0,d.Z)(t.x)||!(0,d.Z)(i.x)||!(0,d.Z)(t.y)||!(0,d.Z)(i.y))return;let l=t.x-i.x,c=t.y-i.y,h=3===this.options.dimensions?t.z-i.z:0,g=l*l+c*c+h*h;0===g&&(g=1,l=.01,c=.01,h=.01);const u=a/g,f=l*u,v=c*u,y=h*u;e[o].x+=f,e[o].y+=v,e[r].x-=f,e[r].y-=v,3===this.options.dimensions&&(e[o].z+=y,e[r].z-=y)}))}))}calAttractive(t,e,a){t.getAllEdges().forEach((i=>{const{source:o,target:n}=i;if(!o||!n||o===n)return;const{data:r}=t.getNode(o),{data:s}=t.getNode(n);if(!((0,d.Z)(s.x)&&(0,d.Z)(r.x)&&(0,d.Z)(s.y)&&(0,d.Z)(r.y)))return;const l=s.x-r.x,c=s.y-r.y,h=3===this.options.dimensions?s.z-r.z:0,g=Math.sqrt(l*l+c*c+h*h)/a,u=l*g,f=c*g,v=h*g;e[o].x+=u,e[o].y+=f,e[n].x-=u,e[n].y-=f,3===this.options.dimensions&&(e[o].z+=v,e[n].z-=v)}))}},forceAtlas2:class{constructor(t={}){this.options=t,this.id="forceAtlas2",this.options=Object.assign(Object.assign({},Oa),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericForceAtlas2Layout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericForceAtlas2Layout(!0,t,e)}))}genericForceAtlas2Layout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=e.getAllEdges(),n=e.getAllNodes(),d=this.formatOptions(a,n.length),{width:r,height:s,prune:l,maxIteration:c,nodeSize:h,center:g}=d;if(!(null==n?void 0:n.length)||1===n.length)return me(e,t,g);const u=n.map((t=>ve(t,[r,s]))),f=i.filter((t=>{const{source:e,target:a}=t;return e!==a})),v=new o.k({nodes:u,edges:f}),y=this.getSizes(v,h);if(this.run(v,e,c,y,t,d),l){for(let t=0;t<f.length;t+=1){const{source:e,target:a}=f[t],i=v.getDegree(e),o=v.getDegree(e);if(i<=1){const t=v.getNode(a);v.mergeNodeData(e,{x:t.data.x,y:t.data.y})}else if(o<=1){const t=v.getNode(e);v.mergeNodeData(a,{x:t.data.x,y:t.data.y})}}const a=Object.assign(Object.assign({},d),{prune:!1,barnesHut:!1});this.run(v,e,100,y,t,a)}return{nodes:u,edges:i}}))}getSizes(t,e){const a=t.getAllNodes(),i={};for(let t=0;t<a.length;t+=1){const o=a[t];i[o.id]=ue(e,void 0)(o)}return i}formatOptions(t={},e){const a=Object.assign(Object.assign({},this.options),t),{center:i,width:o,height:n,barnesHut:d,prune:r,maxIteration:s,kr:l,kg:c}=a;return a.width=o||"undefined"==typeof window?o:window.innerWidth,a.height=n||"undefined"==typeof window?n:window.innerHeight,a.center=i||[a.width/2,a.height/2],void 0===d&&e>250&&(a.barnesHut=!0),void 0===r&&e>100&&(a.prune=!0),0!==s||r?0===s&&r&&(a.maxIteration=100,e<=200&&e>100?a.maxIteration=500:e>200&&(a.maxIteration=950)):(a.maxIteration=250,e<=200&&e>100?a.maxIteration=1e3:e>200&&(a.maxIteration=1200)),l||(a.kr=50,e>100&&e<=500?a.kr=20:e>500&&(a.kr=1)),c||(a.kg=20,e>100&&e<=500?a.kg=10:e>500&&(a.kg=1)),a}run(t,e,a,i,o,n){const{kr:d,barnesHut:r,onTick:s}=n,l=t.getAllNodes();let c=0,h=a;const g={},u={},f={};for(let e=0;e<l.length;e+=1){const{data:a,id:i}=l[e];if(g[i]=[0,0],r){const o={id:e,rx:a.x,ry:a.y,mass:1,g:d,degree:t.getDegree(i)};f[i]=new Ea(o)}}for(;h>0;)c=this.oneStep(t,{iter:h,preventOverlapIters:50,krPrime:100,sg:c,forces:g,preForces:u,bodies:f,sizes:i},n),h--,null==s||s({nodes:l,edges:e.getAllEdges()});return t}oneStep(t,e,a){const{iter:i,preventOverlapIters:o,krPrime:n,sg:d,preForces:r,bodies:s,sizes:l}=e;let{forces:c}=e;const{preventOverlap:h,barnesHut:g}=a,u=t.getAllNodes();for(let t=0;t<u.length;t+=1){const{id:e}=u[t];r[e]=[...c[e]],c[e]=[0,0]}return c=this.getAttrForces(t,i,o,l,c,a),c=g&&(h&&i>o||!h)?this.getOptRepGraForces(t,c,s,a):this.getRepGraForces(t,i,o,c,n,l,a),this.updatePos(t,c,r,d,a)}getAttrForces(t,e,a,i,o,n){const{preventOverlap:d,dissuadeHubs:r,mode:s,prune:l}=n,c=t.getAllEdges();for(let n=0;n<c.length;n+=1){const{source:h,target:g}=c[n],u=t.getNode(h),f=t.getNode(g),v=t.getDegree(h),y=t.getDegree(g);if(l&&(v<=1||y<=1))continue;const p=[f.data.x-u.data.x,f.data.y-u.data.y];let m=Math.hypot(p[0],p[1]);m=m<1e-4?1e-4:m,p[0]=p[0]/m,p[1]=p[1]/m,d&&e<a&&(m=m-i[h]-i[g]);let x=m,w=x;"linlog"===s&&(x=Math.log(1+m),w=x),r&&(x=m/v,w=m/y),d&&e<a&&m<=0?(x=0,w=0):d&&e<a&&m>0&&(x=m,w=m),o[h][0]+=x*p[0],o[g][0]-=w*p[0],o[h][1]+=x*p[1],o[g][1]-=w*p[1]}return o}getOptRepGraForces(t,e,a,i){const{kg:o,center:n,prune:d}=i,r=t.getAllNodes(),s=r.length;let l=9e10,c=-9e10,h=9e10,g=-9e10;for(let e=0;e<s;e+=1){const{id:i,data:o}=r[e];d&&t.getDegree(i)<=1||(a[i].setPos(o.x,o.y),o.x>=c&&(c=o.x),o.x<=l&&(l=o.x),o.y>=g&&(g=o.y),o.y<=h&&(h=o.y))}const u=Math.max(c-l,g-h),f=new ba({xmid:(c+l)/2,ymid:(g+h)/2,length:u,massCenter:n,mass:s}),v=new Na(f);for(let e=0;e<s;e+=1){const{id:i}=r[e];d&&t.getDegree(i)<=1||a[i].in(f)&&v.insert(a[i])}for(let i=0;i<s;i+=1){const{id:s,data:l}=r[i],c=t.getDegree(s);if(d&&c<=1)continue;a[s].resetForce(),v.updateForce(a[s]),e[s][0]-=a[s].fx,e[s][1]-=a[s].fy;const h=[l.x-n[0],l.y-n[1]];let g=Math.hypot(h[0],h[1]);g=g<1e-4?1e-4:g,h[0]=h[0]/g,h[1]=h[1]/g;const u=o*(c+1);e[s][0]-=u*h[0],e[s][1]-=u*h[1]}return e}getRepGraForces(t,e,a,i,o,n,d){const{preventOverlap:r,kr:s,kg:l,center:c,prune:h}=d,g=t.getAllNodes(),u=g.length;for(let d=0;d<u;d+=1){const f=g[d],v=t.getDegree(f.id);for(let l=d+1;l<u;l+=1){const d=g[l],c=t.getDegree(d.id);if(h&&(v<=1||c<=1))continue;const u=[d.data.x-f.data.x,d.data.y-f.data.y];let y=Math.hypot(u[0],u[1]);y=y<1e-4?1e-4:y,u[0]=u[0]/y,u[1]=u[1]/y,r&&e<a&&(y=y-n[f.id]-n[d.id]);let p=s*(v+1)*(c+1)/y;r&&e<a&&y<0?p=o*(v+1)*(c+1):r&&e<a&&0===y?p=0:r&&e<a&&y>0&&(p=s*(v+1)*(c+1)/y),i[f.id][0]-=p*u[0],i[d.id][0]+=p*u[0],i[f.id][1]-=p*u[1],i[d.id][1]+=p*u[1]}const y=[f.data.x-c[0],f.data.y-c[1]],p=Math.hypot(y[0],y[1]);y[0]=y[0]/p,y[1]=y[1]/p;const m=l*(v+1);i[f.id][0]-=m*y[0],i[f.id][1]-=m*y[1]}return i}updatePos(t,e,a,i,o){const{ks:n,tao:r,prune:s,ksmax:l}=o,c=t.getAllNodes(),h=c.length,g=[],u=[];let f=0,v=0,y=i;for(let i=0;i<h;i+=1){const{id:o}=c[i],n=t.getDegree(o);if(s&&n<=1)continue;const d=[e[o][0]-a[o][0],e[o][1]-a[o][1]],r=Math.hypot(d[0],d[1]),l=[e[o][0]+a[o][0],e[o][1]+a[o][1]],h=Math.hypot(l[0],l[1]);g[i]=r,u[i]=h/2,f+=(n+1)*g[i],v+=(n+1)*u[i]}const p=y;y=r*v/f,0!==p&&(y=y>1.5*p?1.5*p:y);for(let a=0;a<h;a+=1){const{id:i,data:o}=c[a],r=t.getDegree(i);if(s&&r<=1)continue;if((0,d.Z)(o.fx)&&(0,d.Z)(o.fy))continue;let h=n*y/(1+y*Math.sqrt(g[a])),u=Math.hypot(e[i][0],e[i][1]);u=u<1e-4?1e-4:u;const f=l/u;h=h>f?f:h;const v=h*e[i][0],p=h*e[i][1];t.mergeNodeData(i,{x:o.x+v,y:o.y+p})}return y}},dagre:wa,antvDagre:class{constructor(t={}){this.options=t,this.id="antv-dagre",this.options=Object.assign(Object.assign({},ye),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericDagreLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericDagreLayout(!0,t,e)}))}genericDagreLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=Object.assign(Object.assign({},this.options),a),{nodeSize:n,align:r,rankdir:s="TB",ranksep:l,nodesep:c,ranksepFunc:h,nodesepFunc:g,edgeLabelSpace:u,ranker:f,nodeOrder:v,begin:y,controlPoints:p,radial:m,sortByCombo:x,preset:w}=i,E=new o.k({tree:[]}),b=he(l||50,h),N=he(c||50,g);let O=N,k=b;"LR"!==s&&"RL"!==s||(O=b,k=N);const M=ge(10,n,!1),A=e.getAllNodes(),j=e.getAllEdges();let z;A.forEach((t=>{const e=ce(M(t)),a=k(t),i=O(t),o=e[0]+2*i,n=e[1]+2*a,r=t.data.layer;(0,d.Z)(r)?E.addNode({id:t.id,data:{width:o,height:n,layer:r}}):E.addNode({id:t.id,data:{width:o,height:n}})})),x&&(E.attachTreeStructure("combo"),A.forEach((t=>{const{parentId:e}=t.data;void 0!==e&&E.hasNode(e)&&E.setParent(t.id,e,"combo")}))),j.forEach((t=>{E.addEdge({id:t.id,source:t.source,target:t.target,data:{weight:t.data.weight||1}})})),(null==w?void 0:w.length)&&(z=new o.k({nodes:w})),((t,e)=>{const{edgeLabelSpace:a,keepNodeOrder:i,prevGraph:o,rankdir:n,ranksep:d}=e;!i&&o&&qt(t,o);const r=Ht(t);let s;a&&(e.ranksep=Yt(r,{rankdir:n,ranksep:d}));try{s=Tt(r,e)}catch(t){if("Not possible to find intersection inside of the rectangle"===t.message)return void console.error("The following error may be caused by improper layer setting, please make sure your manual layer setting does not violate the graph's structure:\n",t);throw t}Ft(t,r)})(E,{prevGraph:z,edgeLabelSpace:u,keepNodeOrder:!!v,nodeOrder:v||[],acyclicer:"greedy",ranker:f,rankdir:s,nodesep:c,align:r});const S=[0,0];if(y){let t=1/0,e=1/0;E.getAllNodes().forEach((a=>{t>a.data.x&&(t=a.data.x),e>a.data.y&&(e=a.data.y)})),E.getAllEdges().forEach((a=>{var i;null===(i=a.data.points)||void 0===i||i.forEach((a=>{t>a.x&&(t=a.x),e>a.y&&(e=a.y)}))})),S[0]=y[0]-t,S[1]=y[1]-e}const _="LR"===s||"RL"===s;if(m);else{const t=new Set,e="BT"===s||"RL"===s?(t,e)=>e-t:(t,e)=>t-e;E.getAllNodes().forEach((e=>{e.data.x=e.data.x+S[0],e.data.y=e.data.y+S[1],t.add(_?e.data.x:e.data.y)}));const a=Array.from(t).sort(e),i=_?(t,e)=>t.x!==e.x:(t,e)=>t.y!==e.y,o=_?(t,e,a)=>{const i=Math.max(e.y,a.y),o=Math.min(e.y,a.y);return t.filter((t=>t.y<=i&&t.y>=o))}:(t,e,a)=>{const i=Math.max(e.x,a.x),o=Math.min(e.x,a.x);return t.filter((t=>t.x<=i&&t.x>=o))};E.getAllEdges().forEach(((t,e)=>{var n;u&&p&&"loop"!==t.data.type&&(t.data.controlPoints=pe(null===(n=t.data.points)||void 0===n?void 0:n.map((({x:t,y:e})=>({x:t+S[0],y:e+S[1]}))),E.getNode(t.source),E.getNode(t.target),a,_,i,o))}))}let D=[];D=E.getAllNodes().map((t=>ve(t)));const R=E.getAllEdges();t&&(D.forEach((t=>{e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y})})),R.forEach((t=>{e.mergeEdgeData(t.id,{controlPoints:t.data.controlPoints})})));return{nodes:D,edges:R}}))}},comboCombined:class{constructor(t={}){this.options=t,this.id="comboCombined",this.options=Object.assign(Object.assign({},Je),t)}execute(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){return this.genericComboCombinedLayout(!1,t,e)}))}assign(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){yield this.genericComboCombinedLayout(!0,t,e)}))}genericComboCombinedLayout(t,e,a){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const i=this.initVals(Object.assign(Object.assign({},this.options),a)),{center:n,treeKey:d,outerLayout:r}=i,s=e.getAllNodes().filter((t=>!t.data._isCombo)),l=e.getAllNodes().filter((t=>t.data._isCombo)),c=e.getAllEdges(),h=null==s?void 0:s.length;if(!h||1===h)return me(e,t,n);const g=[],u=new Map;s.forEach((t=>{u.set(t.id,t)}));const f=new Map;l.forEach((t=>{f.set(t.id,t)}));const v=new Map,y=this.getInnerGraphs(e,d,u,f,c,i,v);yield Promise.all(y);const p=new Map,m=[],x=new Map;let w=!0;e.getRoots(d).forEach((t=>{const a=v.get(t.id),i=f.get(t.id)||u.get(t.id),o={id:t.id,data:Object.assign(Object.assign({},t.data),{x:a.data.x||i.data.x,y:a.data.y||i.data.y,fx:a.data.fx||i.data.fx,fy:a.data.fy||i.data.fy,mass:a.data.mass||i.data.mass,size:a.data.size})};m.push(o),p.set(t.id,!0),isNaN(o.data.x)||0===o.data.x||isNaN(o.data.y)||0===o.data.y?(o.data.x=100*Math.random(),o.data.y=100*Math.random()):w=!1,Be(e,[t],(e=>{e.id!==t.id&&x.set(e.id,t.id)}),"TB",d)}));const E=[];let b;if(c.forEach((t=>{const e=x.get(t.source)||t.source,a=x.get(t.target)||t.target;e!==a&&p.has(e)&&p.has(a)&&E.push({id:t.id,source:e,target:a,data:{}})})),null==m?void 0:m.length){if(1===m.length)m[0].data.x=n[0],m[0].data.y=n[1];else{const t=new o.k({nodes:m,edges:E}),e=r||new De;if(w&&Ye[e.id]){const e=m.length<100?new We:new ke;yield e.assign(t)}const a=Object.assign({center:n,kg:5,preventOverlap:!0,animate:!1},"force"===e.id?{gravity:1,factor:4,linkDistance:(t,e,a)=>(Math.max(...e.data.size)||32)/2+(Math.max(...a.data.size)||32)/2+200}:{});b=yield Xe(e,t,a)}v.forEach((t=>{var e;const a=b.nodes.find((e=>e.id===t.id));if(a){const{x:e,y:i}=a.data;t.data.visited=!0,t.data.x=e,t.data.y=i,g.push({id:t.id,data:{x:e,y:i}})}const{x:i,y:o}=t.data;null===(e=t.data.nodes)||void 0===e||e.forEach((t=>{g.push({id:t.id,data:{x:t.data.x+i,y:t.data.y+o}})}))})),v.forEach((({data:t})=>{const{x:e,y:a,visited:i,nodes:o}=t;null==o||o.forEach((t=>{if(!i){const i=g.find((e=>e.id===t.id));i.data.x+=e||0,i.data.y+=a||0}}))}))}t&&g.forEach((t=>{e.mergeNodeData(t.id,{x:t.data.x,y:t.data.y})}));return{nodes:g,edges:c}}))}initVals(t){const e=Object.assign({},t),{nodeSize:a,spacing:i,comboPadding:o}=t;let n,r,s;if(r=(0,d.Z)(i)?()=>i:(0,se.Z)(i)?i:()=>0,e.spacing=r,a)if((0,se.Z)(a))n=t=>{const e=a(t),i=r(t);if(Ne(t.size)){return((t.size[0]>t.size[1]?t.size[0]:t.size[1])+i)/2}return((e||32)+i)/2};else if(Ne(a)){const t=(a[0]>a[1]?a[0]:a[1])/2;n=e=>t+r(e)/2}else{const t=a/2;n=e=>t+r(e)/2}else n=t=>{const e=r(t);if(t.size){if(Ne(t.size)){return((t.size[0]>t.size[1]?t.size[0]:t.size[1])+e)/2}if((0,le.Z)(t.size)){return((t.size.width>t.size.height?t.size.width:t.size.height)+e)/2}return(t.size+e)/2}return 32+e/2};return e.nodeSize=n,s=(0,d.Z)(o)?()=>o:Ne(o)?()=>Math.max.apply(null,o):(0,se.Z)(o)?o:()=>0,e.comboPadding=s,e}getInnerGraphs(t,e,a,n,r,s,l){const{nodeSize:c,comboPadding:h,spacing:g,innerLayout:u}=s,f=u||new ke({}),v={center:[0,0],preventOverlap:!0,nodeSpacing:g},y=[],p=t=>{let e=(null==h?void 0:h(t))||10;return Ne(e)&&(e=Math.max(...e)),{size:e?[2*e,2*e]:[30,30],padding:e}};return t.getRoots(e).forEach((s=>{l.set(s.id,{id:s.id,data:{nodes:[],size:p(s).size}});let h=Promise.resolve();Be(t,[s],(s=>{var g;if(!s.data._isCombo)return;const{size:u,padding:y}=p(s);if(null===(g=t.getChildren(s.id,e))||void 0===g?void 0:g.length){const g=l.get(s.id);l.set(s.id,{id:s.id,data:Object.assign({nodes:[]},null==g?void 0:g.data)});const u=new Map,p=t.getChildren(s.id,e).map((t=>{if(t.data._isCombo)return l.has(t.id)||l.set(t.id,{id:t.id,data:Object.assign({},t.data)}),u.set(t.id,!0),l.get(t.id);const e=a.get(t.id)||n.get(t.id);return u.set(t.id,!0),{id:t.id,data:Object.assign(Object.assign({},e.data),t.data)}})),m={nodes:p,edges:r.filter((t=>u.has(t.source)&&u.has(t.target)))};let x=1/0;p.forEach((t=>{var e;let{size:a}=t.data;a||(a=(null===(e=l.get(t.id))||void 0===e?void 0:e.data.size)||(null==c?void 0:c(t))||[30,30]),(0,d.Z)(a)&&(a=[a,a]);const[i,o]=a;x>i&&(x=i),x>o&&(x=o),t.data.size=a})),h=h.then((()=>(0,i.__awaiter)(this,void 0,void 0,(function*(){const t=new o.k(m);yield Xe(f,t,v,!0);const{minX:e,minY:a,maxX:i,maxY:n}=(t=>{let e=1/0,a=1/0,i=-1/0,o=-1/0;return t.forEach((t=>{let n=t.data.size;Ne(n)?1===n.length&&(n=[n[0],n[0]]):(0,d.Z)(n)?n=[n,n]:(void 0===n||isNaN(n))&&(n=[30,30]);const r=[n[0]/2,n[1]/2],s=t.data.x-r[0],l=t.data.x+r[0],c=t.data.y-r[1],h=t.data.y+r[1];e>s&&(e=s),a>c&&(a=c),i<l&&(i=l),o<h&&(o=h)})),{minX:e,minY:a,maxX:i,maxY:o}})(p),r=(i+e)/2,c=(n+a)/2;m.nodes.forEach((t=>{t.data.x-=r,t.data.y-=c}));const h=[Math.max(i-e,x)+2*y,Math.max(n-a,x)+2*y];l.get(s.id).data.size=h,l.get(s.id).data.nodes=p}))))}else l.set(s.id,{id:s.id,data:Object.assign(Object.assign({},s.data),{size:u})});return!0}),"BT",e),y.push(h)})),y}}};let Wa;const $a={stopLayout(){(null==Wa?void 0:Wa.stop)&&Wa.stop()},calculateLayout(t,e){return(0,i.__awaiter)(this,void 0,void 0,(function*(){const{layout:{id:a,options:i,iterations:n},nodes:d,edges:r}=t,s=new o.k({nodes:d,edges:r}),l=Ga[a];if(!l)throw new Error(`Unknown layout id: ${a}`);Wa=new l(i);let c=yield Wa.execute(s);return He(Wa)&&(Wa.stop(),c=Wa.tick(n)),[c,e]}))}};n.Jj($a)}},i={};function o(t){var e=i[t];if(void 0!==e)return e.exports;var n=i[t]={id:t,loaded:!1,exports:{}};return a[t](n,n.exports,o),n.loaded=!0,n.exports}o.m=a,o.x=function(){var t=o.O(void 0,[6493],(function(){return o(74417)}));return t=o.O(t)},t=[],o.O=function(e,a,i,n){if(!a){var d=1/0;for(c=0;c<t.length;c++){a=t[c][0],i=t[c][1],n=t[c][2];for(var r=!0,s=0;s<a.length;s++)(!1&n||d>=n)&&Object.keys(o.O).every((function(t){return o.O[t](a[s])}))?a.splice(s--,1):(r=!1,n<d&&(d=n));if(r){t.splice(c--,1);var l=i();void 0!==l&&(e=l)}}return e}n=n||0;for(var c=t.length;c>0&&t[c-1][2]>n;c--)t[c]=t[c-1];t[c]=[a,i,n]},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,{a:e}),e},o.d=function(t,e){for(var a in e)o.o(e,a)&&!o.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},o.f={},o.e=function(t){return Promise.all(Object.keys(o.f).reduce((function(e,a){return o.f[a](t,e),e}),[]))},o.u=function(t){return t+".717a2cb7.async.js"},o.miniCssF=function(t){},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.nmd=function(t){return t.paths=[],t.children||(t.children=[]),t},o.p="/",function(){var t={4417:1};o.f.i=function(e,a){t[e]||importScripts(o.p+o.u(e))};var e=self.webpackChunk_antv_g6_site=self.webpackChunk_antv_g6_site||[],a=e.push.bind(e);e.push=function(e){var i=e[0],n=e[1],d=e[2];for(var r in n)o.o(n,r)&&(o.m[r]=n[r]);for(d&&d(o);i.length;)t[i.pop()]=1;a(e)}}(),e=o.x,o.x=function(){return o.e(6493).then(e)};o.x()}();