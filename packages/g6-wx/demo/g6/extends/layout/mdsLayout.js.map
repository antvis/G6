{"version":3,"sources":["webpack://G6/webpack/universalModuleDefinition","webpack://G6/webpack/bootstrap","webpack://G6/../../src/layout/base.ts","webpack://G6/./node_modules/_is-any-array@0.1.1@is-any-array/src/index.js","webpack://G6/./node_modules/_ml-array-max@1.2.2@ml-array-max/lib-es6/index.js","webpack://G6/./node_modules/_ml-array-min@1.2.1@ml-array-min/lib-es6/index.js","webpack://G6/./node_modules/_ml-array-rescale@1.3.4@ml-array-rescale/lib-es6/index.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/inspect.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/util.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/stat.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/matrix.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/mathOperations.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/base.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/column.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/columnSelection.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/flipColumn.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/flipRow.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/row.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/rowSelection.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/selection.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/sub.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/views/transpose.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/wrap/WrapperMatrix1D.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/wrap/WrapperMatrix2D.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/wrap/wrap.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/dc/lu.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/dc/util.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/dc/qr.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/dc/svd.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/decompositions.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/determinant.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/linearDependencies.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/pseudoInverse.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/covariance.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/correlation.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/dc/evd.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/dc/cholesky.js","webpack://G6/./node_modules/_ml-matrix@6.7.0@ml-matrix/src/dc/nipals.js","webpack://G6/../../src/util/index.ts","webpack://G6/../../src/util/string.ts","webpack://G6/../../src/util/array.ts","webpack://G6/../../src/util/number.ts","webpack://G6/../../src/util/math.ts","webpack://G6/../../src/util/object.ts","webpack://G6/../../src/util/function.ts","webpack://G6/../../src/layout/mds.ts","webpack://G6/./src/extends/layout/mdsLayout/index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toString","isAnyArray","endsWith","max","input","options","arguments","length","undefined","isArray","TypeError","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","Error","maxValue","min","minValue","rescale","output","Array","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","constructor","inspectData","rows","columns","maxI","Math","maxJ","result","line","j","push","formatNumber","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","e","slice","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","from","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","checkNonEmpty","isEmpty","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","x","varianceByColumn","varianceAll","size","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","sum","pow","sqrt","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","AbstractMatrix","callback","copy","to2DArray","isSquare","previousColumn","isEchelonForm","checked","isReducedEchelonForm","k","clone","h","iMax","swapRows","tmp","echelonForm","maxRow","pivot","Matrix","setSubMatrix","mulS","rowVector","getRow","row1","row2","temp","columnVector","getColumn","column1","column2","NaN","v","idx","diag","type","vector2","isMatrix","vector1","dot","other","checkMatrix","Bcolj","Float64Array","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","y","r1","c1","r2","c2","embed","mat","resultat","zeros","console","warn","blockMult","a","b","mmul","halfRows","parseInt","halfCols","subMatrix","add","sub","isFinite","newMatrix","setRow","setColumn","middle","ceil","first","last","q","AxI","kroneckerProduct","eye","IxB","compareFunction","compareNumbers","sort","indices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","productByRow","productByColumn","productAll","center","newRows","newColumns","newData","fill","random","interval","round","data","matrix1","matrix2","klass","for","rand","randomInt","randInt","diagonal","identity","negate","neg","tensorProduct","nRows","nColumns","arrayData","splice","newRow","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","BaseView","MatrixColumnView","MatrixColumnSelectionView","MatrixFlipColumnView","MatrixFlipRowView","MatrixRowView","MatrixRowSelectionView","MatrixSelectionView","MatrixSubView","MatrixTransposeView","WrapperMatrix1D","_calculateIndex","WrapperMatrix2D","wrap","LuDecomposition","LUcolj","kmax","lu","pivotVector","pivotSign","LU","col","isSingular","count","X","subMatrixRow","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solve","vcols","ucols","tol","ii","inverse","useSVD","leftHandSide","rightHandSide","subMatrix0","subMatrix1","subMatrix2","xrange","exception","range","dependenciesOneRow","error","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","results","Abis","svd","pseudoInverse","svdSolution","SVD","leftSingularVectors","covariance","xMatrix","yMatrix","yIsSame","cov","correlation","sdx","standardDeviation","sdy","corr","EigenvalueDecomposition","assumeSymmetric","isSymmetric","tred2","tql2","H","ort","orthes","hqr2","hh","dl1","c3","el1","s2","tst1","high","low","nn","w","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","iter","cdiv","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","L","isPositiveDefinite","B","nipals","u","scaleScores","maxIterations","terminationCriteria","isColumnVector","getColumnVector","tOld","diff","counter","xResidual","residual","yResidual","betas","adjMatrix","dist"],"mappings":"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","file":"extends/layout/mdsLayout.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"G6\"] = factory();\n\telse\n\t\troot[\"G6\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 479);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Base = void 0;\nvar Base = /** @class */ (function () {\n    function Base() {\n        this.nodes = [];\n        this.edges = [];\n        this.combos = [];\n        this.positions = [];\n        this.destroyed = false;\n        this.onLayoutEnd = function () { };\n    }\n    Base.prototype.layout = function (data) {\n        this.init(data);\n        return this.execute(true);\n    };\n    Base.prototype.init = function (data) {\n        this.nodes = data.nodes || [];\n        this.edges = data.edges || [];\n        this.combos = data.combos || [];\n    };\n    Base.prototype.execute = function (reloadData) { };\n    Base.prototype.executeWithWorker = function () { };\n    Base.prototype.getDefaultCfg = function () {\n        return {};\n    };\n    Base.prototype.updateCfg = function (cfg) {\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    };\n    Base.prototype.getType = function () {\n        return 'base';\n    };\n    Base.prototype.destroy = function () {\n        this.nodes = null;\n        this.edges = null;\n        this.combos = null;\n        this.positions = null;\n        this.destroyed = true;\n    };\n    return Base;\n}());\nexports.Base = Base;\n//# sourceMappingURL=base.js.map","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import { checkColumnIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    checkColumnIndex(matrix, column);\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import { checkRowIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    checkRowIndex(matrix, row);\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    let indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix {\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport Matrix from './matrix';\nimport MatrixSelectionView from './views/selection';\n\nexport function determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    if (matrix.columns === 0) {\n      return 1;\n    }\n\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n\n      return (\n        a * determinant(subMatrix0) -\n        b * determinant(subMatrix1) +\n        c * determinant(subMatrix2)\n      );\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}\n","import SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\n\nfunction xrange(n, exception) {\n  let range = [];\n  for (let i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10,\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    let returnArray = matrix.addRow(index, [0]);\n    for (let i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n  matrix = Matrix.checkMatrix(matrix);\n\n  let n = matrix.rows;\n  let results = new Matrix(n, n);\n\n  for (let i = 0; i < n; i++) {\n    let b = Matrix.columnVector(matrix.getRow(i));\n    let Abis = matrix.subMatrixRow(xrange(n, i)).transpose();\n    let svd = new SingularValueDecomposition(Abis);\n    let x = svd.solve(b);\n    let error = Matrix.sub(b, Abis.mmul(x)).abs().max();\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError),\n    );\n  }\n  return results;\n}\n","import SVD from './dc/svd';\nimport Matrix from './matrix';\n\nexport function pseudoInverse(matrix, threshold = Number.EPSILON) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n  let svdSolution = new SVD(matrix, { autoTranspose: true });\n\n  let U = svdSolution.leftSingularVectors;\n  let V = svdSolution.rightSingularVectors;\n  let s = svdSolution.diagonal;\n\n  for (let i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}\n","import Matrix from './matrix';\n\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !Array.isArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n","import Matrix from './matrix';\n\nexport function correlation(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !Array.isArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  const { center = true, scale = true } = options;\n  if (center) {\n    xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix.center('column');\n    }\n  }\n  if (scale) {\n    xMatrix.scale('column');\n    if (!yIsSame) {\n      yMatrix.scale('column');\n    }\n  }\n\n  const sdx = xMatrix.standardDeviation('column', { unbiased: true });\n  const sdy = yIsSame\n    ? sdx\n    : yMatrix.standardDeviation('column', { unbiased: true });\n\n  const corr = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < corr.rows; i++) {\n    for (let j = 0; j < corr.columns; j++) {\n      corr.set(\n        i,\n        j,\n        corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)),\n      );\n    }\n  }\n  return corr;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    if (matrix.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let n = matrix.columns;\n    let V = new Matrix(n, n);\n    let d = new Float64Array(n);\n    let e = new Float64Array(n);\n    let value = matrix;\n    let i, j;\n\n    let isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V.set(i, j, value.get(i, j));\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      let H = new Matrix(n, n);\n      let ort = new Float64Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H.set(i, j, value.get(i, j));\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  get realEigenvalues() {\n    return Array.from(this.d);\n  }\n\n  get imaginaryEigenvalues() {\n    return Array.from(this.e);\n  }\n\n  get eigenvectorMatrix() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    let n = this.n;\n    let e = this.e;\n    let d = this.d;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X.set(i, j, 0);\n      }\n      X.set(i, i, d[i]);\n      if (e[i] > 0) {\n        X.set(i, i + 1, e[i]);\n      } else if (e[i] < 0) {\n        X.set(i, i - 1, e[i]);\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  let f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n        V.set(j, i, 0);\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V.set(j, i, f);\n        g = e[j] + V.get(j, j) * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V.get(k, j) * d[k];\n          e[k] += V.get(k, j) * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\n        }\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V.set(n - 1, i, V.get(i, i));\n    V.set(i, i, 1);\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V.get(k, i + 1) / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V.get(k, i + 1) * V.get(k, j);\n        }\n        for (k = 0; k <= i; k++) {\n          V.set(k, j, V.get(k, j) - g * d[k]);\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V.set(k, i + 1, 0);\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n    V.set(n - 1, j, 0);\n  }\n\n  V.set(n - 1, n - 1, 1);\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  let f = 0;\n  let tst1 = 0;\n  let eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V.get(k, i + 1);\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\n            V.set(k, i, c * V.get(k, i) - s * h);\n          }\n        }\n\n        p = (-s * s2 * c3 * el1 * e[l]) / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V.get(j, i);\n        V.set(j, i, V.get(j, k));\n        V.set(j, k, p);\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  let low = 0;\n  let high = n - 1;\n  let f, g, h, i, j, m;\n  let scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H.get(i, m - 1));\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H.get(i, m - 1) / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H.set(i, j, H.get(i, j) - f * ort[i]);\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H.set(i, j, H.get(i, j) - f * ort[j]);\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H.set(m, m - 1, scale * g);\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V.set(i, j, i === j ? 1 : 0);\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H.get(m, m - 1) !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H.get(i, m - 1);\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V.get(i, j);\n        }\n\n        g = g / ort[m] / H.get(m, m - 1);\n        for (i = m; i <= high; i++) {\n          V.set(i, j, V.get(i, j) + g * ort[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  let n = nn - 1;\n  let low = 0;\n  let high = nn - 1;\n  let eps = Number.EPSILON;\n  let exshift = 0;\n  let norm = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let z = 0;\n  let iter = 0;\n  let i, j, k, l, m, t, w, x, y;\n  let ra, sa, vr, vi;\n  let notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H.get(i, i);\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H.get(i, j));\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H.set(n, n, H.get(n, n) + exshift);\n      d[n] = H.get(n, n);\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H.get(n, n - 1) * H.get(n - 1, n);\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H.set(n, n, H.get(n, n) + exshift);\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\n      x = H.get(n, n);\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H.get(n, n - 1);\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H.get(n - 1, j);\n          H.set(n - 1, j, q * z + p * H.get(n, j));\n          H.set(n, j, q * H.get(n, j) - p * z);\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H.get(i, n - 1);\n          H.set(i, n - 1, q * z + p * H.get(i, n));\n          H.set(i, n, q * H.get(i, n) - p * z);\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V.get(i, n - 1);\n          V.set(i, n - 1, q * z + p * V.get(i, n));\n          V.set(i, n, q * V.get(i, n) - p * z);\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H.get(n, n);\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H.get(n - 1, n - 1);\n        w = H.get(n, n - 1) * H.get(n - 1, n);\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H.set(i, i, H.get(i, i) - x);\n        }\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H.set(i, i, H.get(i, i) - s);\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H.get(m, m);\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\n        q = H.get(m + 1, m + 1) - z - r - s;\n        r = H.get(m + 2, m + 1);\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H.get(m - 1, m - 1)) +\n                Math.abs(z) +\n                Math.abs(H.get(m + 1, m + 1))))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H.set(i, i - 2, 0);\n        if (i > m + 2) {\n          H.set(i, i - 3, 0);\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H.get(k, k - 1);\n          q = H.get(k + 1, k - 1);\n          r = notlast ? H.get(k + 2, k - 1) : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H.set(k, k - 1, -s * x);\n          } else if (l !== m) {\n            H.set(k, k - 1, -H.get(k, k - 1));\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H.get(k, j) + q * H.get(k + 1, j);\n            if (notlast) {\n              p = p + r * H.get(k + 2, j);\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\n            }\n\n            H.set(k, j, H.get(k, j) - p * x);\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\n            if (notlast) {\n              p = p + z * H.get(i, k + 2);\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\n            }\n\n            H.set(i, k, H.get(i, k) - p);\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\n            if (notlast) {\n              p = p + z * V.get(i, k + 2);\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\n            }\n\n            V.set(i, k, V.get(i, k) - p);\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H.set(n, n, 1);\n      for (i = n - 1; i >= 0; i--) {\n        w = H.get(i, i) - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H.get(i, j) * H.get(j, n);\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H.set(i, n, t);\n            H.set(\n              i + 1,\n              n,\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z,\n            );\n          }\n\n          t = Math.abs(H.get(i, n));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\n      } else {\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\n        H.set(n - 1, n - 1, cdivres[0]);\n        H.set(n - 1, n, cdivres[1]);\n      }\n\n      H.set(n, n - 1, 0);\n      H.set(n, n, 1);\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\n          sa = sa + H.get(i, j) * H.get(j, n);\n        }\n\n        w = H.get(i, i) - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi,\n            );\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H.set(\n                i + 1,\n                n - 1,\n                (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x,\n              );\n              H.set(\n                i + 1,\n                n,\n                (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x,\n              );\n            } else {\n              cdivres = cdiv(\n                -r - y * H.get(i, n - 1),\n                -s - y * H.get(i, n),\n                z,\n                q,\n              );\n              H.set(i + 1, n - 1, cdivres[0]);\n              H.set(i + 1, n, cdivres[1]);\n            }\n          }\n\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n - 1, H.get(j, n - 1) / t);\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V.set(i, j, H.get(i, j));\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V.get(i, k) * H.get(k, j);\n      }\n      V.set(i, j, z);\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  let r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    let a = value;\n    let dimension = a.rows;\n    let l = new Matrix(dimension, dimension);\n    let positiveDefinite = true;\n    let i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      let d = 0;\n      for (k = 0; k < j; k++) {\n        let s = 0;\n        for (i = 0; i < k; i++) {\n          s += l.get(k, i) * l.get(j, i);\n        }\n        s = (a.get(j, k) - s) / l.get(k, k);\n        l.set(j, k, s);\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l.set(j, j, Math.sqrt(Math.max(d, 0)));\n      for (k = j + 1; k < dimension; k++) {\n        l.set(j, k, 0);\n      }\n    }\n\n    this.L = l;\n    this.positiveDefinite = Boolean(positiveDefinite);\n  }\n\n  isPositiveDefinite() {\n    return this.positiveDefinite;\n  }\n\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let l = this.L;\n    let dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n    if (this.isPositiveDefinite() === false) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    let count = value.columns;\n    let B = value.clone();\n    let i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(k, i));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(i, k));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    return B;\n  }\n\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (!Y.isColumnVector() || Y.rows !== X.rows) {\n        throw new Error('Y must be a column vector of length X.rows');\n      }\n      u = Y;\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./string\"), exports);\n__exportStar(require(\"./array\"), exports);\n__exportStar(require(\"./number\"), exports);\n__exportStar(require(\"./math\"), exports);\n__exportStar(require(\"./object\"), exports);\n__exportStar(require(\"./function\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelize = exports.isString = void 0;\nvar isString = function (val) { return typeof val === 'string'; };\nexports.isString = isString;\nvar cacheStringFunction = function (fn) {\n    var cache = Object.create(null);\n    return (function (str) {\n        var hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nvar camelizeRE = /-(\\w)/g;\nexports.camelize = cacheStringFunction(function (str) {\n    return str.replace(camelizeRE, function (_, c) { return (c ? c.toUpperCase() : ''); });\n});\n// export const capitalize = cacheStringFunction(\n//   (str: string) => str.charAt(0).toUpperCase() + str.slice(1),\n// )\n//# sourceMappingURL=string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = void 0;\nexports.isArray = Array.isArray;\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toNumber = exports.isNaN = exports.isNumber = void 0;\nvar isNumber = function (val) { return typeof val === 'number'; };\nexports.isNumber = isNumber;\nvar isNaN = function (num) { return Number.isNaN(Number(num)); };\nexports.isNaN = isNaN;\nvar toNumber = function (val) {\n    var n = parseFloat(val);\n    return exports.isNaN(n) ? val : n;\n};\nexports.toNumber = toNumber;\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.traverseTreeUp = exports.scaleMatrix = exports.getAdjMatrix = exports.floydWarshall = exports.getDegree = void 0;\nvar getDegree = function (n, nodeIdxMap, edges) {\n    var degrees = [];\n    for (var i = 0; i < n; i++) {\n        degrees[i] = 0;\n    }\n    if (!edges)\n        return degrees;\n    edges.forEach(function (e) {\n        if (e.source) {\n            degrees[nodeIdxMap[e.source]] += 1;\n        }\n        if (e.target) {\n            degrees[nodeIdxMap[e.target]] += 1;\n        }\n    });\n    return degrees;\n};\nexports.getDegree = getDegree;\nvar floydWarshall = function (adjMatrix) {\n    // initialize\n    var dist = [];\n    var size = adjMatrix.length;\n    for (var i = 0; i < size; i += 1) {\n        dist[i] = [];\n        for (var j = 0; j < size; j += 1) {\n            if (i === j) {\n                dist[i][j] = 0;\n            }\n            else if (adjMatrix[i][j] === 0 || !adjMatrix[i][j]) {\n                dist[i][j] = Infinity;\n            }\n            else {\n                dist[i][j] = adjMatrix[i][j];\n            }\n        }\n    }\n    // floyd\n    for (var k = 0; k < size; k += 1) {\n        for (var i = 0; i < size; i += 1) {\n            for (var j = 0; j < size; j += 1) {\n                if (dist[i][j] > dist[i][k] + dist[k][j]) {\n                    dist[i][j] = dist[i][k] + dist[k][j];\n                }\n            }\n        }\n    }\n    return dist;\n};\nexports.floydWarshall = floydWarshall;\nvar getAdjMatrix = function (data, directed) {\n    var nodes = data.nodes, edges = data.edges;\n    var matrix = [];\n    // map node with index in data.nodes\n    var nodeMap = {};\n    if (!nodes) {\n        throw new Error('invalid nodes data!');\n    }\n    if (nodes) {\n        nodes.forEach(function (node, i) {\n            nodeMap[node.id] = i;\n            var row = [];\n            matrix.push(row);\n        });\n    }\n    if (edges) {\n        edges.forEach(function (e) {\n            var source = e.source, target = e.target;\n            var sIndex = nodeMap[source];\n            var tIndex = nodeMap[target];\n            matrix[sIndex][tIndex] = 1;\n            if (!directed) {\n                matrix[tIndex][sIndex] = 1;\n            }\n        });\n    }\n    return matrix;\n};\nexports.getAdjMatrix = getAdjMatrix;\n/**\n * scale matrix\n * @param matrix [ [], [], [] ]\n * @param ratio\n */\nvar scaleMatrix = function (matrix, ratio) {\n    var result = [];\n    matrix.forEach(function (row) {\n        var newRow = [];\n        row.forEach(function (v) {\n            newRow.push(v * ratio);\n        });\n        result.push(newRow);\n    });\n    return result;\n};\nexports.scaleMatrix = scaleMatrix;\n/**\n * depth first traverse, from leaves to root, children in inverse order\n *  if the fn returns false, terminate the traverse\n */\nvar traverseUp = function (data, fn) {\n    if (data && data.children) {\n        for (var i = data.children.length - 1; i >= 0; i--) {\n            if (!traverseUp(data.children[i], fn))\n                return;\n        }\n    }\n    if (!fn(data)) {\n        return false;\n    }\n    return true;\n};\n/**\n * depth first traverse, from leaves to root, children in inverse order\n * if the fn returns false, terminate the traverse\n */\nvar traverseTreeUp = function (data, fn) {\n    if (typeof fn !== 'function') {\n        return;\n    }\n    traverseUp(data, fn);\n};\nexports.traverseTreeUp = traverseTreeUp;\n//# sourceMappingURL=math.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = exports.isObject = void 0;\nvar isObject = function (val) {\n    return val !== null && typeof val === 'object';\n};\nexports.isObject = isObject;\nvar clone = function (target) {\n    if (target === null) {\n        return target;\n    }\n    if (target instanceof Date) {\n        return new Date(target.getTime());\n    }\n    if (target instanceof Array) {\n        var cp_1 = [];\n        target.forEach(function (v) {\n            cp_1.push(v);\n        });\n        return cp_1.map(function (n) { return exports.clone(n); });\n    }\n    if (typeof target === 'object' && target !== {}) {\n        var cp_2 = __assign({}, target);\n        Object.keys(cp_2).forEach(function (k) {\n            cp_2[k] = exports.clone(cp_2[k]);\n        });\n        return cp_2;\n    }\n    return target;\n};\nexports.clone = clone;\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFunction = void 0;\nvar isFunction = function (val) {\n    return typeof val === 'function';\n};\nexports.isFunction = isFunction;\n//# sourceMappingURL=function.js.map","\"use strict\";\n/**\n * @fileOverview MDS layout\n * @author shiwu.wyy@antfin.com\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MDSLayout = void 0;\nvar ml_matrix_1 = require(\"ml-matrix\");\nvar util_1 = require(\"../util\");\nvar base_1 = require(\"./base\");\n/**\n * mds 布局\n */\nvar MDSLayout = /** @class */ (function (_super) {\n    __extends(MDSLayout, _super);\n    function MDSLayout(options) {\n        var _this = _super.call(this) || this;\n        /** 布局中心 */\n        _this.center = [0, 0];\n        /** 边长度 */\n        _this.linkDistance = 50;\n        _this.nodes = [];\n        _this.edges = [];\n        /** 迭代结束的回调函数 */\n        _this.onLayoutEnd = function () { };\n        _this.updateCfg(options);\n        return _this;\n    }\n    MDSLayout.prototype.getDefaultCfg = function () {\n        return {\n            center: [0, 0],\n            linkDistance: 50\n        };\n    };\n    /**\n     * 执行布局\n     */\n    MDSLayout.prototype.execute = function () {\n        var self = this;\n        var nodes = self.nodes, _a = self.edges, edges = _a === void 0 ? [] : _a;\n        var center = self.center;\n        if (!nodes || nodes.length === 0) {\n            if (self.onLayoutEnd)\n                self.onLayoutEnd();\n            return;\n        }\n        if (nodes.length === 1) {\n            nodes[0].x = center[0];\n            nodes[0].y = center[1];\n            if (self.onLayoutEnd)\n                self.onLayoutEnd();\n            return;\n        }\n        var linkDistance = self.linkDistance;\n        // the graph-theoretic distance (shortest path distance) matrix\n        var adjMatrix = util_1.getAdjMatrix({ nodes: nodes, edges: edges }, false);\n        var distances = util_1.floydWarshall(adjMatrix);\n        self.handleInfinity(distances);\n        // scale the ideal edge length acoording to linkDistance\n        var scaledD = util_1.scaleMatrix(distances, linkDistance);\n        self.scaledDistances = scaledD;\n        // get positions by MDS\n        var positions = self.runMDS();\n        self.positions = positions;\n        positions.forEach(function (p, i) {\n            nodes[i].x = p[0] + center[0];\n            nodes[i].y = p[1] + center[1];\n        });\n        if (self.onLayoutEnd)\n            self.onLayoutEnd();\n        return {\n            nodes: nodes,\n            edges: edges\n        };\n    };\n    /**\n     * mds 算法\n     * @return {array} positions 计算后的节点位置数组\n     */\n    MDSLayout.prototype.runMDS = function () {\n        var self = this;\n        var dimension = 2;\n        var distances = self.scaledDistances;\n        // square distances\n        var M = ml_matrix_1.Matrix.mul(ml_matrix_1.Matrix.pow(distances, 2), -0.5);\n        // double centre the rows/columns\n        var rowMeans = M.mean(\"row\");\n        var colMeans = M.mean(\"column\");\n        var totalMean = M.mean();\n        M.add(totalMean)\n            .subRowVector(rowMeans)\n            .subColumnVector(colMeans);\n        // take the SVD of the double centred matrix, and return the\n        // points from it\n        var ret = new ml_matrix_1.SingularValueDecomposition(M);\n        var eigenValues = ml_matrix_1.Matrix.sqrt(ret.diagonalMatrix).diagonal();\n        return ret.leftSingularVectors.toJSON().map(function (row) {\n            return ml_matrix_1.Matrix.mul([row], [eigenValues])\n                .toJSON()[0]\n                .splice(0, dimension);\n        });\n    };\n    MDSLayout.prototype.handleInfinity = function (distances) {\n        var maxDistance = -999999;\n        distances.forEach(function (row) {\n            row.forEach(function (value) {\n                if (value === Infinity) {\n                    return;\n                }\n                if (maxDistance < value) {\n                    maxDistance = value;\n                }\n            });\n        });\n        distances.forEach(function (row, i) {\n            row.forEach(function (value, j) {\n                if (value === Infinity) {\n                    distances[i][j] = maxDistance;\n                }\n            });\n        });\n    };\n    MDSLayout.prototype.getType = function () {\n        return \"mds\";\n    };\n    return MDSLayout;\n}(base_1.Base));\nexports.MDSLayout = MDSLayout;\n//# sourceMappingURL=mds.js.map","import { MDSLayout } from '@antv/layout/lib/layout/mds';\n\nexport default MDSLayout;\n"],"sourceRoot":""}