{"version":3,"sources":["webpack://G6/webpack/universalModuleDefinition","webpack://G6/webpack/bootstrap","webpack://G6/../../src/layout/base.ts","webpack://G6/../../src/util/index.ts","webpack://G6/../../src/util/string.ts","webpack://G6/../../src/util/array.ts","webpack://G6/../../src/util/number.ts","webpack://G6/../../src/util/math.ts","webpack://G6/../../src/util/object.ts","webpack://G6/../../src/util/function.ts","webpack://G6/../../../src/layout/forceAtlas2/index.ts","webpack://G6/./src/extends/layout/forceAtlas2Layout/index.ts","webpack://G6/../../../src/layout/forceAtlas2/body.ts","webpack://G6/../../../src/layout/forceAtlas2/quad.ts","webpack://G6/../../../src/layout/forceAtlas2/quadTree.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","size","adjMatrix","j","dist","x","forces","kg","Body","QuadTree","bo"],"mappings":"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","file":"extends/layout/forceAtlas2Layout.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"G6\"] = factory();\n\telse\n\t\troot[\"G6\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 468);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Base = void 0;\nvar Base = /** @class */ (function () {\n    function Base() {\n        this.nodes = [];\n        this.edges = [];\n        this.combos = [];\n        this.positions = [];\n        this.destroyed = false;\n        this.onLayoutEnd = function () { };\n    }\n    Base.prototype.layout = function (data) {\n        this.init(data);\n        return this.execute(true);\n    };\n    Base.prototype.init = function (data) {\n        this.nodes = data.nodes || [];\n        this.edges = data.edges || [];\n        this.combos = data.combos || [];\n    };\n    Base.prototype.execute = function (reloadData) { };\n    Base.prototype.executeWithWorker = function () { };\n    Base.prototype.getDefaultCfg = function () {\n        return {};\n    };\n    Base.prototype.updateCfg = function (cfg) {\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    };\n    Base.prototype.getType = function () {\n        return 'base';\n    };\n    Base.prototype.destroy = function () {\n        this.nodes = null;\n        this.edges = null;\n        this.combos = null;\n        this.positions = null;\n        this.destroyed = true;\n    };\n    return Base;\n}());\nexports.Base = Base;\n//# sourceMappingURL=base.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./string\"), exports);\n__exportStar(require(\"./array\"), exports);\n__exportStar(require(\"./number\"), exports);\n__exportStar(require(\"./math\"), exports);\n__exportStar(require(\"./object\"), exports);\n__exportStar(require(\"./function\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelize = exports.isString = void 0;\nvar isString = function (val) { return typeof val === 'string'; };\nexports.isString = isString;\nvar cacheStringFunction = function (fn) {\n    var cache = Object.create(null);\n    return (function (str) {\n        var hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nvar camelizeRE = /-(\\w)/g;\nexports.camelize = cacheStringFunction(function (str) {\n    return str.replace(camelizeRE, function (_, c) { return (c ? c.toUpperCase() : ''); });\n});\n// export const capitalize = cacheStringFunction(\n//   (str: string) => str.charAt(0).toUpperCase() + str.slice(1),\n// )\n//# sourceMappingURL=string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = void 0;\nexports.isArray = Array.isArray;\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toNumber = exports.isNaN = exports.isNumber = void 0;\nvar isNumber = function (val) { return typeof val === 'number'; };\nexports.isNumber = isNumber;\nvar isNaN = function (num) { return Number.isNaN(Number(num)); };\nexports.isNaN = isNaN;\nvar toNumber = function (val) {\n    var n = parseFloat(val);\n    return exports.isNaN(n) ? val : n;\n};\nexports.toNumber = toNumber;\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.traverseTreeUp = exports.scaleMatrix = exports.getAdjMatrix = exports.floydWarshall = exports.getDegree = void 0;\nvar getDegree = function (n, nodeIdxMap, edges) {\n    var degrees = [];\n    for (var i = 0; i < n; i++) {\n        degrees[i] = 0;\n    }\n    if (!edges)\n        return degrees;\n    edges.forEach(function (e) {\n        if (e.source) {\n            degrees[nodeIdxMap[e.source]] += 1;\n        }\n        if (e.target) {\n            degrees[nodeIdxMap[e.target]] += 1;\n        }\n    });\n    return degrees;\n};\nexports.getDegree = getDegree;\nvar floydWarshall = function (adjMatrix) {\n    // initialize\n    var dist = [];\n    var size = adjMatrix.length;\n    for (var i = 0; i < size; i += 1) {\n        dist[i] = [];\n        for (var j = 0; j < size; j += 1) {\n            if (i === j) {\n                dist[i][j] = 0;\n            }\n            else if (adjMatrix[i][j] === 0 || !adjMatrix[i][j]) {\n                dist[i][j] = Infinity;\n            }\n            else {\n                dist[i][j] = adjMatrix[i][j];\n            }\n        }\n    }\n    // floyd\n    for (var k = 0; k < size; k += 1) {\n        for (var i = 0; i < size; i += 1) {\n            for (var j = 0; j < size; j += 1) {\n                if (dist[i][j] > dist[i][k] + dist[k][j]) {\n                    dist[i][j] = dist[i][k] + dist[k][j];\n                }\n            }\n        }\n    }\n    return dist;\n};\nexports.floydWarshall = floydWarshall;\nvar getAdjMatrix = function (data, directed) {\n    var nodes = data.nodes, edges = data.edges;\n    var matrix = [];\n    // map node with index in data.nodes\n    var nodeMap = {};\n    if (!nodes) {\n        throw new Error('invalid nodes data!');\n    }\n    if (nodes) {\n        nodes.forEach(function (node, i) {\n            nodeMap[node.id] = i;\n            var row = [];\n            matrix.push(row);\n        });\n    }\n    if (edges) {\n        edges.forEach(function (e) {\n            var source = e.source, target = e.target;\n            var sIndex = nodeMap[source];\n            var tIndex = nodeMap[target];\n            matrix[sIndex][tIndex] = 1;\n            if (!directed) {\n                matrix[tIndex][sIndex] = 1;\n            }\n        });\n    }\n    return matrix;\n};\nexports.getAdjMatrix = getAdjMatrix;\n/**\n * scale matrix\n * @param matrix [ [], [], [] ]\n * @param ratio\n */\nvar scaleMatrix = function (matrix, ratio) {\n    var result = [];\n    matrix.forEach(function (row) {\n        var newRow = [];\n        row.forEach(function (v) {\n            newRow.push(v * ratio);\n        });\n        result.push(newRow);\n    });\n    return result;\n};\nexports.scaleMatrix = scaleMatrix;\n/**\n * depth first traverse, from leaves to root, children in inverse order\n *  if the fn returns false, terminate the traverse\n */\nvar traverseUp = function (data, fn) {\n    if (data && data.children) {\n        for (var i = data.children.length - 1; i >= 0; i--) {\n            if (!traverseUp(data.children[i], fn))\n                return;\n        }\n    }\n    if (!fn(data)) {\n        return false;\n    }\n    return true;\n};\n/**\n * depth first traverse, from leaves to root, children in inverse order\n * if the fn returns false, terminate the traverse\n */\nvar traverseTreeUp = function (data, fn) {\n    if (typeof fn !== 'function') {\n        return;\n    }\n    traverseUp(data, fn);\n};\nexports.traverseTreeUp = traverseTreeUp;\n//# sourceMappingURL=math.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = exports.isObject = void 0;\nvar isObject = function (val) {\n    return val !== null && typeof val === 'object';\n};\nexports.isObject = isObject;\nvar clone = function (target) {\n    if (target === null) {\n        return target;\n    }\n    if (target instanceof Date) {\n        return new Date(target.getTime());\n    }\n    if (target instanceof Array) {\n        var cp_1 = [];\n        target.forEach(function (v) {\n            cp_1.push(v);\n        });\n        return cp_1.map(function (n) { return exports.clone(n); });\n    }\n    if (typeof target === 'object' && target !== {}) {\n        var cp_2 = __assign({}, target);\n        Object.keys(cp_2).forEach(function (k) {\n            cp_2[k] = exports.clone(cp_2[k]);\n        });\n        return cp_2;\n    }\n    return target;\n};\nexports.clone = clone;\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFunction = void 0;\nvar isFunction = function (val) {\n    return typeof val === 'function';\n};\nexports.isFunction = isFunction;\n//# sourceMappingURL=function.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForceAtlas2Layout = void 0;\nvar base_1 = require(\"../base\");\nvar util_1 = require(\"../../util\");\nvar body_1 = __importDefault(require(\"./body\"));\nvar quad_1 = __importDefault(require(\"./quad\"));\nvar quadTree_1 = __importDefault(require(\"./quadTree\"));\nvar ForceAtlas2Layout = /** @class */ (function (_super) {\n    __extends(ForceAtlas2Layout, _super);\n    function ForceAtlas2Layout(options) {\n        var _this = _super.call(this) || this;\n        /** 布局中心 */\n        _this.center = [0, 0];\n        /** 宽度 */\n        _this.width = 300;\n        /** 高度 */\n        _this.height = 300;\n        _this.nodes = [];\n        _this.edges = [];\n        /**\n         * the parameter for repulsive forces,\n         * it will scale the layout but won't change the layout\n         * larger the kr, looser the layout\n         * @type  {number}\n         */\n        _this.kr = 5;\n        /**\n         * the parameter for gravity forces\n         * @type  {number}\n         */\n        _this.kg = 1;\n        /**\n         * modes:\n         * 'normal' for normal using\n         * 'linlog' for compact clusters.\n         * @type  {string}\n         */\n        _this.mode = 'normal';\n        /**\n         * whether preventing the node overlapping\n         * @type  {boolean}\n         */\n        _this.preventOverlap = false;\n        /**\n         * whether active the dissuade hub mode\n         * true: grant authorities (nodes with a high indegree)\n         * a more central position than hubs (nodes with a high outdegree)\n         * @type  {boolean}\n         */\n        _this.dissuadeHubs = false;\n        /**\n         * whether active the barnes hut optimization on computing repulsive forces\n         * @type  {boolean}\n         */\n        _this.barnesHut = false;\n        /**\n         * the max iteration number\n         * @type  {number}\n         */\n        _this.maxIteration = 0;\n        /**\n         * control the global velocity\n         * defualt: 0.1(gephi)\n         * @type  {number}\n         */\n        _this.ks = 0.1;\n        /**\n         * the max global velocity\n         * @type  {number}\n         */\n        _this.ksmax = 10;\n        /**\n         * the tolerance for the global swinging\n         * @type  {number}\n         */\n        _this.tao = 0.1;\n        /**\n         * the function of layout complete listener, display the legend and minimap after layout\n         * @type  {function}\n         */\n        _this.onLayoutEnd = function () { };\n        /**\n         * activate prune or not.\n         * prune the leaves during most iterations, layout the leaves in the last 50 iteraitons.\n         * if prune === '', it will be activated when the nodes number > 100\n         * note that it will reduce the quality of the layout\n         * @type  {boolean}\n         */\n        _this.prune = false;\n        _this.updateCfg(options);\n        return _this;\n    }\n    ForceAtlas2Layout.prototype.getDefaultCfg = function () {\n        return {};\n    };\n    // execute the layout\n    ForceAtlas2Layout.prototype.execute = function () {\n        var self = this;\n        var nodes = self.nodes, maxIteration = self.maxIteration, onLayoutEnd = self.onLayoutEnd, prune = self.prune;\n        if (!self.width && typeof window !== \"undefined\") {\n            self.width = window.innerWidth;\n        }\n        if (!self.height && typeof window !== \"undefined\") {\n            self.height = window.innerHeight;\n        }\n        // the whidth of each nodes\n        var sizes = [];\n        var nodeNum = nodes.length;\n        for (var i = 0; i < nodeNum; i += 1) {\n            var node = nodes[i];\n            var nodeWidth = 10;\n            var nodeHeight = 10;\n            if (util_1.isNumber(node.size)) {\n                nodeWidth = node.size;\n                nodeHeight = node.size;\n            }\n            if (util_1.isArray(node.size)) {\n                if (!isNaN(node.size[0]))\n                    nodeWidth = node.size[0];\n                if (!isNaN(node.size[1]))\n                    nodeHeight = node.size[1];\n            }\n            if (self.getWidth && !isNaN(self.getWidth(node)))\n                nodeHeight = self.getWidth(node);\n            if (self.getHeight && !isNaN(self.getHeight(node)))\n                nodeWidth = self.getHeight(node);\n            var maxSize = Math.max(nodeWidth, nodeHeight);\n            sizes.push(maxSize);\n        }\n        if (!self.barnesHut && nodeNum > 250)\n            self.barnesHut = true;\n        if (!self.prune && nodeNum > 100)\n            self.prune = true;\n        if (this.maxIteration === 0 && !self.prune) {\n            maxIteration = 250;\n            if (nodeNum <= 200 && nodeNum > 100)\n                maxIteration = 1000;\n            else if (nodeNum > 200)\n                maxIteration = 1200;\n            this.maxIteration = maxIteration;\n        }\n        else if (this.maxIteration === 0 && prune) {\n            maxIteration = 100;\n            if (nodeNum <= 200 && nodeNum > 100)\n                maxIteration = 500;\n            else if (nodeNum > 200)\n                maxIteration = 950;\n            this.maxIteration = maxIteration;\n        }\n        if (!self.kr) {\n            self.kr = 50;\n            if (nodeNum > 100 && nodeNum <= 500)\n                self.kr = 20;\n            else if (nodeNum > 500)\n                self.kr = 1;\n        }\n        if (!self.kg) {\n            self.kg = 20;\n            if (nodeNum > 100 && nodeNum <= 500)\n                self.kg = 10;\n            else if (nodeNum > 500)\n                self.kg = 1;\n        }\n        this.nodes = self.updateNodesByForces(sizes);\n        onLayoutEnd();\n    };\n    ForceAtlas2Layout.prototype.updateNodesByForces = function (sizes) {\n        var self = this;\n        var nodes = self.nodes, edges = self.edges, maxIteration = self.maxIteration;\n        var nonLoopEdges = edges.filter(function (edge) {\n            return edge.source !== edge.target;\n        });\n        var size = nodes.length;\n        var esize = nonLoopEdges.length;\n        var degrees = [];\n        var idMap = {};\n        var edgeEndsIdMap = {};\n        var Es = [];\n        for (var i = 0; i < size; i += 1) {\n            idMap[nodes[i].id] = i;\n            degrees[i] = 0;\n            if (nodes[i].x === undefined || isNaN(nodes[i].x)) {\n                nodes[i].x = Math.random() * 1000;\n            }\n            if (nodes[i].y === undefined || isNaN(nodes[i].y)) {\n                nodes[i].y = Math.random() * 1000;\n            }\n            Es.push({ x: nodes[i].x, y: nodes[i].y });\n        }\n        for (var i = 0; i < esize; i += 1) {\n            var node1 = void 0;\n            var node2 = void 0;\n            var sIdx = 0, tIdx = 0;\n            for (var j = 0; j < size; j += 1) {\n                if (nodes[j].id === nonLoopEdges[i].source) {\n                    node1 = nodes[j];\n                    sIdx = j;\n                }\n                else if (nodes[j].id === nonLoopEdges[i].target) {\n                    node2 = nodes[j];\n                    tIdx = j;\n                }\n                edgeEndsIdMap[i] = { sourceIdx: sIdx, targetIdx: tIdx };\n            }\n            if (node1)\n                degrees[idMap[node1.id]] += 1;\n            if (node2)\n                degrees[idMap[node2.id]] += 1;\n        }\n        var iteration = maxIteration;\n        nodes = this.iterate(iteration, idMap, edgeEndsIdMap, esize, degrees, sizes);\n        // if prune, place the leaves around their parents, and then re-layout for several iterations.\n        if (self.prune) {\n            for (var j = 0; j < esize; j += 1) {\n                if (degrees[edgeEndsIdMap[j].sourceIdx] <= 1) {\n                    nodes[edgeEndsIdMap[j].sourceIdx].x = nodes[edgeEndsIdMap[j].targetIdx].x;\n                    nodes[edgeEndsIdMap[j].sourceIdx].y = nodes[edgeEndsIdMap[j].targetIdx].y;\n                }\n                else if (degrees[edgeEndsIdMap[j].targetIdx] <= 1) {\n                    nodes[edgeEndsIdMap[j].targetIdx].x = nodes[edgeEndsIdMap[j].sourceIdx].x;\n                    nodes[edgeEndsIdMap[j].targetIdx].y = nodes[edgeEndsIdMap[j].sourceIdx].y;\n                }\n            }\n            self.prune = false;\n            self.barnesHut = false;\n            iteration = 100;\n            nodes = this.iterate(iteration, idMap, edgeEndsIdMap, esize, degrees, sizes);\n        }\n        return nodes;\n    };\n    ForceAtlas2Layout.prototype.iterate = function (iteration, idMap, edgeEndsIdMap, esize, degrees, sizes) {\n        var self = this;\n        var nodes = self.nodes, kr = self.kr, preventOverlap = self.preventOverlap, barnesHut = self.barnesHut;\n        var nodeNum = nodes.length;\n        var sg = 0;\n        var krPrime = 100;\n        var iter = iteration;\n        var prevoIter = 50;\n        var forces = [];\n        var preForces = [];\n        var bodies = [];\n        for (var i = 0; i < nodeNum; i += 1) {\n            forces[2 * i] = 0;\n            forces[2 * i + 1] = 0;\n            if (barnesHut) {\n                var params = {\n                    id: i,\n                    rx: nodes[i].x,\n                    ry: nodes[i].y,\n                    mass: 1,\n                    g: kr,\n                    degree: degrees[i]\n                };\n                bodies[i] = new body_1.default(params);\n            }\n        }\n        while (iter > 0) {\n            for (var i = 0; i < nodeNum; i += 1) {\n                preForces[2 * i] = forces[2 * i];\n                preForces[2 * i + 1] = forces[2 * i + 1];\n                forces[2 * i] = 0;\n                forces[2 * i + 1] = 0;\n            }\n            // attractive forces, existing on every actual edge\n            forces = this.getAttrForces(iter, prevoIter, esize, idMap, edgeEndsIdMap, degrees, sizes, forces);\n            // repulsive forces and Gravity, existing on every node pair\n            // if preventOverlap, using the no-optimized method in the last prevoIter instead.\n            if (barnesHut && ((preventOverlap && iter > prevoIter) || !preventOverlap)) {\n                forces = this.getOptRepGraForces(forces, bodies, degrees);\n            }\n            else {\n                forces = this.getRepGraForces(iter, prevoIter, forces, krPrime, sizes, degrees);\n            }\n            // update the positions\n            var res = this.updatePos(forces, preForces, sg, degrees);\n            nodes = res.nodes;\n            sg = res.sg;\n            iter--;\n            if (self.tick)\n                self.tick();\n        }\n        ;\n        return nodes;\n    };\n    ForceAtlas2Layout.prototype.getAttrForces = function (iter, prevoIter, esize, idMap, edgeEndsIdMap, degrees, sizes, forces) {\n        var self = this;\n        var nodes = self.nodes, preventOverlap = self.preventOverlap, dissuadeHubs = self.dissuadeHubs, mode = self.mode, prune = self.prune;\n        for (var i = 0; i < esize; i += 1) {\n            var sourceNode = nodes[edgeEndsIdMap[i].sourceIdx];\n            var sourceIdx = edgeEndsIdMap[i].sourceIdx;\n            var targetNode = nodes[edgeEndsIdMap[i].targetIdx];\n            var targetIdx = edgeEndsIdMap[i].targetIdx;\n            if (prune && (degrees[sourceIdx] <= 1 || degrees[targetIdx] <= 1))\n                continue;\n            var dir = [targetNode.x - sourceNode.x, targetNode.y - sourceNode.y];\n            var eucliDis = Math.hypot(dir[0], dir[1]);\n            eucliDis = eucliDis < 0.0001 ? 0.0001 : eucliDis;\n            dir[0] = dir[0] / eucliDis;\n            dir[1] = dir[1] / eucliDis;\n            if (preventOverlap && iter < prevoIter)\n                eucliDis = eucliDis - sizes[sourceIdx] - sizes[targetIdx];\n            var Fa1 = eucliDis;\n            var Fa2 = Fa1;\n            if (mode === 'linlog') {\n                Fa1 = Math.log(1 + eucliDis);\n                Fa2 = Fa1;\n            }\n            if (dissuadeHubs) {\n                Fa1 = eucliDis / degrees[sourceIdx];\n                Fa2 = eucliDis / degrees[targetIdx];\n            }\n            if (preventOverlap && iter < prevoIter && eucliDis <= 0) {\n                Fa1 = 0;\n                Fa2 = 0;\n            }\n            else if (preventOverlap && iter < prevoIter && eucliDis > 0) {\n                Fa1 = eucliDis;\n                Fa2 = eucliDis;\n            }\n            forces[2 * idMap[sourceNode.id]] += Fa1 * dir[0];\n            forces[2 * idMap[targetNode.id]] -= Fa2 * dir[0];\n            forces[2 * idMap[sourceNode.id] + 1] += Fa1 * dir[1];\n            forces[2 * idMap[targetNode.id] + 1] -= Fa2 * dir[1];\n        }\n        return forces;\n    };\n    ForceAtlas2Layout.prototype.getRepGraForces = function (iter, prevoIter, forces, krPrime, sizes, degrees) {\n        var self = this;\n        var nodes = self.nodes, preventOverlap = self.preventOverlap, kr = self.kr, kg = self.kg, center = self.center, prune = self.prune;\n        var nodeNum = nodes.length;\n        for (var i = 0; i < nodeNum; i += 1) {\n            for (var j = i + 1; j < nodeNum; j += 1) {\n                if (prune && (degrees[i] <= 1 || degrees[j] <= 1))\n                    continue;\n                var dir_1 = [nodes[j].x - nodes[i].x, nodes[j].y - nodes[i].y];\n                var eucliDis_1 = Math.hypot(dir_1[0], dir_1[1]);\n                eucliDis_1 = eucliDis_1 < 0.0001 ? 0.0001 : eucliDis_1;\n                dir_1[0] = dir_1[0] / eucliDis_1;\n                dir_1[1] = dir_1[1] / eucliDis_1;\n                if (preventOverlap && iter < prevoIter)\n                    eucliDis_1 = eucliDis_1 - sizes[i] - sizes[j];\n                var Fr = kr * (degrees[i] + 1) * (degrees[j] + 1) / eucliDis_1;\n                if (preventOverlap && iter < prevoIter && eucliDis_1 < 0) {\n                    Fr = krPrime * (degrees[i] + 1) * (degrees[j] + 1);\n                }\n                else if (preventOverlap && iter < prevoIter && eucliDis_1 === 0) {\n                    Fr = 0;\n                }\n                else if (preventOverlap && iter < prevoIter && eucliDis_1 > 0) {\n                    Fr = kr * (degrees[i] + 1) * (degrees[j] + 1) / eucliDis_1;\n                }\n                forces[2 * i] -= Fr * dir_1[0];\n                forces[2 * j] += Fr * dir_1[0];\n                forces[2 * i + 1] -= Fr * dir_1[1];\n                forces[2 * j + 1] += Fr * dir_1[1];\n            }\n            // gravity\n            var dir = [nodes[i].x - center[0], nodes[i].y - center[1]];\n            var eucliDis = Math.hypot(dir[0], dir[1]);\n            dir[0] = dir[0] / eucliDis;\n            dir[1] = dir[1] / eucliDis;\n            var Fg = kg * (degrees[i] + 1);\n            forces[2 * i] -= Fg * dir[0];\n            forces[2 * i + 1] -= Fg * dir[1];\n        }\n        return forces;\n    };\n    ForceAtlas2Layout.prototype.getOptRepGraForces = function (forces, bodies, degrees) {\n        var self = this;\n        var nodes = self.nodes, kg = self.kg, center = self.center, prune = self.prune;\n        var nodeNum = nodes.length;\n        var minx = 9e10, maxx = -9e10, miny = 9e10, maxy = -9e10;\n        for (var i = 0; i < nodeNum; i += 1) {\n            if (prune && (degrees[i] <= 1))\n                continue;\n            bodies[i].setPos(nodes[i].x, nodes[i].y);\n            if (nodes[i].x >= maxx)\n                maxx = nodes[i].x;\n            if (nodes[i].x <= minx)\n                minx = nodes[i].x;\n            if (nodes[i].y >= maxy)\n                maxy = nodes[i].y;\n            if (nodes[i].y <= miny)\n                miny = nodes[i].y;\n        }\n        var width = Math.max(maxx - minx, maxy - miny);\n        var quadParams = {\n            xmid: (maxx + minx) / 2,\n            ymid: (maxy + miny) / 2,\n            length: width,\n            massCenter: center,\n            mass: nodeNum\n        };\n        var quad = new quad_1.default(quadParams);\n        var quadTree = new quadTree_1.default(quad);\n        // build the tree, insert the nodes(quads) into the tree\n        for (var i = 0; i < nodeNum; i += 1) {\n            if (prune && (degrees[i] <= 1))\n                continue;\n            if (bodies[i].in(quad))\n                quadTree.insert(bodies[i]);\n        }\n        // update the repulsive forces and the gravity.\n        for (var i = 0; i < nodeNum; i += 1) {\n            if (prune && (degrees[i] <= 1))\n                continue;\n            bodies[i].resetForce();\n            quadTree.updateForce(bodies[i]);\n            forces[2 * i] -= bodies[i].fx;\n            forces[2 * i + 1] -= bodies[i].fy;\n            // gravity\n            var dir = [nodes[i].x - center[0], nodes[i].y - center[1]];\n            var eucliDis = Math.hypot(dir[0], dir[1]);\n            eucliDis = eucliDis < 0.0001 ? 0.0001 : eucliDis;\n            dir[0] = dir[0] / eucliDis;\n            dir[1] = dir[1] / eucliDis;\n            var Fg = kg * (degrees[i] + 1);\n            forces[2 * i] -= Fg * dir[0];\n            forces[2 * i + 1] -= Fg * dir[1];\n        }\n        return forces;\n    };\n    ForceAtlas2Layout.prototype.updatePos = function (forces, preForces, sg, degrees) {\n        var self = this;\n        var nodes = self.nodes, ks = self.ks, tao = self.tao, prune = self.prune, ksmax = self.ksmax;\n        var nodeNum = nodes.length;\n        var swgns = [];\n        var trans = [];\n        // swg(G) and tra(G)\n        var swgG = 0;\n        var traG = 0;\n        for (var i = 0; i < nodeNum; i += 1) {\n            if (prune && (degrees[i] <= 1))\n                continue;\n            var minus = [forces[2 * i] - preForces[2 * i],\n                forces[2 * i + 1] - preForces[2 * i + 1]\n            ];\n            var minusNorm = Math.hypot(minus[0], minus[1]);\n            var add = [forces[2 * i] + preForces[2 * i],\n                forces[2 * i + 1] + preForces[2 * i + 1]\n            ];\n            var addNorm = Math.hypot(add[0], add[1]);\n            swgns[i] = minusNorm;\n            trans[i] = addNorm / 2;\n            swgG += (degrees[i] + 1) * swgns[i];\n            traG += (degrees[i] + 1) * trans[i];\n        }\n        var preSG = sg;\n        sg = tao * traG / swgG;\n        if (preSG !== 0) {\n            sg = sg > (1.5 * preSG) ? (1.5 * preSG) : sg;\n        }\n        // update the node positions\n        for (var i = 0; i < nodeNum; i += 1) {\n            if (prune && (degrees[i] <= 1))\n                continue;\n            var sn = ks * sg / (1 + sg * Math.sqrt(swgns[i]));\n            var absForce = Math.hypot(forces[2 * i], forces[2 * i + 1]);\n            absForce = absForce < 0.0001 ? 0.0001 : absForce;\n            var max = ksmax / absForce;\n            sn = sn > max ? max : sn;\n            var dnx = sn * forces[2 * i];\n            var dny = sn * forces[2 * i + 1];\n            nodes[i].x += dnx;\n            nodes[i].y += dny;\n        }\n        return { nodes: nodes, sg: sg };\n    };\n    return ForceAtlas2Layout;\n}(base_1.Base));\nexports.ForceAtlas2Layout = ForceAtlas2Layout;\n//# sourceMappingURL=index.js.map","import { ForceAtlas2Layout } from '@antv/layout/lib/layout/forceAtlas2';\n\nexport default ForceAtlas2Layout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// represents a body(a point mass) and its position\nvar Body = /** @class */ (function () {\n    function Body(params) {\n        /**\n         * the id of this body, the same with the node id\n         * @type  {number}\n         */\n        this.id = params.id || 0;\n        /**\n         * the position of this body\n         * @type  {number}\n         */\n        this.rx = params.rx;\n        /**\n         * the position of this body\n         * @type  {number}\n         */\n        this.ry = params.ry;\n        /**\n         * the force acting on this body\n         * @type  {number}\n         */\n        this.fx = 0;\n        /**\n         * the force acting on this body\n         * @type  {number}\n         */\n        this.fy = 0;\n        /**\n         * the mass of this body, =1 for a node\n         * @type  {number}\n         */\n        this.mass = params.mass;\n        /**\n         * the degree of the node represented by this body\n         * @type  {number}\n         */\n        this.degree = params.degree;\n        /**\n         * the parameter for repulsive force, = kr\n         * @type  {number}\n         */\n        this.g = params.g || 0;\n    }\n    // returns the euclidean distance\n    Body.prototype.distanceTo = function (bo) {\n        var dx = this.rx - bo.rx;\n        var dy = this.ry - bo.ry;\n        return Math.hypot(dx, dy);\n    };\n    Body.prototype.setPos = function (x, y) {\n        this.rx = x;\n        this.ry = y;\n    };\n    // resets the forces\n    Body.prototype.resetForce = function () {\n        this.fx = 0;\n        this.fy = 0;\n    };\n    Body.prototype.addForce = function (b) {\n        var dx = b.rx - this.rx;\n        var dy = b.ry - this.ry;\n        var dist = Math.hypot(dx, dy);\n        dist = dist < 0.0001 ? 0.0001 : dist;\n        // the repulsive defined by force atlas 2\n        var F = (this.g * (this.degree + 1) * (b.degree + 1)) / dist;\n        this.fx += F * dx / dist;\n        this.fy += F * dy / dist;\n    };\n    // if quad contains this body\n    Body.prototype.in = function (quad) {\n        return quad.contains(this.rx, this.ry);\n    };\n    // returns a new body\n    Body.prototype.add = function (bo) {\n        var nenwMass = this.mass + bo.mass;\n        var x = (this.rx * this.mass + bo.rx * bo.mass) / nenwMass;\n        var y = (this.ry * this.mass + bo.ry * bo.mass) / nenwMass;\n        var dg = this.degree + bo.degree;\n        var params = {\n            rx: x,\n            ry: y,\n            mass: nenwMass,\n            degree: dg\n        };\n        return new Body(params);\n    };\n    return Body;\n}());\nexports.default = Body;\n//# sourceMappingURL=body.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Quad = /** @class */ (function () {\n    function Quad(params) {\n        /**\n         * the center position of this quad\n         * @type  {number}\n         */\n        this.xmid = params.xmid;\n        /**\n         * the center position of this quad\n         * @type  {number}\n         */\n        this.ymid = params.ymid;\n        /**\n         * the length of this quad\n         * @type  {number}\n         */\n        this.length = params.length;\n        /**\n         * the mass center of this quad\n         * @type  {number}\n         */\n        this.massCenter = params.massCenter || [0, 0];\n        /**\n         * the mass of this quad\n         * @type  {number}\n         */\n        this.mass = params.mass || 1;\n    }\n    Quad.prototype.getLength = function () {\n        return this.length;\n    };\n    Quad.prototype.contains = function (x, y) {\n        var halfLen = this.length / 2;\n        return (x <= this.xmid + halfLen &&\n            x >= this.xmid - halfLen &&\n            y <= this.ymid + halfLen &&\n            y >= this.ymid - halfLen);\n    };\n    // northwest quadrant\n    Quad.prototype.NW = function () {\n        var x = this.xmid - this.length / 4;\n        var y = this.ymid + this.length / 4;\n        var len = this.length / 2;\n        var params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        var NW = new Quad(params);\n        return NW;\n    };\n    // northeast\n    Quad.prototype.NE = function () {\n        var x = this.xmid + this.length / 4;\n        var y = this.ymid + this.length / 4;\n        var len = this.length / 2;\n        var params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        var NE = new Quad(params);\n        return NE;\n    };\n    // southwest\n    Quad.prototype.SW = function () {\n        var x = this.xmid - this.length / 4;\n        var y = this.ymid - this.length / 4;\n        var len = this.length / 2;\n        var params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        var SW = new Quad(params);\n        return SW;\n    };\n    // southeast\n    Quad.prototype.SE = function () {\n        var x = this.xmid + this.length / 4;\n        var y = this.ymid - this.length / 4;\n        var len = this.length / 2;\n        var params = {\n            xmid: x,\n            ymid: y,\n            length: len\n        };\n        var SE = new Quad(params);\n        return SE;\n    };\n    return Quad;\n}());\nexports.default = Quad;\n//# sourceMappingURL=quad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileOverview quadTree\n * @author shiwu.wyy@antfin.com\n */\nvar QuadTree = /** @class */ (function () {\n    // each quadtree represents a quadrant and an aggregate body\n    // that represents all bodies inside the quadrant\n    function QuadTree(param) {\n        /**\n         * (aggregated) body in this quad\n         * @type  {object}\n         */\n        this.body = null;\n        /**\n         * tree representing the northwest quadrant\n         * @type  {object}\n         */\n        this.quad = null;\n        this.NW = null;\n        this.NE = null;\n        this.SW = null;\n        this.SE = null;\n        /**\n         * threshold\n         * @type  {number}\n         */\n        this.theta = 0.5;\n        if (param != null)\n            this.quad = param;\n    }\n    // insert a body(node) into the tree\n    QuadTree.prototype.insert = function (bo) {\n        // if this node does not contain a body, put the new body bo here\n        if (this.body == null) {\n            this.body = bo;\n            return;\n        }\n        // internal node\n        if (!this._isExternal()) {\n            // update mass info\n            this.body = this.body.add(bo);\n            // insert body into quadrant\n            this._putBody(bo);\n        }\n        else { // external node\n            // divide this region into four children\n            if (this.quad) {\n                this.NW = new QuadTree(this.quad.NW());\n                this.NE = new QuadTree(this.quad.NE());\n                this.SW = new QuadTree(this.quad.SW());\n                this.SE = new QuadTree(this.quad.SE());\n            }\n            // insert this body and bo\n            this._putBody(this.body);\n            this._putBody(bo);\n            // update the mass info\n            this.body = this.body.add(bo);\n        }\n    };\n    // inserts bo into a quad\n    QuadTree.prototype._putBody = function (bo) {\n        if (!this.quad)\n            return;\n        if (bo.in(this.quad.NW()) && this.NW)\n            this.NW.insert(bo);\n        else if (bo.in(this.quad.NE()) && this.NE)\n            this.NE.insert(bo);\n        else if (bo.in(this.quad.SW()) && this.SW)\n            this.SW.insert(bo);\n        else if (bo.in(this.quad.SE()) && this.SE)\n            this.SE.insert(bo);\n    };\n    QuadTree.prototype._isExternal = function () {\n        // four children are null\n        return (this.NW == null && this.NE == null && this.SW == null && this.SE == null);\n    };\n    // update the forces\n    QuadTree.prototype.updateForce = function (bo) {\n        if (this.body == null || bo === this.body) {\n            return;\n        }\n        // if the current node is external\n        if (this._isExternal())\n            bo.addForce(this.body);\n        // internal nodes\n        else {\n            var s = this.quad ? this.quad.getLength() : 0;\n            var d = this.body.distanceTo(bo);\n            // b is far enough\n            if ((s / d) < this.theta)\n                bo.addForce(this.body);\n            else {\n                this.NW && this.NW.updateForce(bo);\n                this.NE && this.NE.updateForce(bo);\n                this.SW && this.SW.updateForce(bo);\n                this.SE && this.SE.updateForce(bo);\n            }\n        }\n    };\n    return QuadTree;\n}());\nexports.default = QuadTree;\n//# sourceMappingURL=quadTree.js.map"],"sourceRoot":""}