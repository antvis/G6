{"version":3,"sources":["webpack://G6/webpack/universalModuleDefinition","webpack://G6/webpack/bootstrap","webpack://G6/../../src/layout/base.ts","webpack://G6/../../src/util/index.ts","webpack://G6/../../src/util/string.ts","webpack://G6/../../src/util/array.ts","webpack://G6/../../src/util/number.ts","webpack://G6/../../src/util/math.ts","webpack://G6/../../src/util/object.ts","webpack://G6/../../src/util/function.ts","webpack://G6/../../src/layout/comboForce.ts","webpack://G6/./src/extends/layout/comboForceLayout/index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","size","adjMatrix","j","dist","u","id"],"mappings":"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","file":"extends/layout/comboForceLayout.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"G6\"] = factory();\n\telse\n\t\troot[\"G6\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 287);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Base = void 0;\nvar Base = /** @class */ (function () {\n    function Base() {\n        this.nodes = [];\n        this.edges = [];\n        this.combos = [];\n        this.positions = [];\n        this.destroyed = false;\n        this.onLayoutEnd = function () { };\n    }\n    Base.prototype.layout = function (data) {\n        this.init(data);\n        return this.execute(true);\n    };\n    Base.prototype.init = function (data) {\n        this.nodes = data.nodes || [];\n        this.edges = data.edges || [];\n        this.combos = data.combos || [];\n    };\n    Base.prototype.execute = function (reloadData) { };\n    Base.prototype.executeWithWorker = function () { };\n    Base.prototype.getDefaultCfg = function () {\n        return {};\n    };\n    Base.prototype.updateCfg = function (cfg) {\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    };\n    Base.prototype.getType = function () {\n        return 'base';\n    };\n    Base.prototype.destroy = function () {\n        this.nodes = null;\n        this.edges = null;\n        this.combos = null;\n        this.positions = null;\n        this.destroyed = true;\n    };\n    return Base;\n}());\nexports.Base = Base;\n//# sourceMappingURL=base.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./string\"), exports);\n__exportStar(require(\"./array\"), exports);\n__exportStar(require(\"./number\"), exports);\n__exportStar(require(\"./math\"), exports);\n__exportStar(require(\"./object\"), exports);\n__exportStar(require(\"./function\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelize = exports.isString = void 0;\nvar isString = function (val) { return typeof val === 'string'; };\nexports.isString = isString;\nvar cacheStringFunction = function (fn) {\n    var cache = Object.create(null);\n    return (function (str) {\n        var hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nvar camelizeRE = /-(\\w)/g;\nexports.camelize = cacheStringFunction(function (str) {\n    return str.replace(camelizeRE, function (_, c) { return (c ? c.toUpperCase() : ''); });\n});\n// export const capitalize = cacheStringFunction(\n//   (str: string) => str.charAt(0).toUpperCase() + str.slice(1),\n// )\n//# sourceMappingURL=string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = void 0;\nexports.isArray = Array.isArray;\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toNumber = exports.isNaN = exports.isNumber = void 0;\nvar isNumber = function (val) { return typeof val === 'number'; };\nexports.isNumber = isNumber;\nvar isNaN = function (num) { return Number.isNaN(Number(num)); };\nexports.isNaN = isNaN;\nvar toNumber = function (val) {\n    var n = parseFloat(val);\n    return exports.isNaN(n) ? val : n;\n};\nexports.toNumber = toNumber;\n//# sourceMappingURL=number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.traverseTreeUp = exports.scaleMatrix = exports.getAdjMatrix = exports.floydWarshall = exports.getDegree = void 0;\nvar getDegree = function (n, nodeIdxMap, edges) {\n    var degrees = [];\n    for (var i = 0; i < n; i++) {\n        degrees[i] = 0;\n    }\n    if (!edges)\n        return degrees;\n    edges.forEach(function (e) {\n        if (e.source) {\n            degrees[nodeIdxMap[e.source]] += 1;\n        }\n        if (e.target) {\n            degrees[nodeIdxMap[e.target]] += 1;\n        }\n    });\n    return degrees;\n};\nexports.getDegree = getDegree;\nvar floydWarshall = function (adjMatrix) {\n    // initialize\n    var dist = [];\n    var size = adjMatrix.length;\n    for (var i = 0; i < size; i += 1) {\n        dist[i] = [];\n        for (var j = 0; j < size; j += 1) {\n            if (i === j) {\n                dist[i][j] = 0;\n            }\n            else if (adjMatrix[i][j] === 0 || !adjMatrix[i][j]) {\n                dist[i][j] = Infinity;\n            }\n            else {\n                dist[i][j] = adjMatrix[i][j];\n            }\n        }\n    }\n    // floyd\n    for (var k = 0; k < size; k += 1) {\n        for (var i = 0; i < size; i += 1) {\n            for (var j = 0; j < size; j += 1) {\n                if (dist[i][j] > dist[i][k] + dist[k][j]) {\n                    dist[i][j] = dist[i][k] + dist[k][j];\n                }\n            }\n        }\n    }\n    return dist;\n};\nexports.floydWarshall = floydWarshall;\nvar getAdjMatrix = function (data, directed) {\n    var nodes = data.nodes, edges = data.edges;\n    var matrix = [];\n    // map node with index in data.nodes\n    var nodeMap = {};\n    if (!nodes) {\n        throw new Error('invalid nodes data!');\n    }\n    if (nodes) {\n        nodes.forEach(function (node, i) {\n            nodeMap[node.id] = i;\n            var row = [];\n            matrix.push(row);\n        });\n    }\n    if (edges) {\n        edges.forEach(function (e) {\n            var source = e.source, target = e.target;\n            var sIndex = nodeMap[source];\n            var tIndex = nodeMap[target];\n            matrix[sIndex][tIndex] = 1;\n            if (!directed) {\n                matrix[tIndex][sIndex] = 1;\n            }\n        });\n    }\n    return matrix;\n};\nexports.getAdjMatrix = getAdjMatrix;\n/**\n * scale matrix\n * @param matrix [ [], [], [] ]\n * @param ratio\n */\nvar scaleMatrix = function (matrix, ratio) {\n    var result = [];\n    matrix.forEach(function (row) {\n        var newRow = [];\n        row.forEach(function (v) {\n            newRow.push(v * ratio);\n        });\n        result.push(newRow);\n    });\n    return result;\n};\nexports.scaleMatrix = scaleMatrix;\n/**\n * depth first traverse, from leaves to root, children in inverse order\n *  if the fn returns false, terminate the traverse\n */\nvar traverseUp = function (data, fn) {\n    if (data && data.children) {\n        for (var i = data.children.length - 1; i >= 0; i--) {\n            if (!traverseUp(data.children[i], fn))\n                return;\n        }\n    }\n    if (!fn(data)) {\n        return false;\n    }\n    return true;\n};\n/**\n * depth first traverse, from leaves to root, children in inverse order\n * if the fn returns false, terminate the traverse\n */\nvar traverseTreeUp = function (data, fn) {\n    if (typeof fn !== 'function') {\n        return;\n    }\n    traverseUp(data, fn);\n};\nexports.traverseTreeUp = traverseTreeUp;\n//# sourceMappingURL=math.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = exports.isObject = void 0;\nvar isObject = function (val) {\n    return val !== null && typeof val === 'object';\n};\nexports.isObject = isObject;\nvar clone = function (target) {\n    if (target === null) {\n        return target;\n    }\n    if (target instanceof Date) {\n        return new Date(target.getTime());\n    }\n    if (target instanceof Array) {\n        var cp_1 = [];\n        target.forEach(function (v) {\n            cp_1.push(v);\n        });\n        return cp_1.map(function (n) { return exports.clone(n); });\n    }\n    if (typeof target === 'object' && target !== {}) {\n        var cp_2 = __assign({}, target);\n        Object.keys(cp_2).forEach(function (k) {\n            cp_2[k] = exports.clone(cp_2[k]);\n        });\n        return cp_2;\n    }\n    return target;\n};\nexports.clone = clone;\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFunction = void 0;\nvar isFunction = function (val) {\n    return typeof val === 'function';\n};\nexports.isFunction = isFunction;\n//# sourceMappingURL=function.js.map","\"use strict\";\n/**\n * @fileOverview Combo force layout\n * @author shiwu.wyy@antfin.com\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ComboForceLayout = void 0;\nvar base_1 = require(\"./base\");\nvar util_1 = require(\"../util\");\n/**\n * force layout for graph with combos\n */\nvar ComboForceLayout = /** @class */ (function (_super) {\n    __extends(ComboForceLayout, _super);\n    function ComboForceLayout(options) {\n        var _this = _super.call(this) || this;\n        /** 布局中心 */\n        _this.center = [0, 0];\n        /** 停止迭代的最大迭代数 */\n        _this.maxIteration = 100;\n        /** 重力大小，影响图的紧凑程度 */\n        _this.gravity = 10;\n        /** 群组中心力大小 */\n        _this.comboGravity = 10;\n        /** 默认边长度 */\n        _this.linkDistance = 10;\n        /** 每次迭代位移的衰减相关参数 */\n        _this.alpha = 1;\n        _this.alphaMin = 0.001;\n        _this.alphaDecay = 1 - Math.pow(_this.alphaMin, (1 / 300));\n        _this.alphaTarget = 0;\n        /** 节点运动速度衰减参数 */\n        _this.velocityDecay = 0.6;\n        /** 边引力大小 */\n        _this.edgeStrength = 0.6;\n        /** 节点引力大小 */\n        _this.nodeStrength = 30;\n        /** 是否开启防止重叠 */\n        _this.preventOverlap = false;\n        /** 是否开启节点之间的防止重叠 */\n        _this.preventNodeOverlap = false;\n        /** 是否开启 Combo 之间的防止重叠 */\n        _this.preventComboOverlap = false;\n        /** 防止重叠的碰撞力大小 */\n        _this.collideStrength = undefined;\n        /** 防止重叠的碰撞力大小 */\n        _this.nodeCollideStrength = 0.5;\n        /** 防止重叠的碰撞力大小 */\n        _this.comboCollideStrength = 0.5;\n        /** Combo 最小间距，防止重叠时的间隙 */\n        _this.comboSpacing = 20;\n        /** Combo 内部的 padding */\n        _this.comboPadding = 10;\n        /** 优化计算斥力的速度，两节点间距超过 optimizeRangeFactor * width 则不再计算斥力和重叠斥力 */\n        _this.optimizeRangeFactor = 1;\n        /** 每次迭代的回调函数 */\n        _this.onTick = function () { };\n        /** 迭代结束的回调函数 */\n        _this.onLayoutEnd = function () { };\n        /** 根据边两端节点层级差距的调整引力系数的因子，取值范围 [0, 1]。层级差距越大，引力越小 */\n        _this.depthAttractiveForceScale = 1;\n        /** 根据边两端节点层级差距的调整斥力系数的因子，取值范围 [1, Infinity]。层级差距越大，斥力越大 */\n        _this.depthRepulsiveForceScale = 2;\n        /** 内部计算参数 */\n        _this.nodes = [];\n        _this.edges = [];\n        _this.combos = [];\n        _this.comboTrees = [];\n        _this.width = 300;\n        _this.height = 300;\n        _this.bias = [];\n        _this.nodeMap = {};\n        _this.oriComboMap = {};\n        _this.indexMap = {};\n        _this.comboMap = {};\n        _this.previousLayouted = false;\n        _this.updateCfg(options);\n        return _this;\n    }\n    ComboForceLayout.prototype.getDefaultCfg = function () {\n        return {\n            maxIteration: 100,\n            center: [0, 0],\n            gravity: 10,\n            speed: 1,\n            comboGravity: 30,\n            preventOverlap: false,\n            preventComboOverlap: true,\n            preventNodeOverlap: true,\n            nodeSpacing: undefined,\n            collideStrength: undefined,\n            nodeCollideStrength: 0.5,\n            comboCollideStrength: 0.5,\n            comboSpacing: 20,\n            comboPadding: 10,\n            edgeStrength: 0.6,\n            nodeStrength: 30,\n            linkDistance: 10\n        };\n    };\n    /**\n     * 执行布局\n     */\n    ComboForceLayout.prototype.execute = function () {\n        var self = this;\n        var nodes = self.nodes;\n        var center = self.center;\n        self.comboTree = {\n            id: \"comboTreeRoot\",\n            depth: -1,\n            children: self.comboTrees\n        };\n        if (!nodes || nodes.length === 0) {\n            if (self.onLayoutEnd)\n                self.onLayoutEnd();\n            return;\n        }\n        if (nodes.length === 1) {\n            nodes[0].x = center[0];\n            nodes[0].y = center[1];\n            if (self.onLayoutEnd)\n                self.onLayoutEnd();\n            return;\n        }\n        self.initVals();\n        // layout\n        self.run();\n        if (self.onLayoutEnd)\n            self.onLayoutEnd();\n    };\n    ComboForceLayout.prototype.run = function () {\n        var self = this;\n        var nodes = self.nodes;\n        var maxIteration = self.previousLayouted\n            ? self.maxIteration / 5\n            : self.maxIteration;\n        if (!self.width && typeof window !== \"undefined\") {\n            self.width = window.innerWidth;\n        }\n        if (!self.height && typeof window !== \"undefined\") {\n            self.height = window.innerHeight;\n        }\n        var center = self.center;\n        var velocityDecay = self.velocityDecay;\n        // init the positions to make the nodes with same combo gather around the combo\n        var comboMap = self.comboMap;\n        if (!self.previousLayouted)\n            self.initPos(comboMap);\n        var _loop_1 = function (i) {\n            var displacements = [];\n            nodes.forEach(function (_, j) {\n                displacements[j] = { x: 0, y: 0 };\n            });\n            self.applyCalculate(displacements);\n            // gravity for combos\n            self.applyComboCenterForce(displacements);\n            // move\n            nodes.forEach(function (n, j) {\n                if (!util_1.isNumber(n.x) || !util_1.isNumber(n.y))\n                    return;\n                n.x += displacements[j].x * velocityDecay;\n                n.y += displacements[j].y * velocityDecay;\n            });\n            self.alpha += (self.alphaTarget - self.alpha) * self.alphaDecay;\n            self.onTick();\n        };\n        // iterate\n        for (var i = 0; i < maxIteration; i++) {\n            _loop_1(i);\n        }\n        // move to center\n        var meanCenter = [0, 0];\n        nodes.forEach(function (n) {\n            if (!util_1.isNumber(n.x) || !util_1.isNumber(n.y))\n                return;\n            meanCenter[0] += n.x;\n            meanCenter[1] += n.y;\n        });\n        meanCenter[0] /= nodes.length;\n        meanCenter[1] /= nodes.length;\n        var centerOffset = [center[0] - meanCenter[0], center[1] - meanCenter[1]];\n        nodes.forEach(function (n, j) {\n            if (!util_1.isNumber(n.x) || !util_1.isNumber(n.y))\n                return;\n            n.x += centerOffset[0];\n            n.y += centerOffset[1];\n        });\n        // arrange the empty combo\n        self.combos.forEach(function (combo) {\n            var mapped = comboMap[combo.id];\n            if (mapped && mapped.empty) {\n                combo.x = mapped.cx || combo.x;\n                combo.y = mapped.cy || combo.y;\n            }\n        });\n        self.previousLayouted = true;\n    };\n    ComboForceLayout.prototype.initVals = function () {\n        var self = this;\n        var edges = self.edges;\n        var nodes = self.nodes;\n        var combos = self.combos;\n        var count = {};\n        var nodeMap = {};\n        var indexMap = {};\n        nodes.forEach(function (node, i) {\n            nodeMap[node.id] = node;\n            indexMap[node.id] = i;\n        });\n        self.nodeMap = nodeMap;\n        self.indexMap = indexMap;\n        var oriComboMap = {};\n        combos.forEach(function (combo) {\n            oriComboMap[combo.id] = combo;\n        });\n        self.oriComboMap = oriComboMap;\n        self.comboMap = self.getComboMap();\n        var preventOverlap = self.preventOverlap;\n        self.preventComboOverlap = self.preventComboOverlap || preventOverlap;\n        self.preventNodeOverlap = self.preventNodeOverlap || preventOverlap;\n        var collideStrength = self.collideStrength;\n        if (collideStrength) {\n            self.comboCollideStrength = collideStrength;\n            self.nodeCollideStrength = collideStrength;\n        }\n        self.comboCollideStrength = self.comboCollideStrength\n            ? self.comboCollideStrength\n            : 0;\n        self.nodeCollideStrength = self.nodeCollideStrength\n            ? self.nodeCollideStrength\n            : 0;\n        // get edge bias\n        for (var i = 0; i < edges.length; ++i) {\n            if (count[edges[i].source])\n                count[edges[i].source]++;\n            else\n                count[edges[i].source] = 1;\n            if (count[edges[i].target])\n                count[edges[i].target]++;\n            else\n                count[edges[i].target] = 1;\n        }\n        var bias = [];\n        for (var i = 0; i < edges.length; ++i) {\n            bias[i] =\n                count[edges[i].source] /\n                    (count[edges[i].source] + count[edges[i].target]);\n        }\n        this.bias = bias;\n        var nodeSize = self.nodeSize;\n        var nodeSpacing = self.nodeSpacing;\n        var nodeSizeFunc;\n        var nodeSpacingFunc;\n        // nodeSpacing to function\n        if (util_1.isNumber(nodeSpacing)) {\n            nodeSpacingFunc = function () { return nodeSpacing; };\n        }\n        else if (util_1.isFunction(nodeSpacing)) {\n            nodeSpacingFunc = nodeSpacing;\n        }\n        else {\n            nodeSpacingFunc = function () { return 0; };\n        }\n        this.nodeSpacing = nodeSpacingFunc;\n        // nodeSize to function\n        if (!nodeSize) {\n            nodeSizeFunc = function (d) {\n                if (d.size) {\n                    if (util_1.isArray(d.size)) {\n                        var res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n                        return res / 2;\n                    }\n                    return d.size / 2;\n                }\n                return 10;\n            };\n        }\n        else if (util_1.isFunction(nodeSize)) {\n            nodeSizeFunc = function (d) {\n                return nodeSize(d);\n            };\n        }\n        else if (util_1.isArray(nodeSize)) {\n            var larger = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n            var radius_1 = larger / 2;\n            nodeSizeFunc = function (d) { return radius_1; };\n        }\n        else {\n            // number type\n            var radius_2 = nodeSize / 2;\n            nodeSizeFunc = function (d) { return radius_2; };\n        }\n        this.nodeSize = nodeSizeFunc;\n        // comboSpacing to function\n        var comboSpacing = self.comboSpacing;\n        var comboSpacingFunc;\n        if (util_1.isNumber(comboSpacing)) {\n            comboSpacingFunc = function () { return comboSpacing; };\n        }\n        else if (util_1.isFunction(comboSpacing)) {\n            comboSpacingFunc = comboSpacing;\n        }\n        else {\n            // null type\n            comboSpacingFunc = function () { return 0; };\n        }\n        this.comboSpacing = comboSpacingFunc;\n        // comboPadding to function\n        var comboPadding = self.comboPadding;\n        var comboPaddingFunc;\n        if (util_1.isNumber(comboPadding)) {\n            comboPaddingFunc = function () { return comboPadding; };\n        }\n        else if (util_1.isArray(comboPadding)) {\n            comboPaddingFunc = function () { return Math.max.apply(null, comboPadding); };\n        }\n        else if (util_1.isFunction(comboPadding)) {\n            comboPaddingFunc = comboPadding;\n        }\n        else {\n            // null type\n            comboPaddingFunc = function () { return 0; };\n        }\n        this.comboPadding = comboPaddingFunc;\n        // linkDistance to function\n        var linkDistance = this.linkDistance;\n        var linkDistanceFunc;\n        if (!linkDistance) {\n            linkDistance = 10;\n        }\n        if (util_1.isNumber(linkDistance)) {\n            linkDistanceFunc = function (d) {\n                return linkDistance;\n            };\n        }\n        else {\n            linkDistanceFunc = linkDistance;\n        }\n        this.linkDistance = linkDistanceFunc;\n        // linkStrength to function\n        var edgeStrength = this.edgeStrength;\n        var edgeStrengthFunc;\n        if (!edgeStrength) {\n            edgeStrength = 1;\n        }\n        if (util_1.isNumber(edgeStrength)) {\n            edgeStrengthFunc = function (d) {\n                return edgeStrength;\n            };\n        }\n        else {\n            edgeStrengthFunc = edgeStrength;\n        }\n        this.edgeStrength = edgeStrengthFunc;\n        // nodeStrength to function\n        var nodeStrength = this.nodeStrength;\n        var nodeStrengthFunc;\n        if (!nodeStrength) {\n            nodeStrength = 30;\n        }\n        if (util_1.isNumber(nodeStrength)) {\n            nodeStrengthFunc = function (d) {\n                return nodeStrength;\n            };\n        }\n        else {\n            nodeStrengthFunc = nodeStrength;\n        }\n        this.nodeStrength = nodeStrengthFunc;\n    };\n    ComboForceLayout.prototype.initPos = function (comboMap) {\n        var self = this;\n        var nodes = self.nodes;\n        nodes.forEach(function (node, i) {\n            var comboId = node.comboId;\n            var combo = comboMap[comboId];\n            if (comboId && combo) {\n                node.x = combo.cx + 100 / (i + 1);\n                node.y = combo.cy + 100 / (i + 1);\n            }\n            else {\n                node.x = 100 / (i + 1);\n                node.y = 100 / (i + 1);\n            }\n        });\n    };\n    ComboForceLayout.prototype.getComboMap = function () {\n        var self = this;\n        var nodeMap = self.nodeMap;\n        var indexMap = self.indexMap;\n        var comboTrees = self.comboTrees;\n        var oriComboMap = self.oriComboMap;\n        var comboMap = {};\n        (comboTrees || []).forEach(function (ctree) {\n            var treeChildren = [];\n            util_1.traverseTreeUp(ctree, function (treeNode) {\n                if (treeNode.itemType === \"node\")\n                    return true; // skip it\n                if (!oriComboMap[treeNode.id])\n                    return true; // means it is hidden, skip it\n                if (comboMap[treeNode.id] === undefined) {\n                    var combo = {\n                        id: treeNode.id,\n                        name: treeNode.id,\n                        cx: 0,\n                        cy: 0,\n                        count: 0,\n                        depth: self.oriComboMap[treeNode.id].depth,\n                        children: []\n                    };\n                    comboMap[treeNode.id] = combo;\n                }\n                var children = treeNode.children;\n                if (children) {\n                    children.forEach(function (child) {\n                        if (!comboMap[child.id] && !nodeMap[child.id])\n                            return true; // means it is hidden\n                        treeChildren.push(child);\n                    });\n                }\n                var c = comboMap[treeNode.id];\n                c.cx = 0;\n                c.cy = 0;\n                // In order to layout the empty combo, add a virtual node to it\n                if (treeChildren.length === 0) {\n                    c.empty = true;\n                    var oriCombo = oriComboMap[treeNode.id];\n                    var idx = Object.keys(nodeMap).length;\n                    var virtualNodeId = treeNode.id + \"-visual-child-\" + idx;\n                    var vnode = {\n                        id: virtualNodeId,\n                        x: oriCombo.x,\n                        y: oriCombo.y,\n                        depth: c.depth + 1,\n                        itemType: \"node\"\n                    };\n                    self.nodes.push(vnode);\n                    nodeMap[virtualNodeId] = vnode;\n                    indexMap[virtualNodeId] = idx;\n                    c.cx = oriCombo.x;\n                    c.cy = oriCombo.y;\n                    treeChildren.push(vnode);\n                }\n                treeChildren.forEach(function (child) {\n                    c.count++;\n                    if (child.itemType !== \"node\") {\n                        var childCombo = comboMap[child.id];\n                        if (util_1.isNumber(childCombo.cx))\n                            c.cx += childCombo.cx;\n                        if (util_1.isNumber(childCombo.cy))\n                            c.cy += childCombo.cy;\n                        return;\n                    }\n                    var node = nodeMap[child.id];\n                    // means the node is hidden, skip it\n                    if (!node)\n                        return;\n                    if (util_1.isNumber(node.x)) {\n                        c.cx += node.x;\n                    }\n                    if (util_1.isNumber(node.y)) {\n                        c.cy += node.y;\n                    }\n                });\n                c.cx /= c.count;\n                c.cy /= c.count;\n                c.children = treeChildren;\n                return true;\n            });\n        });\n        return comboMap;\n    };\n    ComboForceLayout.prototype.applyComboCenterForce = function (displacements) {\n        var self = this;\n        var gravity = self.gravity;\n        var comboGravity = self.comboGravity || gravity;\n        var alpha = this.alpha;\n        var comboTrees = self.comboTrees;\n        var indexMap = self.indexMap;\n        var nodeMap = self.nodeMap;\n        var comboMap = self.comboMap;\n        (comboTrees || []).forEach(function (ctree) {\n            util_1.traverseTreeUp(ctree, function (treeNode) {\n                if (treeNode.itemType === \"node\")\n                    return true; // skip it\n                var combo = comboMap[treeNode.id];\n                // means the combo is hidden, skip it\n                if (!combo)\n                    return true;\n                var c = comboMap[treeNode.id];\n                // higher depth the combo, larger the gravity\n                var gravityScale = ((c.depth + 1) / 10) * 0.5;\n                // apply combo center force for all the descend nodes in this combo\n                // and update the center position and count for this combo\n                var comboX = c.cx;\n                var comboY = c.cy;\n                c.cx = 0;\n                c.cy = 0;\n                c.children.forEach(function (child) {\n                    if (child.itemType !== \"node\") {\n                        var childCombo = comboMap[child.id];\n                        if (childCombo && util_1.isNumber(childCombo.cx))\n                            c.cx += childCombo.cx;\n                        if (childCombo && util_1.isNumber(childCombo.cy))\n                            c.cy += childCombo.cy;\n                        return;\n                    }\n                    var node = nodeMap[child.id];\n                    var vecX = node.x - comboX || 0.005;\n                    var vecY = node.y - comboY || 0.005;\n                    var l = Math.sqrt(vecX * vecX + vecY * vecY);\n                    var childIdx = indexMap[node.id];\n                    var params = ((comboGravity * alpha) / l) * gravityScale;\n                    displacements[childIdx].x -= vecX * params;\n                    displacements[childIdx].y -= vecY * params;\n                    if (util_1.isNumber(node.x))\n                        c.cx += node.x;\n                    if (util_1.isNumber(node.y))\n                        c.cy += node.y;\n                });\n                c.cx /= c.count;\n                c.cy /= c.count;\n                return true;\n            });\n        });\n    };\n    ComboForceLayout.prototype.applyCalculate = function (displacements) {\n        var self = this;\n        var comboMap = self.comboMap;\n        var nodes = self.nodes;\n        // store the vx, vy, and distance to reduce dulplicate calculation\n        var vecMap = {};\n        nodes.forEach(function (v, i) {\n            nodes.forEach(function (u, j) {\n                if (i < j)\n                    return;\n                var vx = v.x - u.x || 0.005;\n                var vy = v.y - u.y || 0.005;\n                var vl2 = vx * vx + vy * vy;\n                var vl = Math.sqrt(vl2);\n                if (vl2 < 1)\n                    vl2 = vl;\n                vecMap[v.id + \"-\" + u.id] = { vx: vx, vy: vy, vl2: vl2, vl: vl };\n                vecMap[u.id + \"-\" + v.id] = { vl2: vl2, vl: vl, vx: -vx, vy: -vy };\n            });\n        });\n        // get the sizes of the combos\n        self.updateComboSizes(comboMap);\n        self.calRepulsive(displacements, vecMap);\n        self.calAttractive(displacements, vecMap);\n        var preventComboOverlap = self.preventComboOverlap;\n        if (preventComboOverlap)\n            self.comboNonOverlapping(displacements, comboMap);\n    };\n    /**\n     * Update the sizes of the combos according to their children\n     * Used for combos nonoverlap, but not re-render the combo shapes\n     */\n    ComboForceLayout.prototype.updateComboSizes = function (comboMap) {\n        var self = this;\n        var comboTrees = self.comboTrees;\n        var nodeMap = self.nodeMap;\n        var nodeSize = self.nodeSize;\n        var comboSpacing = self.comboSpacing;\n        var comboPadding = self.comboPadding;\n        (comboTrees || []).forEach(function (ctree) {\n            var treeChildren = [];\n            util_1.traverseTreeUp(ctree, function (treeNode) {\n                if (treeNode.itemType === \"node\")\n                    return true; // skip it\n                var c = comboMap[treeNode.id];\n                // means the combo is hidden, skip it\n                if (!c)\n                    return false;\n                var children = treeNode.children;\n                if (children) {\n                    children.forEach(function (child) {\n                        // means the combo is hidden.\n                        if (!comboMap[child.id] && !nodeMap[child.id])\n                            return;\n                        treeChildren.push(child);\n                    });\n                }\n                c.minX = Infinity;\n                c.minY = Infinity;\n                c.maxX = -Infinity;\n                c.maxY = -Infinity;\n                treeChildren.forEach(function (child) {\n                    if (child.itemType !== \"node\")\n                        return true; // skip it\n                    var node = nodeMap[child.id];\n                    if (!node)\n                        return true; // means it is hidden\n                    var r = nodeSize(node);\n                    var nodeMinX = node.x - r;\n                    var nodeMinY = node.y - r;\n                    var nodeMaxX = node.x + r;\n                    var nodeMaxY = node.y + r;\n                    if (c.minX > nodeMinX)\n                        c.minX = nodeMinX;\n                    if (c.minY > nodeMinY)\n                        c.minY = nodeMinY;\n                    if (c.maxX < nodeMaxX)\n                        c.maxX = nodeMaxX;\n                    if (c.maxY < nodeMaxY)\n                        c.maxY = nodeMaxY;\n                });\n                var minSize = self.oriComboMap[treeNode.id].size || 10;\n                if (util_1.isArray(minSize))\n                    minSize = minSize[0];\n                var maxLength = Math.max(c.maxX - c.minX, c.maxY - c.minY, minSize);\n                c.r = maxLength / 2 + comboSpacing(c) / 2 + comboPadding(c);\n                return true;\n            });\n        });\n    };\n    /**\n     * prevent the overlappings among combos\n     */\n    ComboForceLayout.prototype.comboNonOverlapping = function (displacements, comboMap) {\n        var self = this;\n        var comboTree = self.comboTree;\n        var comboCollideStrength = self.comboCollideStrength;\n        var indexMap = self.indexMap;\n        var nodeMap = self.nodeMap;\n        util_1.traverseTreeUp(comboTree, function (treeNode) {\n            if (!comboMap[treeNode.id] &&\n                !nodeMap[treeNode.id] &&\n                treeNode.id !== \"comboTreeRoot\") {\n                return false;\n            } // means it is hidden\n            var children = treeNode.children;\n            // 同个子树下的子 combo 间两两对比\n            if (children && children.length > 1) {\n                children.forEach(function (v, i) {\n                    if (v.itemType === \"node\")\n                        return false; // skip it\n                    var cv = comboMap[v.id];\n                    if (!cv)\n                        return; // means it is hidden, skip it\n                    children.forEach(function (u, j) {\n                        if (i <= j)\n                            return false;\n                        if (u.itemType === \"node\")\n                            return false; // skip it\n                        var cu = comboMap[u.id];\n                        if (!cu)\n                            return false; // means it is hidden, skip it\n                        var vx = cv.cx - cu.cx || 0.005;\n                        var vy = cv.cy - cu.cy || 0.005;\n                        var l = vx * vx + vy * vy;\n                        var rv = cv.r;\n                        var ru = cu.r;\n                        var r = rv + ru;\n                        var ru2 = ru * ru;\n                        var rv2 = rv * rv;\n                        // overlapping\n                        if (l < r * r) {\n                            var vnodes = v.children;\n                            if (!vnodes || vnodes.length === 0)\n                                return false; // skip it\n                            var unodes_1 = u.children;\n                            if (!unodes_1 || unodes_1.length === 0)\n                                return false; // skip it\n                            var sqrtl = Math.sqrt(l);\n                            var ll = ((r - sqrtl) / sqrtl) * comboCollideStrength;\n                            var xl_1 = vx * ll;\n                            var yl_1 = vy * ll;\n                            var rratio_1 = ru2 / (rv2 + ru2);\n                            var irratio_1 = 1 - rratio_1;\n                            // 两兄弟 combo 的子节点上施加斥力\n                            vnodes.forEach(function (vn) {\n                                if (vn.itemType !== \"node\")\n                                    return false; // skip it\n                                if (!nodeMap[vn.id])\n                                    return; // means it is hidden, skip it\n                                var vindex = indexMap[vn.id];\n                                unodes_1.forEach(function (un) {\n                                    if (un.itemType !== \"node\")\n                                        return false;\n                                    if (!nodeMap[un.id])\n                                        return false; // means it is hidden, skip it\n                                    var uindex = indexMap[un.id];\n                                    displacements[vindex].x += xl_1 * rratio_1;\n                                    displacements[vindex].y += yl_1 * rratio_1;\n                                    displacements[uindex].x -= xl_1 * irratio_1;\n                                    displacements[uindex].y -= yl_1 * irratio_1;\n                                });\n                            });\n                        }\n                    });\n                });\n            }\n            return true;\n        });\n    };\n    /**\n     * Calculate the repulsive force between each node pair\n     * @param displacements The array stores the displacements for nodes\n     * @param vecMap The map stores vector between each node pair\n     */\n    ComboForceLayout.prototype.calRepulsive = function (displacements, vecMap) {\n        var self = this;\n        var nodes = self.nodes;\n        var max = self.width * self.optimizeRangeFactor;\n        var nodeStrength = self.nodeStrength;\n        var alpha = self.alpha;\n        var nodeCollideStrength = self.nodeCollideStrength;\n        var preventNodeOverlap = self.preventNodeOverlap;\n        var nodeSizeFunc = self.nodeSize;\n        var nodeSpacingFunc = self.nodeSpacing;\n        var scale = self.depthRepulsiveForceScale;\n        var center = self.center;\n        nodes.forEach(function (v, i) {\n            if (!v.x || !v.y)\n                return;\n            // center gravity\n            if (center) {\n                var gravity = self.gravity;\n                var vecX = v.x - center[0] || 0.005;\n                var vecY = v.y - center[1] || 0.005;\n                var l = Math.sqrt(vecX * vecX + vecY * vecY);\n                displacements[i].x -= (vecX * gravity * alpha) / l;\n                displacements[i].y -= (vecY * gravity * alpha) / l;\n            }\n            nodes.forEach(function (u, j) {\n                if (i === j) {\n                    return;\n                }\n                if (!u.x || !u.y)\n                    return;\n                var _a = vecMap[v.id + \"-\" + u.id], vl2 = _a.vl2, vl = _a.vl;\n                if (vl > max)\n                    return;\n                var _b = vecMap[v.id + \"-\" + u.id], vx = _b.vx, vy = _b.vy;\n                var depthDiff = Math.log(Math.abs(u.depth - v.depth) / 10) + 1 || 1;\n                depthDiff = depthDiff < 1 ? 1 : depthDiff;\n                if (u.comboId !== v.comboId)\n                    depthDiff += 1;\n                var depthParam = depthDiff ? Math.pow(scale, depthDiff) : 1;\n                var params = ((nodeStrength(u) * alpha) / vl2) * depthParam;\n                displacements[i].x += vx * params;\n                displacements[i].y += vy * params;\n                // prevent node overlappings\n                if (i < j && preventNodeOverlap) {\n                    var ri = nodeSizeFunc(v) + nodeSpacingFunc(v);\n                    var rj = nodeSizeFunc(u) + nodeSpacingFunc(u);\n                    var r = ri + rj;\n                    if (vl2 < r * r) {\n                        var ll = ((r - vl) / vl) * nodeCollideStrength;\n                        var rj2 = rj * rj;\n                        var rratio = rj2 / (ri * ri + rj2);\n                        var xl = vx * ll;\n                        var yl = vy * ll;\n                        displacements[i].x += xl * rratio;\n                        displacements[i].y += yl * rratio;\n                        rratio = 1 - rratio;\n                        displacements[j].x -= xl * rratio;\n                        displacements[j].y -= yl * rratio;\n                    }\n                }\n            });\n        });\n    };\n    /**\n     * Calculate the attractive force between the node pair with edge\n     * @param displacements The array stores the displacements for nodes\n     * @param vecMap The map stores vector between each node pair\n     */\n    ComboForceLayout.prototype.calAttractive = function (displacements, vecMap) {\n        var self = this;\n        var edges = self.edges;\n        var linkDistance = self.linkDistance;\n        var alpha = self.alpha;\n        var edgeStrength = self.edgeStrength;\n        var bias = self.bias;\n        var scale = self.depthAttractiveForceScale;\n        edges.forEach(function (e, i) {\n            if (!e.source || !e.target || e.source === e.target)\n                return;\n            var uIndex = self.indexMap[e.source];\n            var vIndex = self.indexMap[e.target];\n            var u = self.nodeMap[e.source];\n            var v = self.nodeMap[e.target];\n            if (!u || !v)\n                return;\n            var depthDiff = Math.log(Math.abs(u.depth - v.depth) / 10);\n            if (u.comboId === v.comboId) {\n                depthDiff = depthDiff / 2;\n            }\n            var depthParam = depthDiff ? Math.pow(scale, depthDiff) : 1;\n            if (u.comboId !== v.comboId && depthParam === 1) {\n                depthParam = scale / 2;\n            }\n            else if (u.comboId === v.comboId) {\n                depthParam = 2;\n            }\n            if (!util_1.isNumber(v.x) || !util_1.isNumber(u.x) || !util_1.isNumber(v.y) || !util_1.isNumber(u.y))\n                return;\n            var _a = vecMap[e.target + \"-\" + e.source], vl = _a.vl, vx = _a.vx, vy = _a.vy;\n            var l = ((vl - linkDistance(e)) / vl) * alpha * edgeStrength(e) * depthParam;\n            var vecX = vx * l;\n            var vecY = vy * l;\n            var b = bias[i];\n            displacements[vIndex].x -= vecX * b;\n            displacements[vIndex].y -= vecY * b;\n            displacements[uIndex].x += vecX * (1 - b);\n            displacements[uIndex].y += vecY * (1 - b);\n        });\n    };\n    ComboForceLayout.prototype.getType = function () {\n        return \"comboForce\";\n    };\n    return ComboForceLayout;\n}(base_1.Base));\nexports.ComboForceLayout = ComboForceLayout;\n//# sourceMappingURL=comboForce.js.map","import { ComboForceLayout } from '@antv/layout/lib/layout/comboForce';\n\nexport default ComboForceLayout;\n"],"sourceRoot":""}