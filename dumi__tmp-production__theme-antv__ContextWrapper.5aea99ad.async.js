"use strict";(self.webpackChunk_antv_g6_site=self.webpackChunk_antv_g6_site||[]).push([[2643],{97874:function(n,e,t){t.r(e),t.d(e,{default:function(){return i}});t(55826);var a=t(35642),o=t(52371),r=t(70813);function i(){var n=(0,a.useOutlet)();return(0,r.jsx)(o.w.Provider,{value:{meta:{exampleTopics:[{id:"feature",title:{zh:"特性",en:"Feature"},icon:"gallery",examples:[{demos:[{id:"theme",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*jCYaT7L2E7sAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst themes = {\n  '🌞 Light': {\n    theme: 'light',\n    node: {\n      style: { size: 4 },\n      palette: {\n        type: 'group',\n        field: 'cluster',\n      },\n    },\n    plugins: [{ type: 'background', background: '#fff' }],\n  },\n  '🌚 Dark': {\n    theme: 'dark',\n    node: {\n      style: { size: 4 },\n      palette: {\n        type: 'group',\n        field: 'cluster',\n      },\n    },\n    plugins: [{ type: 'background', background: '#000' }],\n  },\n  '🌎 Blue': {\n    theme: 'light',\n    node: {\n      style: { size: 4 },\n      palette: {\n        type: 'group',\n        field: 'cluster',\n        color: 'blues',\n        invert: true,\n      },\n    },\n    plugins: [{ type: 'background', background: '#f3faff' }],\n  },\n  '🌕 Yellow': {\n    background: '#fcf9f1',\n    theme: 'light',\n    node: {\n      style: { size: 4 },\n      palette: {\n        type: 'group',\n        field: 'cluster',\n        color: ['#ffe7ba', '#ffd591', '#ffc069', '#ffa940', '#fa8c16', '#d46b08', '#ad4e00', '#873800', '#612500'],\n      },\n    },\n    plugins: [{ type: 'background', background: '#fcf9f1' }],\n  },\n};\n\nfetch('https://assets.antv.antgroup.com/g6/20000.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      animation: false,\n      padding: 20,\n      autoFit: 'view',\n      theme: 'light',\n      data,\n      node: {\n        style: { size: 4 },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas'],\n      plugins: [{ type: 'background', background: '#fff' }],\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      gui.add({ theme: '🌞 Light' }, 'theme', Object.keys(themes)).onChange((theme) => {\n        graph.setOptions(themes[theme]);\n        graph.draw();\n      });\n    });\n  });\n",title:{zh:"主题切换",en:"Switch Theme"},filename:"theme.js",isNew:!1},{id:"lite-solar-system",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*lEL3TrCLnPsAAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, register } from '@antv/g6';\nimport { Light, Sphere, renderer } from '@antv/g6-extension-3d';\n\nregister(ExtensionCategory.PLUGIN, 'light', Light);\nregister(ExtensionCategory.NODE, 'sphere', Sphere);\n\nconst graph = new Graph({\n  renderer,\n  data: {\n    nodes: [\n      {\n        id: 'sum',\n        style: {\n          x: 300,\n          y: 300,\n          radius: 100,\n          texture: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-mZfQr8LtPUAAAAAAAAAAAAADmJ7AQ/original',\n        },\n      },\n      {\n        id: 'mars',\n        style: {\n          x: 430,\n          y: 300,\n          z: 0,\n          radius: 20,\n          texture: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*mniGTZktpecAAAAAAAAAAAAADmJ7AQ/original',\n        },\n      },\n      {\n        id: 'earth',\n        style: {\n          x: 500,\n          y: 300,\n          z: 0,\n          radius: 30,\n          texture: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*cdTdTI2bNl8AAAAAAAAAAAAADmJ7AQ/original',\n        },\n      },\n      {\n        id: 'jupiter',\n        style: {\n          x: 600,\n          y: 300,\n          z: 0,\n          radius: 50,\n          texture: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*t_mQSZYAT70AAAAAAAAAAAAADmJ7AQ/original',\n        },\n      },\n    ],\n  },\n  node: {\n    type: 'sphere',\n    style: {\n      materialShininess: 0,\n      labelText: (d) => d.id,\n      labelFill: '#fff',\n    },\n  },\n  plugins: [\n    {\n      type: '3d-light',\n      directional: {\n        direction: [0, 0, 1],\n      },\n    },\n    {\n      type: 'background',\n      backgroundImage:\n        'url(https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*M_OaRrzIZOEAAAAAAAAAAAAADmJ7AQ/original)',\n      backgroundPosition: 'center',\n    },\n  ],\n});\n\ngraph.draw().then(() => {\n  const element = graph.context.element;\n\n  const sum = element.getElement('sum');\n  const mars = element.getElement('mars');\n  const earth = element.getElement('earth');\n  const jupiter = element.getElement('jupiter');\n\n  const setRotation = (element, speed) => {\n    setInterval(() => {\n      element.rotate(0, -speed, 0);\n    }, 30);\n  };\n  setRotation(sum, 0.1);\n  setRotation(mars, 0.8);\n  setRotation(earth, 1);\n  setRotation(jupiter, 0.5);\n\n  const setRevolution = (element, center, speed) => {\n    setInterval(() => {\n      const [x, y, z] = element.getPosition();\n      const [cx, , cz] = center;\n      const angle = (speed * Math.PI) / 180;\n\n      const newX = (x - cx) * Math.cos(angle) + (z - cz) * Math.sin(angle) + cx;\n      const newZ = -(x - cx) * Math.sin(angle) + (z - cz) * Math.cos(angle) + cz;\n\n      element.setPosition(newX, y, newZ);\n    }, 30);\n  };\n\n  setRevolution(mars, [300, 300, 0], 1.5);\n  setRevolution(earth, [300, 300, 0], 1);\n  setRevolution(jupiter, [300, 300, 0], 0.5);\n});\n",title:{zh:"精简太阳系",en:"Lite Solar System"},filename:"lite-solar-system.js",isNew:!1},{id:"3d-massive",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ZQoEQLKazPIAAAAAAAAAAAAADmJ7AQ/original",source:"import { CameraSetting, ExtensionCategory, Graph, register } from '@antv/g6';\nimport { Light, Line3D, ObserveCanvas3D, Sphere, ZoomCanvas3D, renderer } from '@antv/g6-extension-3d';\n\nregister(ExtensionCategory.PLUGIN, '3d-light', Light);\nregister(ExtensionCategory.NODE, 'sphere', Sphere);\nregister(ExtensionCategory.EDGE, 'line3d', Line3D);\nregister(ExtensionCategory.PLUGIN, 'camera-setting', CameraSetting);\nregister(ExtensionCategory.BEHAVIOR, 'zoom-canvas-3d', ZoomCanvas3D);\nregister(ExtensionCategory.BEHAVIOR, 'observe-canvas-3d', ObserveCanvas3D);\n\nfetch('https://assets.antv.antgroup.com/g6/eva-3d-data.json')\n  .then((res) => res.json())\n  .then(({ nodes, edges }) => {\n    const degree = new Map();\n    edges.forEach(({ source, target }) => {\n      if (!degree.has(source)) degree.set(source, 0);\n      if (!degree.has(target)) degree.set(target, 0);\n      degree.set(source, degree.get(source) + 1);\n      degree.set(target, degree.get(target) + 1);\n    });\n    nodes.forEach((node) => {\n      const { id } = node;\n      Object.assign(node.data, { degree: degree.get(id) ?? 0 });\n      return node;\n    });\n\n    return { nodes, edges };\n  })\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      renderer,\n      data,\n      animation: false,\n      node: {\n        type: 'sphere',\n        style: {\n          materialType: 'phong',\n          size: (d) => 50 + d.data.degree,\n          x: (d) => d.data.x,\n          y: (d) => d.data.y,\n          z: (d) => d.data.z,\n        },\n        palette: {\n          color: 'tableau',\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      edge: {\n        type: 'line3d',\n        style: {\n          lineWidth: 0.4,\n          opacity: 0.4,\n          stroke: '#fff',\n        },\n      },\n      behaviors: ['observe-canvas-3d', 'zoom-canvas-3d'],\n      plugins: [\n        {\n          type: 'camera-setting',\n          projectionMode: 'orthographic',\n          near: 1,\n          far: 10000,\n          fov: 45,\n          aspect: 1,\n        },\n        {\n          type: '3d-light',\n          directional: {\n            direction: [0, 0, 1],\n          },\n        },\n        {\n          type: 'background',\n          background: '#000',\n        },\n      ],\n    });\n\n    graph.draw().then(() => {\n      const camera = graph.getCanvas().getCamera();\n      let frame;\n      let counter = 0;\n      const tick = () => {\n        if (counter < 80) {\n          camera.dolly(4);\n        }\n        camera.rotate(0.4, 0);\n        counter++;\n\n        frame = requestAnimationFrame(tick);\n        if (counter > 160 && frame) {\n          cancelAnimationFrame(frame);\n        }\n      };\n\n      tick();\n    });\n  });\n",title:{zh:"3D大数据",en:"3D Massive Data"},filename:"3d-massive.js",isNew:!1},{id:"unicorns-investors",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*KaoETa-gBDIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\n/**\n * Inspired by https://graphcommons.com/graphs/be8bc972-5b26-4f5c-837d-a34704f33a9e\n */\nfetch('https://assets.antv.antgroup.com/g6/unicorns-investors.json').then((res) => res.json()).then(data => {\n  const size = (node) => Math.max(...node.style.size);\n\n  const graph = new Graph({\n    data,\n    autoFit: 'view',\n    node: {\n      style: {\n        fillOpacity: 1,\n        label: true,\n        labelText: (d) => d.data?.name,\n        labelBackground: true,\n        icon: true,\n        iconText: (d) => (d.data?.type === 'Investor' ? '💰' : '🦄️'),\n        fill: (d) => (d.data?.type === 'Investor' ? '#6495ED' : '#FFA07A'),\n      },\n      state: {\n        inactive: {\n          fillOpacity: 0.3,\n          icon: false,\n          label: false,\n        },\n      },\n    },\n    edge: {\n      style: {\n        label: false,\n        labelText: (d) => d.data?.type,\n        labelBackground: true,\n      },\n      state: {\n        active: {\n          label: true,\n        },\n        inactive: {\n          strokeOpacity: 0,\n        },\n      },\n    },\n    layout: {\n      type: 'd3-force',\n      link: { distance: (edge) => size(edge.source) + size(edge.target) },\n      collide: { radius: (node) => size(node) },\n      manyBody: { strength: (node) => -4 * size(node) },\n      animation: false,\n    },\n    transforms: [\n      {\n        type: 'map-node-size',\n        scale: 'linear',\n        maxSize: 60,\n        minSize: 20,\n        mapLabelSize: [12, 24]\n      },\n    ],\n    behaviors: [\n      'drag-canvas',\n      'zoom-canvas',\n      function () {\n        return {\n          key: 'hover-activate',\n          type: 'hover-activate',\n          enable: (e) => e.targetType === 'node',\n          degree: 1,\n          inactiveState: 'inactive',\n          onHover: (e) => {\n            this.frontElement(e.target.id);\n            e.view.setCursor('pointer');\n          },\n          onHoverEnd: (e) => {\n            e.view.setCursor('default');\n          },\n        };\n      },\n      {\n        type: 'fix-element-size',\n        enable: true,\n      },\n      'auto-adapt-label'\n    ],\n    animation: false,\n  });\n\n  graph.render();\n})\n\n\nconst container = document.getElementById('container');\nconst descriptionDiv = document.createElement('div');\ndescriptionDiv.innerHTML =\n  'Network Map of 🦄 Unicorns and Their 💰Investors - 1086 nodes, 1247 edges';\ncontainer.appendChild(descriptionDiv);\n",title:{zh:"信息密度",en:"Information Density"},filename:"unicorns-investors.js",isNew:!1}],icon:"",id:"default",title:{en:"Theme",zh:"特性"},api:null,childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"scene-case",title:{zh:"场景案例",en:"Scene Case"},icon:"gallery",examples:[{demos:[{id:"battle-array",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*dTxvSL2wgDIAAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, register } from '@antv/g6';\nimport { ReactNode } from '@antv/g6-extension-react';\nimport styled from 'styled-components';\n\nconst Player = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Shirt = styled.div`\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n\n  img {\n    width: 40px;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n`;\n\nconst Number = styled.div`\n  color: #fff;\n  font-family: 'DingTalk-JinBuTi';\n  font-size: 10px;\n  top: 20px;\n  left: 15px;\n  z-index: 1;\n  margin-top: 16px;\n  margin-left: -2px;\n`;\n\nconst Label = styled.div`\n  max-width: 120px;\n  padding: 0 8px;\n  color: #fff;\n  font-size: 10px;\n  background-image: url('https://mdn.alipayobjects.com/huamei_92awrc/afts/img/A*s2csQ48M0AkAAAAAAAAAAAAADsvfAQ/original');\n  background-repeat: no-repeat;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst PlayerNode = ({ playerInfo }) => {\n  const { isTeamA, player_shirtnumber, player_name } = playerInfo;\n  return (\n    <Player>\n      <Shirt>\n        <img\n          src={\n            isTeamA\n              ? 'https://mdn.alipayobjects.com/huamei_92awrc/afts/img/A*0oAaS42vqWcAAAAAAAAAAAAADsvfAQ/original'\n              : 'https://mdn.alipayobjects.com/huamei_92awrc/afts/img/A*BYH5SauBNecAAAAAAAAAAAAADsvfAQ/original'\n          }\n        />\n        <Number>{player_shirtnumber}</Number>\n      </Shirt>\n      <Label>{player_name}</Label>\n    </Player>\n  );\n};\n\nregister(ExtensionCategory.NODE, 'react', ReactNode);\n\nconst data = {\n  nodes: [\n    {\n      id: '50251337',\n      x: 50,\n      y: 68,\n      isTeamA: '1',\n      player_id: '50251337',\n      player_shirtnumber: '19',\n      player_enName: 'Justin Kluivert',\n      player_name: '尤斯廷-克鲁伊维特',\n    },\n    {\n      id: '50436685',\n      x: 25,\n      y: 68,\n      isTeamA: '1',\n      player_id: '50436685',\n      player_shirtnumber: '24',\n      player_enName: 'Antoine Semenyo',\n      player_name: '塞门约',\n    },\n    {\n      id: '50204813',\n      x: 50,\n      y: 89,\n      isTeamA: '1',\n      player_id: '50204813',\n      player_shirtnumber: '9',\n      player_enName: 'Dominic Solanke',\n      player_name: '索兰克',\n    },\n    {\n      id: '50250175',\n      x: 75,\n      y: 68,\n      isTeamA: '1',\n      player_id: '50250175',\n      player_shirtnumber: '16',\n      player_enName: 'Marcus Tavernier',\n      player_name: '塔韦尼耶',\n    },\n    {\n      id: '50213675',\n      x: 65,\n      y: 48,\n      isTeamA: '1',\n      player_id: '50213675',\n      player_shirtnumber: '4',\n      player_enName: 'Lewis Cook',\n      player_name: '刘易斯-库克',\n    },\n    {\n      id: '50186648',\n      x: 35,\n      y: 48,\n      isTeamA: '1',\n      player_id: '50186648',\n      player_shirtnumber: '10',\n      player_enName: 'Ryan Christie',\n      player_name: '克里斯蒂',\n    },\n    {\n      id: '50279448',\n      x: 38,\n      y: 28,\n      isTeamA: '1',\n      player_id: '50279448',\n      player_shirtnumber: '6',\n      player_enName: 'Chris Mepham',\n      player_name: '迈帕姆',\n    },\n    {\n      id: '50061646',\n      x: 15,\n      y: 28,\n      isTeamA: '1',\n      player_id: '50061646',\n      player_shirtnumber: '15',\n      player_enName: 'Adam Smith',\n      player_name: '亚当-史密斯',\n    },\n    {\n      id: '50472140',\n      x: 62,\n      y: 28,\n      isTeamA: '1',\n      player_id: '50472140',\n      player_shirtnumber: '27',\n      player_enName: 'Ilya Zabarnyi',\n      player_name: '扎巴尔尼',\n    },\n    {\n      id: '50544346',\n      x: 85,\n      y: 28,\n      isTeamA: '1',\n      player_id: '50544346',\n      player_shirtnumber: '3',\n      player_enName: 'Milos Kerkez',\n      player_name: '科尔克兹',\n    },\n    {\n      id: '50062598',\n      x: 50,\n      y: 7,\n      isTeamA: '1',\n      player_id: '50062598',\n      player_shirtnumber: '1',\n      player_enName: 'Neto',\n      player_name: '内托',\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  animation: false,\n  x: 10,\n  y: 50,\n  width: 480,\n  height: 720,\n  node: {\n    type: 'react',\n    style: {\n      size: [120, 60],\n      ports: [{ placement: 'center' }],\n      x: (d) => d.x * 3.5,\n      y: (d) => d.y * 3.5,\n      fill: 'transparent',\n      component: (data) => <PlayerNode playerInfo={data} />,\n    },\n  },\n  plugins: [\n    {\n      type: 'background',\n      width: '480px',\n      height: '720px',\n      backgroundImage: 'url(https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*EmPXQLrX2xIAAAAAAAAAAAAADmJ7AQ/original)',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'contain',\n      opacity: 1,\n    }\n  ],\n});\n\ngraph.render();\n",title:{zh:"英格兰阵容",en:"England"},filename:"battle-array.jsx",isNew:!1},{id:"music-festival",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*IytGRZ8WaSMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/music-festival.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const map = new Map();\n\n    data.forEach((datum) => {\n      const { actors, venuecity } = datum;\n      actors.forEach((actor) => {\n        if (!map.has(actor)) map.set(actor, new Set([venuecity]));\n        else map.get(actor).add(venuecity);\n      });\n    });\n\n    const nodes = Array.from(map)\n      .filter(([, city]) => city.size >= 2)\n      .sort((a, b) => -a[1].size + b[1].size)\n      .map(([name, city]) => ({\n        id: name,\n        data: {\n          city: Array.from(city),\n          value: city.size,\n        },\n      }));\n\n    return { nodes };\n  })\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'rect',\n        style: {\n          size: [100, 20],\n          radius: 5,\n          iconText: (d) => d.id,\n          iconFill: '#000',\n          iconWordWrap: true,\n          iconWordWrapWidth: 80,\n          iconFontSize: 15,\n          iconTextOverflow: '...',\n          iconMaxLines: 1,\n          labelText: (d) => d.data.city.join('\\n'),\n          labelFontSize: 12,\n          labelDy: 2,\n          labelFill: '#fff',\n        },\n        palette: {\n          type: 'group',\n          field: 'value',\n          color: [\n            '#FCE75A',\n            '#F5DB75',\n            '#EFCF90',\n            '#E8C3AB',\n            '#E1B7C6',\n            '#DBABE0',\n            '#D49FFB',\n            '#CD93FF',\n            '#B981F2',\n            '#7E45E8',\n          ],\n        },\n      },\n      layout: {\n        type: 'grid',\n        nodeSize: [100, 120],\n        sortBy: 'order',\n        cols: 5,\n      },\n      behaviors: [{ type: 'scroll-canvas', direction: 'y' }],\n      plugins: [\n        {\n          type: 'background',\n          background: '#000',\n        },\n      ],\n    });\n\n    graph.render();\n  });\n",title:{zh:"音乐节",en:"Music Festival"},filename:"music-festival.js",isNew:!1},{id:"fund-flow",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ImBoQIveCtYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Rect as GRect, Text as GText } from '@antv/g';\nimport {\n  Badge,\n  CommonEvent,\n  ExtensionCategory,\n  Graph,\n  GraphEvent,\n  iconfont,\n  Label,\n  Rect,\n  register,\n  treeToGraphData,\n} from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst COLORS = {\n  B: '#1783FF',\n  R: '#F46649',\n  Y: '#DB9D0D',\n  G: '#60C42D',\n  DI: '#A7A7A7',\n};\nconst GREY_COLOR = '#CED4D9';\n\nclass TreeNode extends Rect {\n  get data() {\n    return this.context.model.getNodeLikeDatum(this.id);\n  }\n\n  get childrenData() {\n    return this.context.model.getChildrenData(this.id);\n  }\n\n  getLabelStyle(attributes) {\n    const [width, height] = this.getSize(attributes);\n    return {\n      x: -width / 2 + 8,\n      y: -height / 2 + 16,\n      text: this.data.name,\n      fontSize: 12,\n      opacity: 0.85,\n      fill: '#000',\n      cursor: 'pointer',\n    };\n  }\n\n  getPriceStyle(attributes) {\n    const [width, height] = this.getSize(attributes);\n    return {\n      x: -width / 2 + 8,\n      y: height / 2 - 8,\n      text: this.data.label,\n      fontSize: 16,\n      fill: '#000',\n      opacity: 0.85,\n    };\n  }\n\n  drawPriceShape(attributes, container) {\n    const priceStyle = this.getPriceStyle(attributes);\n    this.upsert('price', GText, priceStyle, container);\n  }\n\n  getCurrencyStyle(attributes) {\n    const [, height] = this.getSize(attributes);\n    return {\n      x: this.shapeMap['price'].getLocalBounds().max[0] + 4,\n      y: height / 2 - 8,\n      text: this.data.currency,\n      fontSize: 12,\n      fill: '#000',\n      opacity: 0.75,\n    };\n  }\n\n  drawCurrencyShape(attributes, container) {\n    const currencyStyle = this.getCurrencyStyle(attributes);\n    this.upsert('currency', GText, currencyStyle, container);\n  }\n\n  getPercentStyle(attributes) {\n    const [width, height] = this.getSize(attributes);\n    return {\n      x: width / 2 - 4,\n      y: height / 2 - 8,\n      text: `${((Number(this.data.variableValue) || 0) * 100).toFixed(2)}%`,\n      fontSize: 12,\n      textAlign: 'right',\n      fill: COLORS[this.data.status],\n    };\n  }\n\n  drawPercentShape(attributes, container) {\n    const percentStyle = this.getPercentStyle(attributes);\n    this.upsert('percent', GText, percentStyle, container);\n  }\n\n  getTriangleStyle(attributes) {\n    const percentMinX = this.shapeMap['percent'].getLocalBounds().min[0];\n    const [, height] = this.getSize(attributes);\n    return {\n      fill: COLORS[this.data.status],\n      x: this.data.variableUp ? percentMinX - 18 : percentMinX,\n      y: height / 2 - 16,\n      fontFamily: 'iconfont',\n      fontSize: 16,\n      text: '\\ue62d',\n      transform: this.data.variableUp ? [] : [['rotate', 180]],\n    };\n  }\n\n  drawTriangleShape(attributes, container) {\n    const triangleStyle = this.getTriangleStyle(attributes);\n    this.upsert('triangle', Label, triangleStyle, container);\n  }\n\n  getVariableStyle(attributes) {\n    const [, height] = this.getSize(attributes);\n    return {\n      fill: '#000',\n      fontSize: 12,\n      opacity: 0.45,\n      text: this.data.variableName,\n      textAlign: 'right',\n      x: this.shapeMap['triangle'].getLocalBounds().min[0] - 4,\n      y: height / 2 - 8,\n    };\n  }\n\n  drawVariableShape(attributes, container) {\n    const variableStyle = this.getVariableStyle(attributes);\n    this.upsert('variable', GText, variableStyle, container);\n  }\n\n  getCollapseStyle(attributes) {\n    if (this.childrenData.length === 0) return false;\n    const { collapsed } = attributes;\n    const [width, height] = this.getSize(attributes);\n    return {\n      backgroundFill: '#fff',\n      backgroundHeight: 16,\n      backgroundLineWidth: 1,\n      backgroundRadius: 0,\n      backgroundStroke: GREY_COLOR,\n      backgroundWidth: 16,\n      cursor: 'pointer',\n      fill: GREY_COLOR,\n      fontSize: 16,\n      text: collapsed ? '+' : '-',\n      textAlign: 'center',\n      textBaseline: 'middle',\n      x: width / 2,\n      y: 0,\n    };\n  }\n\n  drawCollapseShape(attributes, container) {\n    const collapseStyle = this.getCollapseStyle(attributes);\n    const btn = this.upsert('collapse', Badge, collapseStyle, container);\n\n    if (btn && !Reflect.has(btn, '__bind__')) {\n      Reflect.set(btn, '__bind__', true);\n      btn.addEventListener(CommonEvent.CLICK, () => {\n        const { collapsed } = this.attributes;\n        const graph = this.context.graph;\n        if (collapsed) graph.expandElement(this.id);\n        else graph.collapseElement(this.id);\n      });\n    }\n  }\n\n  getProcessBarStyle(attributes) {\n    const { rate, status } = this.data;\n    const { radius } = attributes;\n    const color = COLORS[status];\n    const percent = `${Number(rate) * 100}%`;\n    const [width, height] = this.getSize(attributes);\n    return {\n      x: -width / 2,\n      y: height / 2 - 4,\n      width: width,\n      height: 4,\n      radius: [0, 0, radius, radius],\n      fill: `linear-gradient(to right, ${color} ${percent}, ${GREY_COLOR} ${percent})`,\n    };\n  }\n\n  drawProcessBarShape(attributes, container) {\n    const processBarStyle = this.getProcessBarStyle(attributes);\n    this.upsert('process-bar', GRect, processBarStyle, container);\n  }\n\n  getKeyStyle(attributes) {\n    const keyStyle = super.getKeyStyle(attributes);\n    return {\n      ...keyStyle,\n      fill: '#fff',\n      lineWidth: 1,\n      stroke: GREY_COLOR,\n    };\n  }\n\n  render(attributes = this.parsedAttributes, container) {\n    super.render(attributes, container);\n\n    this.drawPriceShape(attributes, container);\n    this.drawCurrencyShape(attributes, container);\n    this.drawPercentShape(attributes, container);\n    this.drawTriangleShape(attributes, container);\n    this.drawVariableShape(attributes, container);\n    this.drawProcessBarShape(attributes, container);\n    this.drawCollapseShape(attributes, container);\n  }\n}\n\nregister(ExtensionCategory.NODE, 'tree-node', TreeNode);\n\nfetch('https://assets.antv.antgroup.com/g6/decision-tree.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data: treeToGraphData(data, {\n        getNodeData: (datum, depth) => {\n          if (!datum.style) datum.style = {};\n          datum.style.collapsed = depth >= 2;\n          if (!datum.children) return datum;\n          const { children, ...restDatum } = datum;\n          return { ...restDatum, children: children.map((child) => child.id) };\n        },\n      }),\n      node: {\n        type: 'tree-node',\n        style: {\n          size: [202, 60],\n          ports: [{ placement: 'left' }, { placement: 'right' }],\n          radius: 4,\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n        style: {\n          stroke: GREY_COLOR,\n        },\n      },\n      layout: {\n        type: 'indented',\n        direction: 'LR',\n        dropCap: false,\n        indent: 300,\n        getHeight: () => 60,\n        preLayout: false,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.once(GraphEvent.AFTER_RENDER, () => {\n      graph.fitView();\n    });\n\n    graph.render();\n  });\n",title:{zh:"资金流向图",en:"Fund Flow"},filename:"fund-flow.js",isNew:!1},{id:"organization-chart",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*wgoUR6dnVcsAAAAAAAAAAAAADmJ7AQ/original",source:"import { Badge, BaseBehavior, ExtensionCategory, Graph, GraphEvent, Label, Rect, register } from '@antv/g6';\n\nconst statusColors = {\n  online: '#17BEBB',\n  busy: '#E36397',\n  offline: '#B7AD99',\n};\n\nconst DEFAULT_LEVEL = 'detailed';\n\n/**\n * Draw a chart node with different ui based on the zoom level.\n */\nclass ChartNode extends Rect {\n  get data() {\n    return this.context.model.getElementDataById(this.id).data;\n  }\n\n  get level() {\n    return this.data.level || DEFAULT_LEVEL;\n  }\n\n  getLabelStyle() {\n    const text = this.data.name;\n    const labelStyle =\n      this.level === 'overview'\n        ? {\n            fill: '#fff',\n            fontSize: 20,\n            fontWeight: 600,\n            textAlign: 'center',\n            transform: [['translate', 0, 0]],\n          }\n        : {\n            fill: '#2078B4',\n            fontSize: 14,\n            fontWeight: 400,\n            textAlign: 'left',\n            transform: [['translate', -65, -15]],\n          };\n    return { text, ...labelStyle };\n  }\n\n  getKeyStyle(attributes) {\n    return {\n      ...super.getKeyStyle(attributes),\n      fill: this.level === 'overview' ? statusColors[this.data.status] : '#fff',\n    };\n  }\n\n  getPositionStyle(attributes) {\n    if (this.level === 'overview') return false;\n    return {\n      text: this.data.position,\n      fontSize: 8,\n      fontWeight: 400,\n      textTransform: 'uppercase',\n      fill: '#343f4a',\n      textAlign: 'left',\n      transform: [['translate', -65, 0]],\n    };\n  }\n\n  drawPositionShape(attributes, container) {\n    const positionStyle = this.getPositionStyle(attributes);\n    this.upsert('position', Label, positionStyle, container);\n  }\n\n  getStatusStyle(attributes) {\n    if (this.level === 'overview') return false;\n    return {\n      text: this.data.status,\n      fontSize: 8,\n      textAlign: 'left',\n      transform: [['translate', 40, -16]],\n      padding: [0, 4],\n      fill: '#fff',\n      backgroundFill: statusColors[this.data.status],\n    };\n  }\n\n  drawStatusShape(attributes, container) {\n    const statusStyle = this.getStatusStyle(attributes);\n    this.upsert('status', Badge, statusStyle, container);\n  }\n\n  getPhoneStyle(attributes) {\n    if (this.level === 'overview') return false;\n    return {\n      text: this.data.phone,\n      fontSize: 8,\n      fontWeight: 300,\n      textAlign: 'left',\n      transform: [['translate', -65, 20]],\n    };\n  }\n\n  drawPhoneShape(attributes, container) {\n    const style = this.getPhoneStyle(attributes);\n    this.upsert('phone', Label, style, container);\n  }\n\n  render(attributes = this.parsedAttributes, container = this) {\n    super.render(attributes, container);\n\n    this.drawPositionShape(attributes, container);\n\n    this.drawStatusShape(attributes, container);\n\n    this.drawPhoneShape(attributes, container);\n  }\n}\n\n/**\n * Implement a level of detail rendering, which will show different details based on the zoom level.\n */\nclass LevelOfDetail extends BaseBehavior {\n  prevLevel = DEFAULT_LEVEL;\n  levels = {\n    ['overview']: [0, 0.6],\n    ['detailed']: [0.6, Infinity],\n  };\n\n  constructor(context, options) {\n    super(context, options);\n    this.bindEvents();\n  }\n\n  update(options) {\n    this.unbindEvents();\n    super.update(options);\n    this.bindEvents();\n  }\n\n  updateZoomLevel = async (e) => {\n    if ('scale' in e.data) {\n      const scale = e.data.scale;\n      const level = Object.entries(this.levels).find(([key, [min, max]]) => scale > min && scale <= max)?.[0];\n      if (level && this.prevLevel !== level) {\n        const { graph } = this.context;\n        graph.updateNodeData((prev) => prev.map((node) => ({ ...node, data: { ...node.data, level } })));\n        await graph.draw();\n        this.prevLevel = level;\n      }\n    }\n  };\n\n  bindEvents() {\n    const { graph } = this.context;\n    graph.on(GraphEvent.AFTER_TRANSFORM, this.updateZoomLevel);\n  }\n\n  unbindEvents() {\n    const { graph } = this.context;\n    graph.off(GraphEvent.AFTER_TRANSFORM, this.updateZoomLevel);\n  }\n\n  destroy() {\n    this.unbindEvents();\n    super.destroy();\n  }\n}\n\nregister(ExtensionCategory.NODE, 'chart-node', ChartNode);\nregister(ExtensionCategory.BEHAVIOR, 'level-of-detail', LevelOfDetail);\n\nfetch('https://assets.antv.antgroup.com/g6/organization-chart.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        type: 'chart-node',\n        style: {\n          labelPlacement: 'center',\n          lineWidth: 1,\n          ports: [{ placement: 'top' }, { placement: 'bottom' }],\n          radius: 2,\n          shadowBlur: 10,\n          shadowColor: '#e0e0e0',\n          shadowOffsetX: 3,\n          size: [150, 60],\n          stroke: '#C0C0C0',\n        },\n      },\n      edge: {\n        type: 'polyline',\n        style: {\n          router: {\n            type: 'orth',\n          },\n          stroke: '#C0C0C0',\n        },\n      },\n      layout: {\n        type: 'dagre',\n      },\n      autoFit: 'view',\n      behaviors: ['level-of-detail', 'zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"组织架构",en:"Organization Chart"},filename:"organization-chart.js",isNew:!1},{id:"performance-diagnosis-flowchart",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*gS6BQbU7a0UAAAAAAAAAAAAADmJ7AQ/original",source:"import { BugOutlined } from '@ant-design/icons';\nimport { ExtensionCategory, Graph, HoverActivate, idOf, register } from '@antv/g6';\nimport { ReactNode } from '@antv/g6-extension-react';\nimport { Flex, Typography } from 'antd';\nimport { useEffect, useRef } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nconst { Text } = Typography;\n\nconst ACTIVE_COLOR = '#f6c523';\nconst COLOR_MAP = {\n  'pre-inspection': '#3fc1c9',\n  problem: '#8983f3',\n  inspection: '#f48db4',\n  solution: '#ffaa64',\n};\n\nclass HoverElement extends HoverActivate {\n  getActiveIds(event) {\n    const { model, graph } = this.context;\n    const { targetType, target } = event;\n    const targetId = target.id;\n\n    const ids = [targetId];\n    if (targetType === 'edge') {\n      const edge = model.getEdgeDatum(targetId);\n      ids.push(edge.source, edge.target);\n    } else if (targetType === 'node') {\n      ids.push(...model.getRelatedEdgesData(targetId).map(idOf));\n    }\n\n    graph.frontElement(ids);\n\n    return ids;\n  }\n}\n\nregister(ExtensionCategory.NODE, 'react', ReactNode);\nregister(ExtensionCategory.BEHAVIOR, 'hover-element', HoverElement);\n\nconst Node = ({ data }) => {\n  const { text, type } = data.data;\n\n  const isHovered = data.states?.includes('active');\n  const isSelected = data.states?.includes('selected');\n  const color = isHovered ? ACTIVE_COLOR : COLOR_MAP[type];\n\n  const containerStyle = {\n    width: '100%',\n    height: '100%',\n    background: color,\n    border: `3px solid ${color}`,\n    borderRadius: 16,\n    cursor: 'pointer',\n  };\n\n  if (isSelected) {\n    Object.assign(containerStyle, { border: `3px solid #000` });\n  }\n\n  return (\n    <Flex style={containerStyle} align=\"center\" justify=\"center\">\n      <Flex vertical style={{ padding: '8px 16px', textAlign: 'center' }} align=\"center\" justify=\"center\">\n        {type === 'problem' && <BugOutlined style={{ color: '#fff', fontSize: 24, marginBottom: 8 }} />}\n        <Text style={{ color: '#fff', fontWeight: 600, fontSize: 16 }}>{text}</Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport const PerformanceDiagnosisFlowchart = () => {\n  const containerRef = useRef();\n\n  useEffect(() => {\n    fetch('https://assets.antv.antgroup.com/g6/performance-diagnosis.json')\n      .then((res) => res.json())\n      .then((data) => {\n        const graph = new Graph({\n          container: containerRef.current,\n          data,\n          autoFit: 'view',\n          node: {\n            type: 'react',\n            style: (d) => {\n              const style = {\n                component: <Node data={d} />,\n                ports: [{ placement: 'top' }, { placement: 'bottom' }],\n              };\n\n              const size = {\n                'pre-inspection': [240, 120],\n                problem: [200, 120],\n                inspection: [330, 100],\n                solution: [200, 120],\n              }[d.data.type] || [200, 80];\n\n              Object.assign(style, {\n                size,\n                dx: -size[0] / 2,\n                dy: -size[1] / 2,\n              });\n              return style;\n            },\n            state: {\n              active: {\n                halo: false,\n              },\n              selected: {\n                halo: false,\n              },\n            },\n          },\n          edge: {\n            type: 'polyline',\n            style: {\n              lineWidth: 3,\n              radius: 20,\n              stroke: '#8b9baf',\n              endArrow: true,\n              labelText: (d) => d.data.text,\n              labelFill: '#8b9baf',\n              labelFontWeight: 600,\n              labelBackground: true,\n              labelBackgroundFill: '#f8f8f8',\n              labelBackgroundOpacity: 1,\n              labelBackgroundLineWidth: 3,\n              labelBackgroundStroke: '#8b9baf',\n              labelPadding: [1, 10],\n              labelBackgroundRadius: 4,\n              router: {\n                type: 'orth',\n              },\n            },\n            state: {\n              active: {\n                stroke: ACTIVE_COLOR,\n                labelBackgroundStroke: ACTIVE_COLOR,\n                halo: false,\n              },\n            },\n          },\n          layout: {\n            type: 'antv-dagre',\n          },\n          behaviors: ['zoom-canvas', 'drag-canvas', 'hover-element', 'click-select'],\n        });\n\n        graph.render();\n      });\n  }, []);\n\n  return <div style={{ width: '100%', height: '100%' }} ref={containerRef}></div>;\n};\n\nconst root = createRoot(document.getElementById('container'));\nroot.render(<PerformanceDiagnosisFlowchart />);\n",title:{zh:"系统性能诊断流程图",en:"System Performance Diagnosis Flowchart"},filename:"performance-diagnosis-flowchart.js",isNew:!1},{id:"sub-graph",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*2HzDTrQZ910AAAAAAAAAAAAADmJ7AQ/original",source:"import { BaseCombo, ExtensionCategory, Graph, HTML, isCollapsed, register } from '@antv/g6';\nimport { isEqual } from '@antv/util';\n\nclass SubGraphNode extends HTML {\n  connectedCallback() {\n    super.connectedCallback();\n    this.drawSubGraph();\n  }\n\n  render(attributes, container) {\n    super.render(attributes, container);\n    this.drawSubGraph();\n  }\n\n  get data() {\n    return this.context.graph.getElementData(this.id).data;\n  }\n\n  drawSubGraph() {\n    if (!this.isConnected) return;\n    if (isEqual(this.previousData, this.data)) return;\n    this.previousData = this.data;\n\n    const data = this.data;\n    this.drawGraphNode(data.data);\n  }\n\n  drawGraphNode(data) {\n    const [width, height] = this.getSize();\n    const container = this.getDomElement();\n    container.innerHTML = '';\n\n    const subGraph = new Graph({\n      container,\n      width,\n      height,\n      animation: false,\n      data: data,\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          iconFontFamily: 'iconfont',\n          iconText: '\\ue6e5',\n        },\n      },\n      layout: {\n        type: 'force',\n        linkDistance: 50,\n      },\n      behaviors: ['zoom-canvas', { type: 'drag-canvas', enable: (event) => event.shiftKey === true }],\n      autoFit: 'view',\n    });\n\n    subGraph.render();\n\n    this.graph = subGraph;\n  }\n\n  destroy() {\n    this.graph?.destroy();\n    super.destroy();\n  }\n}\n\nclass CardCombo extends BaseCombo {\n  getKeyStyle(attributes) {\n    const keyStyle = super.getKeyStyle(attributes);\n    const [width, height] = this.getKeySize(attributes);\n    return {\n      ...keyStyle,\n      width,\n      height,\n      x: -width / 2,\n      y: -height / 2,\n    };\n  }\n\n  drawKeyShape(attributes, container) {\n    const { collapsed } = attributes;\n    const outer = this.upsert('key', 'rect', this.getKeyStyle(attributes), container);\n    if (!outer || !collapsed) {\n      this.removeCardShape();\n      return outer;\n    }\n\n    this.drawCardShape(attributes, container);\n\n    return outer;\n  }\n\n  drawCardShape(attributes, container) {\n    const [width, height] = this.getCollapsedKeySize(attributes);\n    const data = this.context.graph.getComboData(this.id).data;\n\n    const baseX = -width / 2;\n    const baseY = -height / 2;\n\n    this.upsert(\n      'card-title',\n      'text',\n      {\n        x: baseX,\n        y: baseY,\n        text: 'Group: ' + this.id,\n        textAlign: 'left',\n        textBaseline: 'top',\n        fontSize: 16,\n        fontWeight: 'bold',\n        fill: '#4083f7',\n      },\n      container,\n    );\n\n    const gap = 10;\n    const sep = (width + gap) / data.data.length;\n    data.data.forEach(({ name, value }, index) => {\n      this.upsert(\n        `card-item-name-${index}`,\n        'text',\n        {\n          x: baseX + index * sep,\n          y: baseY + 40,\n          text: name,\n          textAlign: 'left',\n          textBaseline: 'top',\n          fontSize: 12,\n          fill: 'gray',\n        },\n        container,\n      );\n      this.upsert(\n        `card-item-value-${index}`,\n        'text',\n        {\n          x: baseX + index * sep,\n          y: baseY + 60,\n          text: value + '%',\n          textAlign: 'left',\n          textBaseline: 'top',\n          fontSize: 24,\n        },\n        container,\n      );\n    });\n  }\n\n  removeCardShape() {\n    Object.entries(this.shapeMap).forEach(([key, shape]) => {\n      if (key.startsWith('card-')) {\n        delete this.shapeMap[key];\n        shape.destroy();\n      }\n    });\n  }\n}\n\nregister(ExtensionCategory.NODE, 'sub-graph', SubGraphNode);\nregister(ExtensionCategory.COMBO, 'card', CardCombo);\n\nconst getSize = (d) => {\n  const data = d.data;\n  if (data.type === 'card') return data.status === 'expanded' ? [200, 100 * data.children.length] : [200, 100];\n  else return [200, 200];\n};\n\nconst graph = new Graph({\n  container: 'container',\n  animation: false,\n  zoom: 0.8,\n  data: {\n    nodes: [\n      {\n        id: '1',\n        combo: 'A',\n        style: { x: 120, y: 70 },\n        data: {\n          data: {\n            nodes: [\n              { id: 'node-1' },\n              { id: 'node-2' },\n              { id: 'node-3' },\n              { id: 'node-4' },\n              { id: 'node-5' },\n              { id: 'node-6' },\n              { id: 'node-7' },\n              { id: 'node-8' },\n            ],\n            edges: [\n              { source: 'node-1', target: 'node-2' },\n              { source: 'node-1', target: 'node-3' },\n              { source: 'node-1', target: 'node-4' },\n              { source: 'node-1', target: 'node-5' },\n              { source: 'node-1', target: 'node-6' },\n              { source: 'node-1', target: 'node-7' },\n              { source: 'node-1', target: 'node-8' },\n            ],\n          },\n        },\n      },\n      {\n        id: '2',\n        combo: 'C',\n        style: { x: 370, y: 70 },\n        data: {\n          data: {\n            nodes: [{ id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }],\n            edges: [\n              { source: 'node-1', target: 'node-2' },\n              { source: 'node-1', target: 'node-3' },\n              { source: 'node-1', target: 'node-4' },\n            ],\n          },\n        },\n      },\n      {\n        id: 'node-4',\n        combo: 'D',\n        style: { x: 370, y: 200 },\n        data: {\n          data: {\n            nodes: [{ id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }],\n            edges: [\n              { source: 'node-1', target: 'node-2' },\n              { source: 'node-1', target: 'node-3' },\n              { source: 'node-1', target: 'node-4' },\n            ],\n          },\n        },\n      },\n    ],\n    edges: [],\n    combos: [\n      {\n        id: 'root',\n        data: {\n          data: [\n            { name: 'percent', value: 50 },\n            { name: 'percent', value: 45 },\n            { name: 'percent', value: 70 },\n          ],\n        },\n      },\n      {\n        id: 'A',\n        combo: 'root',\n        data: {\n          data: [\n            { name: 'percent', value: 30 },\n            { name: 'percent', value: 90 },\n          ],\n        },\n      },\n      {\n        id: 'B',\n        combo: 'root',\n        style: { collapsed: true },\n        data: {\n          data: [\n            { name: 'percent', value: 60 },\n            { name: 'percent', value: 80 },\n          ],\n        },\n      },\n      {\n        id: 'C',\n        combo: 'B',\n        style: { collapsed: true },\n        data: {\n          data: [{ name: 'percent', value: 60 }],\n        },\n      },\n      {\n        id: 'D',\n        combo: 'B',\n        style: { collapsed: true },\n        data: {\n          data: [{ name: 'percent', value: 80 }],\n        },\n      },\n    ],\n  },\n  node: {\n    type: 'sub-graph',\n    style: {\n      dx: -100,\n      dy: -50,\n      size: getSize,\n    },\n  },\n  combo: {\n    type: 'card',\n    style: {\n      collapsedSize: [200, 100],\n      collapsedMarker: false,\n      radius: 10,\n    },\n  },\n  behaviors: [\n    { type: 'drag-element', enable: (event) => event.shiftKey !== true },\n    'collapse-expand',\n    'zoom-canvas',\n    'drag-canvas',\n  ],\n  plugins: [\n    {\n      type: 'contextmenu',\n      getItems: (event) => {\n        const { targetType, target } = event;\n        if (!['node', 'combo'].includes(targetType)) return [];\n        const id = target.id;\n\n        if (targetType === 'combo') {\n          const data = graph.getComboData(id);\n          if (isCollapsed(data)) {\n            return [{ name: '展开', value: 'expanded' }];\n          } else return [{ name: '收起', value: 'collapsed' }];\n        }\n        return [{ name: '收起', value: 'collapsed' }];\n      },\n      onClick: (value, target, current) => {\n        const id = current.id;\n        const elementType = graph.getElementType(id);\n\n        if (elementType === 'node') {\n          const parent = graph.getParentData(id, 'combo');\n          if (parent) return graph.collapseElement(parent.id, false);\n        }\n\n        if (value === 'expanded') graph.expandElement(id, false);\n        else graph.collapseElement(id, false);\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"子图",en:"Sub Graph"},filename:"sub-graph.js",isNew:!1},{id:"why-do-cats",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ug4vTJA7QbMAAAAAAAAAAAAADmJ7AQ/original",source:"// ref: https://whydocatsanddogs.com/cats\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Plugin as PluginRoughCanvasRenderer } from '@antv/g-plugin-rough-canvas-renderer';\nimport { BaseLayout, ExtensionCategory, Graph, register } from '@antv/g6';\nimport { hierarchy, pack } from '@antv/vendor/d3-hierarchy';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `\n@font-face {\nfont-family: 'handwriting';\nsrc: url('https://mass-office.alipay.com/huamei_koqzbu/afts/file/sgUeRbI3d-IAAAAAAAAAABAADnV5AQBr/font.woff2')\n  format('woff2');\n}`;\ndocument.head.appendChild(style);\n\nfunction getColor(id) {\n  const colors = [\n    '#8dd3c7',\n    '#bebada',\n    '#fb8072',\n    '#80b1d3',\n    '#fdb462',\n    '#b3de69',\n    '#fccde5',\n    '#d9d9d9',\n    '#bc80bd',\n    '#ccebc5',\n    '#ffed6f',\n  ];\n  const index = parseInt(id);\n  return colors[index % colors.length];\n}\n\nconst topics = [\n  'cat.like',\n  'cat.hate',\n  'cat.love',\n  'cat.not.like',\n  'cat.afraid_of',\n  'cat.want.to',\n  'cat.scared.of',\n  'cat.not.want_to',\n];\n\nclass BubbleLayout extends BaseLayout {\n  id = 'bubble-layout';\n\n  async execute(model, options) {\n    const { nodes = [] } = model;\n\n    const { width = 0, height = 0 } = { ...this.options, ...options };\n\n    const root = hierarchy({ id: 'root' }, (datum) => {\n      const { id } = datum;\n      if (id === 'root') return nodes.filter((node) => node.depth === 1);\n      else if (datum.depth === 2) return [];\n      else return nodes.filter((node) => node.actualParentId === id);\n    });\n\n    root.sum((d) => (+d.index_value || 0.01) ** 0.5 * 100);\n\n    pack()\n      .size([width, height])\n      .padding((node) => {\n        return node.depth === 0 ? 20 : 2;\n      })(root);\n\n    const result = { nodes: [] };\n\n    root.descendants().forEach((node) => {\n      const {\n        data: { id },\n        x,\n        y,\n        // @ts-expect-error r is exist\n        r,\n      } = node;\n\n      if (node.depth >= 1) result.nodes.push({ id, style: { x, y, size: r * 2 } });\n    });\n\n    return result;\n  }\n}\n\nregister(ExtensionCategory.LAYOUT, 'bubble-layout', BubbleLayout);\n\nfetch('https://assets.antv.antgroup.com/g6/cat-hierarchy.json')\n  .then((res) => res.json())\n  .then((rawData) => {\n    const graphData = rawData.reduce(\n      (acc, row) => {\n        const { id } = row;\n        topics.forEach((topic) => {\n          if (id.startsWith(topic)) {\n            if (id === topic) {\n              acc.nodes.push({ ...row, depth: 1 });\n            } else {\n              acc.nodes.push({ ...row, depth: 2, actualParentId: topic });\n            }\n          }\n        });\n\n        return acc;\n      },\n      { nodes: [] },\n    );\n\n    const graph = new Graph({\n      container: 'container',\n      data: graphData,\n      renderer: (layer) => {\n        const renderer = new CanvasRenderer();\n        if (layer === 'main') {\n          renderer.registerPlugin(new PluginRoughCanvasRenderer());\n        }\n        return renderer;\n      },\n      node: {\n        style: (d) => {\n          const { id, depth, id_num } = d;\n          const color = getColor(id_num);\n\n          if (depth === 1) {\n            return {\n              fill: 'none',\n              stroke: color,\n              labelFontFamily: 'handwriting',\n              labelFontSize: 20,\n              labelText: id.replace('cat.', '').replace(/\\.|_/g, ' '),\n              labelTextTransform: 'capitalize',\n              lineWidth: 1,\n              zIndex: -1,\n            };\n          }\n\n          const {\n            text,\n            style: { size: diameter },\n          } = d;\n\n          return {\n            fill: color,\n            fillOpacity: 0.7,\n            stroke: color,\n            fillStyle: 'cross-hatch',\n            hachureGap: 1.5,\n            iconFontFamily: 'handwriting',\n            iconFontSize: (diameter / text.length) * 2,\n            iconText: diameter > 20 ? text : '',\n            iconFontWeight: 'bold',\n            iconStroke: color,\n            iconLineWidth: 2,\n            lineWidth: (diameter || 20) ** 0.5 / 5,\n          };\n        },\n      },\n      layout: {\n        type: 'bubble-layout',\n        preLayout: true,\n      },\n      plugins: [\n        {\n          type: 'tooltip',\n          getContent: (event, items) => {\n            return `<span style=\"text-transform: capitalize; font-family: handwriting; font-size: 20px;\">${items[0].id.replace(/\\.|_/g, ' ')}</span>`;\n          },\n        },\n      ],\n      behaviors: [{ type: 'drag-canvas', enable: true }, 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"猫咪喜好",en:"Why Do Cats?"},filename:"why-do-cats.js",isNew:!1},{id:"snake-flow-diagram",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*7L51SLW2WhcAAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, Polyline, positionOf, register } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '0', data: { label: '开始流程', time: '17:00:00' } },\n    { id: '1', data: { label: '流程1', time: '17:00:05' } },\n    { id: '2', data: { label: '流程2', time: '17:00:12' } },\n    { id: '3', data: { label: '流程3', time: '17:00:30' } },\n    { id: '4', data: { label: '流程4', time: '17:02:00' } },\n    { id: '5', data: { label: '流程5', time: '17:02:40' } },\n    { id: '6', data: { label: '流程6', time: '17:05:50' } },\n    { id: '7', data: { label: '流程7', time: '17:10:00' } },\n    { id: '8', data: { label: '流程8', time: '17:11:20' } },\n    { id: '9', data: { label: '流程9', time: '17:15:00' } },\n    { id: '10', data: { label: '流程10', time: '17:30:00' } },\n    { id: '11', data: { label: '流程11' } },\n    { id: '12', data: { label: '流程12' } },\n    { id: '13', data: { label: '流程13' } },\n    { id: '14', data: { label: '流程14' } },\n    { id: '15', data: { label: '流程结束' } },\n  ],\n  edges: [\n    { source: '0', target: '1', data: { done: true } },\n    { source: '1', target: '2', data: { done: true } },\n    { source: '2', target: '3', data: { done: true } },\n    { source: '3', target: '4', data: { done: true } },\n    { source: '4', target: '5', data: { done: true } },\n    { source: '5', target: '6', data: { done: true } },\n    { source: '6', target: '7', data: { done: true } },\n    { source: '7', target: '8', data: { done: true } },\n    { source: '8', target: '9', data: { done: true } },\n    { source: '9', target: '10', data: { done: true } },\n    { source: '10', target: '11', data: { done: false } },\n    { source: '11', target: '12', data: { done: false } },\n    { source: '12', target: '13', data: { done: false } },\n    { source: '13', target: '14', data: { done: false } },\n    { source: '14', target: '15', data: { done: false } },\n  ],\n};\n\nclass SnakePolyline extends Polyline {\n  getPoints(attributes) {\n    const [sourcePoint, targetPoint] = this.getEndpoints(attributes, false);\n\n    if (sourcePoint[1] === targetPoint[1]) return [sourcePoint, targetPoint];\n\n    const prevPointId = this.context.model\n      .getRelatedEdgesData(this.sourceNode.id)\n      .filter((edge) => edge.target === this.sourceNode.id)[0]?.source;\n    if (!prevPointId) return [sourcePoint, targetPoint];\n\n    const prevPoint = positionOf(this.context.model.getNodeLikeDatum(prevPointId));\n    const offset = -(prevPoint[0] - sourcePoint[0]) / 4;\n    return [\n      sourcePoint,\n      [sourcePoint[0] + offset, sourcePoint[1]],\n      [targetPoint[0] + offset, targetPoint[1]],\n      targetPoint,\n    ];\n  }\n}\n\nregister(ExtensionCategory.EDGE, 's-polyline', SnakePolyline);\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  background: '#fafafa',\n  autoFit: 'center',\n  node: {\n    style: {\n      fill: (d) => (d.data.time ? '#1783ff' : '#d9d9d9'),\n      lineWidth: 2,\n      size: 8,\n      stroke: (d) => (d.data.time ? 'lightblue' : ''),\n      labelFontWeight: 500,\n      labelOffsetY: 8,\n      labelText: (d) => d.data.label,\n      badge: true,\n      badges: (d) => [\n        {\n          background: false,\n          fill: '#858ca6',\n          fontSize: 10,\n          offsetY: 39,\n          placement: 'bottom',\n          text: d.data.time || '--',\n        },\n      ],\n    },\n  },\n  edge: {\n    type: 's-polyline',\n    style: {\n      lineWidth: 2,\n      stroke: (d) => (d.data.done ? '#1783ff' : '#d9d9d9'),\n    },\n  },\n  layout: {\n    type: 'snake',\n    cols: 6,\n    rowGap: 200,\n    padding: [20, 140, 80],\n  },\n  behaviors: ['drag-canvas', 'zoom-canvas'],\n});\n\ngraph.render();\n",title:{zh:"S 型流程图",en:"Snake Flow Diagram"},filename:"snake-flow-diagram.js",isNew:!1}],icon:"",id:"default",title:{en:"Scene Case",zh:"场景案例"},api:null,childrenKey:"demos",order:0},{demos:[{id:"indented-tree",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*r0-SS5dRxykAAAAAAAAAAAAADmJ7AQ/original",source:"import { Text as GText, Rect } from '@antv/g';\nimport {\n  Badge,\n  BaseBehavior,\n  BaseNode,\n  CommonEvent,\n  ExtensionCategory,\n  Graph,\n  NodeEvent,\n  Polyline,\n  iconfont,\n  idOf,\n  register,\n  subStyleProps,\n  treeToGraphData,\n} from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst rootId = 'Modeling Methods';\n\nconst COLORS = [\n  '#5B8FF9',\n  '#F6BD16',\n  '#5AD8A6',\n  '#945FB9',\n  '#E86452',\n  '#6DC8EC',\n  '#FF99C3',\n  '#1E9493',\n  '#FF9845',\n  '#5D7092',\n];\n\nconst TreeEvent = {\n  COLLAPSE_EXPAND: 'collapse-expand',\n  ADD_CHILD: 'add-child',\n};\n\nlet textShape;\nconst measureText = (text) => {\n  if (!textShape) textShape = new GText({ style: text });\n  textShape.attr(text);\n  return textShape.getBBox().width;\n};\n\nclass IndentedNode extends BaseNode {\n  static defaultStyleProps = {\n    ports: [\n      {\n        key: 'in',\n        placement: 'right-bottom',\n      },\n      {\n        key: 'out',\n        placement: 'left-bottom',\n      },\n    ],\n  };\n\n  constructor(options) {\n    Object.assign(options.style, IndentedNode.defaultStyleProps);\n    super(options);\n  }\n\n  get childrenData() {\n    return this.context.model.getChildrenData(this.id);\n  }\n\n  getKeyStyle(attributes) {\n    const [width, height] = this.getSize(attributes);\n    const keyStyle = super.getKeyStyle(attributes);\n    return {\n      width,\n      height,\n      ...keyStyle,\n      fill: 'transparent',\n    };\n  }\n\n  drawKeyShape(attributes, container) {\n    const keyStyle = this.getKeyStyle(attributes);\n    return this.upsert('key', 'rect', keyStyle, container);\n  }\n\n  getLabelStyle(attributes) {\n    if (attributes.label === false || !attributes.labelText) return false;\n    return subStyleProps(this.getGraphicStyle(attributes), 'label');\n  }\n\n  drawIconArea(attributes, container) {\n    const [, h] = this.getSize(attributes);\n    const iconAreaStyle = {\n      fill: 'transparent',\n      height: 30,\n      width: 12,\n      x: -6,\n      y: h,\n      zIndex: -1,\n    };\n    this.upsert('icon-area', Rect, iconAreaStyle, container);\n  }\n\n  forwardEvent(target, type, listener) {\n    if (target && !Reflect.has(target, '__bind__')) {\n      Reflect.set(target, '__bind__', true);\n      target.addEventListener(type, listener);\n    }\n  }\n\n  getCountStyle(attributes) {\n    const { collapsed, color } = attributes;\n    if (collapsed) {\n      const [, height] = this.getSize(attributes);\n      return {\n        backgroundFill: color,\n        cursor: 'pointer',\n        fill: '#fff',\n        fontSize: 8,\n        padding: [0, 10],\n        text: `${this.childrenData.length}`,\n        textAlign: 'center',\n        y: height + 8,\n      };\n    }\n\n    return false;\n  }\n\n  drawCountShape(attributes, container) {\n    const countStyle = this.getCountStyle(attributes);\n    const btn = this.upsert('count', Badge, countStyle, container);\n\n    this.forwardEvent(btn, CommonEvent.CLICK, (event) => {\n      event.stopPropagation();\n      attributes.context.graph.emit(TreeEvent.COLLAPSE_EXPAND, {\n        id: this.id,\n        collapsed: false,\n      });\n    });\n  }\n\n  isShowCollapse(attributes) {\n    return !attributes.collapsed && this.childrenData.length > 0;\n  }\n\n  getCollapseStyle(attributes) {\n    const { showIcon, color } = attributes;\n    if (!this.isShowCollapse(attributes)) return false;\n    const [, height] = this.getSize(attributes);\n    return {\n      visibility: showIcon ? 'visible' : 'hidden',\n      backgroundFill: color,\n      backgroundHeight: 12,\n      backgroundWidth: 12,\n      cursor: 'pointer',\n      fill: '#fff',\n      fontFamily: 'iconfont',\n      fontSize: 8,\n      text: '\\ue6e4',\n      textAlign: 'center',\n      x: -1, // half of edge line width\n      y: height + 8,\n    };\n  }\n\n  drawCollapseShape(attributes, container) {\n    const iconStyle = this.getCollapseStyle(attributes);\n    const btn = this.upsert('collapse-expand', Badge, iconStyle, container);\n\n    this.forwardEvent(btn, CommonEvent.CLICK, (event) => {\n      event.stopPropagation();\n      attributes.context.graph.emit(TreeEvent.COLLAPSE_EXPAND, {\n        id: this.id,\n        collapsed: !attributes.collapsed,\n      });\n    });\n  }\n\n  getAddStyle(attributes) {\n    const { collapsed, showIcon } = attributes;\n    if (collapsed) return false;\n    const [, height] = this.getSize(attributes);\n    const color = '#ddd';\n    const lineWidth = 1;\n\n    return {\n      visibility: showIcon ? 'visible' : 'hidden',\n      backgroundFill: '#fff',\n      backgroundHeight: 12,\n      backgroundLineWidth: lineWidth,\n      backgroundStroke: color,\n      backgroundWidth: 12,\n      cursor: 'pointer',\n      fill: color,\n      fontFamily: 'iconfont',\n      text: '\\ue664',\n      textAlign: 'center',\n      x: -1,\n      y: height + (this.isShowCollapse(attributes) ? 22 : 8),\n    };\n  }\n\n  drawAddShape(attributes, container) {\n    const addStyle = this.getAddStyle(attributes);\n    const btn = this.upsert('add', Badge, addStyle, container);\n\n    this.forwardEvent(btn, CommonEvent.CLICK, (event) => {\n      event.stopPropagation();\n      attributes.context.graph.emit(TreeEvent.ADD_CHILD, { id: this.id });\n    });\n  }\n\n  render(attributes = this.parsedAttributes, container = this) {\n    super.render(attributes, container);\n\n    this.drawCountShape(attributes, container);\n\n    this.drawIconArea(attributes, container);\n    this.drawCollapseShape(attributes, container);\n    this.drawAddShape(attributes, container);\n  }\n}\n\nclass IndentedEdge extends Polyline {\n  getControlPoints(attributes) {\n    const [sourcePoint, targetPoint] = this.getEndpoints(attributes, false);\n    const [sx] = sourcePoint;\n    const [, ty] = targetPoint;\n    return [[sx, ty]];\n  }\n}\n\nclass CollapseExpandTree extends BaseBehavior {\n  constructor(context, options) {\n    super(context, options);\n    this.bindEvents();\n  }\n\n  update(options) {\n    this.unbindEvents();\n    super.update(options);\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    const { graph } = this.context;\n\n    graph.on(NodeEvent.POINTER_ENTER, this.showIcon);\n    graph.on(NodeEvent.POINTER_LEAVE, this.hideIcon);\n    graph.on(TreeEvent.COLLAPSE_EXPAND, this.onCollapseExpand);\n    graph.on(TreeEvent.ADD_CHILD, this.addChild);\n  }\n\n  unbindEvents() {\n    const { graph } = this.context;\n\n    graph.off(NodeEvent.POINTER_ENTER, this.showIcon);\n    graph.off(NodeEvent.POINTER_LEAVE, this.hideIcon);\n    graph.off(TreeEvent.COLLAPSE_EXPAND, this.onCollapseExpand);\n    graph.off(TreeEvent.ADD_CHILD, this.addChild);\n  }\n\n  status = 'idle';\n\n  showIcon = (event) => {\n    this.setIcon(event, true);\n  };\n\n  hideIcon = (event) => {\n    this.setIcon(event, false);\n  };\n\n  setIcon = (event, show) => {\n    if (this.status !== 'idle') return;\n    const { target } = event;\n    const id = target.id;\n    const { graph, element } = this.context;\n    graph.updateNodeData([{ id, style: { showIcon: show } }]);\n    element.draw({ animation: false, silence: true });\n  };\n\n  onCollapseExpand = async (event) => {\n    this.status = 'busy';\n    const { id, collapsed } = event;\n    const { graph } = this.context;\n    if (collapsed) await graph.collapseElement(id);\n    else await graph.expandElement(id);\n    this.status = 'idle';\n  };\n\n  addChild(event) {\n    const { onCreateChild = () => ({ id: `${Date.now()}`, style: { labelText: 'new node' } }) } = this.options;\n    const { graph } = this.context;\n    const datum = onCreateChild(event.id);\n    graph.addNodeData([datum]);\n    graph.addEdgeData([{ source: event.id, target: datum.id }]);\n    const parent = graph.getNodeData(event.id);\n    graph.updateNodeData([\n      { id: event.id, children: [...(parent.children || []), datum.id], style: { collapsed: false } },\n    ]);\n    graph.render();\n  }\n}\n\n/**\n * <zh/> 支持拖拽节点到其他节点下作为子节点\n *\n * <en/> Support dragging nodes to other nodes as child nodes\n */\nclass DragBranch extends BaseBehavior {\n  constructor(context, options) {\n    super(context, options);\n    this.bindEvents();\n  }\n\n  update(options) {\n    this.unbindEvents();\n    super.update(options);\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    const { graph } = this.context;\n\n    graph.on(NodeEvent.DRAG_START, this.onDragStart);\n    graph.on(NodeEvent.DRAG, this.onDrag);\n    graph.on(NodeEvent.DRAG_END, this.onDragEnd);\n    graph.on(NodeEvent.DRAG_ENTER, this.onDragEnter);\n    graph.on(NodeEvent.DRAG_LEAVE, this.onDragLeave);\n  }\n\n  unbindEvents() {\n    const { graph } = this.context;\n\n    graph.off(NodeEvent.DRAG_START, this.onDragStart);\n    graph.off(NodeEvent.DRAG, this.onDrag);\n    graph.off(NodeEvent.DRAG_END, this.onDragEnd);\n    graph.off(NodeEvent.DRAG_ENTER, this.onDragEnter);\n    graph.off(NodeEvent.DRAG_LEAVE, this.onDragLeave);\n  }\n\n  enable = true;\n\n  validate(event) {\n    if (this.destroyed) return false;\n    const { enable = (evt) => evt.target.id !== rootId } = this.options;\n    if (typeof enable === 'function') return enable(event);\n    return !!enable;\n  }\n\n  createShadow(target) {\n    const shadowStyle = subStyleProps(this.options, 'shadow');\n    const positionStyle = target.getShape('label').getBBox();\n\n    this.shadow = new Rect({\n      style: {\n        pointerEvents: 'none',\n        fill: '#F3F9FF',\n        fillOpacity: 0.5,\n        stroke: '#1890FF',\n        strokeOpacity: 0.9,\n        lineDash: [5, 5],\n        ...shadowStyle,\n        ...positionStyle,\n      },\n    });\n    this.context.canvas.appendChild(this.shadow);\n  }\n\n  moveShadow(offset) {\n    if (!this.shadow) return;\n    const [dx, dy] = offset;\n    this.shadow.translate(dx, dy);\n  }\n\n  destroyShadow() {\n    this.shadow?.remove();\n    this.shadow = undefined;\n  }\n\n  onDragStart = (event) => {\n    this.enable = this.validate(event);\n    if (!this.enable) return;\n\n    const { target } = event;\n    this.child = target;\n    this.createShadow(target);\n  };\n\n  getDelta(event) {\n    const zoom = this.context.graph.getZoom();\n    return [event.dx / zoom, event.dy / zoom];\n  }\n\n  onDrag = (event) => {\n    if (!this.enable) return;\n\n    const delta = this.getDelta(event);\n    this.moveShadow(delta);\n  };\n\n  onDragEnd = () => {\n    this.destroyShadow();\n    if (this.child === undefined || this.parent === undefined) return;\n\n    const { graph } = this.context;\n    const childId = this.child.id;\n    const parentId = this.parent.id;\n\n    const originalParent = graph.getParentData(childId, 'tree');\n\n    // 前后父节点不应该相同\n    // The previous and current parent nodes should not be the same\n    if (idOf(originalParent) === parentId) return;\n\n    // 新的父节点不应该是当前节点的子节点\n    // The new parent node should not be a child node of the current node\n    const ancestors = graph.getAncestorsData(parentId, 'tree');\n    if (ancestors.some((ancestor) => ancestor.id === childId)) return;\n\n    const edges = graph\n      .getEdgeData()\n      .filter((edge) => edge.target === childId)\n      .map(idOf);\n    graph.removeEdgeData(edges);\n    graph.updateNodeData([\n      { id: idOf(originalParent), children: originalParent?.children?.filter((child) => child !== childId) },\n    ]);\n    const modifiedParent = graph.getNodeData(parentId);\n    graph.updateNodeData([{ id: parentId, children: [...(modifiedParent.children || []), childId] }]);\n    graph.addEdgeData([{ source: parentId, target: childId }]);\n    graph.render();\n  };\n\n  onDragEnter = (event) => {\n    const { graph, element } = this.context;\n    const targetId = event.target.id;\n    if (targetId === this.child?.id || targetId === rootId) {\n      if (targetId === rootId) this.parent = event.target;\n      return;\n    }\n\n    this.parent = event.target;\n    graph.updateNodeData([{ id: targetId, states: ['selected'] }]);\n    element.draw({ animation: false, silence: true });\n  };\n\n  onDragLeave = (event) => {\n    const { graph, element } = this.context;\n    const targetId = event.target.id;\n\n    this.parent = undefined;\n    graph.updateNodeData([{ id: targetId, states: [] }]);\n    element.draw({ animation: false, silence: true });\n  };\n}\n\nregister(ExtensionCategory.NODE, 'indented', IndentedNode);\nregister(ExtensionCategory.EDGE, 'indented', IndentedEdge);\nregister(ExtensionCategory.BEHAVIOR, 'collapse-expand-tree', CollapseExpandTree);\nregister(ExtensionCategory.BEHAVIOR, 'drag-branch', DragBranch);\n\nfetch('https://assets.antv.antgroup.com/g6/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      x: 60,\n      data: treeToGraphData(data),\n      node: {\n        type: 'indented',\n        style: {\n          size: (d) => [measureText({ text: d.id, fontSize: 12 }) + 6, 20],\n          labelBackground: (datum) => datum.id === rootId,\n          labelBackgroundRadius: 0,\n          labelBackgroundFill: '#576286',\n          labelFill: (datum) => (datum.id === rootId ? '#fff' : '#666'),\n          labelText: (d) => d.style?.labelText || d.id,\n          labelTextAlign: (datum) => (datum.id === rootId ? 'center' : 'left'),\n          labelTextBaseline: 'top',\n          color: (datum) => {\n            const depth = graph.getAncestorsData(datum.id, 'tree').length - 1;\n            return COLORS[depth % COLORS.length] || '#576286';\n          },\n        },\n        state: {\n          selected: {\n            lineWidth: 0,\n            labelFill: '#40A8FF',\n            labelBackground: true,\n            labelFontWeight: 'normal',\n            labelBackgroundFill: '#e8f7ff',\n            labelBackgroundRadius: 10,\n          },\n        },\n      },\n      edge: {\n        type: 'indented',\n        style: {\n          radius: 16,\n          lineWidth: 2,\n          sourcePort: 'out',\n          targetPort: 'in',\n          stroke: (datum) => {\n            const depth = graph.getAncestorsData(datum.source, 'tree').length;\n            return COLORS[depth % COLORS.length];\n          },\n        },\n      },\n      layout: {\n        type: 'indented',\n        direction: 'LR',\n        isHorizontal: true,\n        indent: 40,\n        getHeight: () => 20,\n        getVGap: () => 10,\n      },\n      behaviors: [\n        'scroll-canvas',\n        'drag-branch',\n        'collapse-expand-tree',\n        { type: 'click-select', enable: (event) => event.targetType === 'node' && event.target.id !== rootId },\n      ],\n    });\n\n    graph.render();\n  });\n",title:{zh:"缩进树",en:"Indented Tree"},filename:"indented-tree.js",isNew:!1},{id:"mindmap",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*xryoSY8EQWoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Rect, Text } from '@antv/g';\nimport {\n  Badge,\n  BaseBehavior,\n  BaseNode,\n  BaseTransform,\n  CommonEvent,\n  CubicHorizontal,\n  ExtensionCategory,\n  Graph,\n  GraphEvent,\n  iconfont,\n  idOf,\n  NodeEvent,\n  positionOf,\n  register,\n  treeToGraphData,\n} from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst RootNodeStyle = {\n  fill: '#EFF0F0',\n  labelFill: '#262626',\n  labelFontSize: 24,\n  labelFontWeight: 600,\n  labelOffsetY: 8,\n  labelPlacement: 'center',\n  ports: [{ placement: 'right' }, { placement: 'left' }],\n  radius: 8,\n};\n\nconst NodeStyle = {\n  fill: 'transparent',\n  labelPlacement: 'center',\n  labelFontSize: 16,\n  ports: [{ placement: 'right-bottom' }, { placement: 'left-bottom' }],\n};\n\nconst TreeEvent = {\n  COLLAPSE_EXPAND: 'collapse-expand',\n  ADD_CHILD: 'add-child',\n};\n\nlet textShape;\nconst measureText = (text) => {\n  if (!textShape) textShape = new Text({ style: text });\n  textShape.attr(text);\n  return textShape.getBBox().width;\n};\n\nconst getNodeWidth = (nodeId, isRoot) => {\n  const padding = isRoot ? 40 : 30;\n  const nodeStyle = isRoot ? RootNodeStyle : NodeStyle;\n  return measureText({ text: nodeId, fontSize: nodeStyle.labelFontSize, fontFamily: 'Gill Sans' }) + padding;\n};\n\nconst getNodeSize = (nodeId, isRoot) => {\n  const width = getNodeWidth(nodeId, isRoot);\n  const height = isRoot ? 48 : 32;\n  return [width, height];\n};\n\nclass MindmapNode extends BaseNode {\n  static defaultStyleProps = {\n    showIcon: false,\n  };\n\n  constructor(options) {\n    Object.assign(options.style, MindmapNode.defaultStyleProps);\n    super(options);\n  }\n\n  get childrenData() {\n    return this.context.model.getChildrenData(this.id);\n  }\n\n  get rootId() {\n    return idOf(this.context.model.getRootsData()[0]);\n  }\n\n  isShowCollapse(attributes) {\n    const { collapsed, showIcon } = attributes;\n    return !collapsed && showIcon && this.childrenData.length > 0;\n  }\n\n  getCollapseStyle(attributes) {\n    const { showIcon, color, direction } = attributes;\n    if (!this.isShowCollapse(attributes)) return false;\n    const [width, height] = this.getSize(attributes);\n\n    return {\n      backgroundFill: color,\n      backgroundHeight: 12,\n      backgroundWidth: 12,\n      cursor: 'pointer',\n      fill: '#fff',\n      fontFamily: 'iconfont',\n      fontSize: 8,\n      text: '\\ue6e4',\n      textAlign: 'center',\n      transform: direction === 'left' ? [['rotate', 90]] : [['rotate', -90]],\n      visibility: showIcon ? 'visible' : 'hidden',\n      x: direction === 'left' ? -6 : width + 6,\n      y: height,\n    };\n  }\n\n  drawCollapseShape(attributes, container) {\n    const iconStyle = this.getCollapseStyle(attributes);\n    const btn = this.upsert('collapse-expand', Badge, iconStyle, container);\n\n    this.forwardEvent(btn, CommonEvent.CLICK, (event) => {\n      event.stopPropagation();\n      this.context.graph.emit(TreeEvent.COLLAPSE_EXPAND, {\n        id: this.id,\n        collapsed: !attributes.collapsed,\n      });\n    });\n  }\n\n  getCountStyle(attributes) {\n    const { collapsed, color, direction } = attributes;\n    const count = this.context.model.getDescendantsData(this.id).length;\n    if (!collapsed || count === 0) return false;\n    const [width, height] = this.getSize(attributes);\n    return {\n      backgroundFill: color,\n      backgroundHeight: 12,\n      backgroundWidth: 12,\n      cursor: 'pointer',\n      fill: '#fff',\n      fontSize: 8,\n      text: count.toString(),\n      textAlign: 'center',\n      x: direction === 'left' ? -6 : width + 6,\n      y: height,\n    };\n  }\n\n  drawCountShape(attributes, container) {\n    const countStyle = this.getCountStyle(attributes);\n    const btn = this.upsert('count', Badge, countStyle, container);\n\n    this.forwardEvent(btn, CommonEvent.CLICK, (event) => {\n      event.stopPropagation();\n      this.context.graph.emit(TreeEvent.COLLAPSE_EXPAND, {\n        id: this.id,\n        collapsed: false,\n      });\n    });\n  }\n\n  getAddStyle(attributes) {\n    const { collapsed, showIcon, direction } = attributes;\n    if (collapsed || !showIcon) return false;\n    const [width, height] = this.getSize(attributes);\n    const color = '#ddd';\n\n    const offsetX = this.isShowCollapse(attributes) ? 24 : 12;\n    const isRoot = this.id === this.rootId;\n\n    return {\n      backgroundFill: '#fff',\n      backgroundHeight: 12,\n      backgroundLineWidth: 1,\n      backgroundStroke: color,\n      backgroundWidth: 12,\n      cursor: 'pointer',\n      fill: color,\n      fontFamily: 'iconfont',\n      fontSize: 8,\n      text: '\\ue664',\n      textAlign: 'center',\n      x: isRoot ? width + 12 : direction === 'left' ? -offsetX : width + offsetX,\n      y: isRoot ? height / 2 : height,\n    };\n  }\n\n  getAddBarStyle(attributes) {\n    const { collapsed, showIcon, direction, color = '#1783FF' } = attributes;\n    if (collapsed || !showIcon) return false;\n    const [width, height] = this.getSize(attributes);\n\n    const offsetX = this.isShowCollapse(attributes) ? 12 : 0;\n    const isRoot = this.id === this.rootId;\n\n    const HEIGHT = 2;\n    const WIDTH = 6;\n\n    return {\n      cursor: 'pointer',\n      fill:\n        direction === 'left'\n          ? `linear-gradient(180deg, #fff 20%, ${color})`\n          : `linear-gradient(0deg, #fff 20%, ${color})`,\n      height: HEIGHT,\n      width: WIDTH,\n      x: isRoot ? width : direction === 'left' ? -offsetX - WIDTH : width + offsetX,\n      y: isRoot ? height / 2 - HEIGHT / 2 : height - HEIGHT / 2,\n      zIndex: -1,\n    };\n  }\n\n  drawAddShape(attributes, container) {\n    const addStyle = this.getAddStyle(attributes);\n    const addBarStyle = this.getAddBarStyle(attributes);\n    this.upsert('add-bar', Rect, addBarStyle, container);\n    const btn = this.upsert('add', Badge, addStyle, container);\n\n    this.forwardEvent(btn, CommonEvent.CLICK, (event) => {\n      event.stopPropagation();\n      this.context.graph.emit(TreeEvent.ADD_CHILD, { id: this.id, direction: attributes.direction });\n    });\n  }\n\n  forwardEvent(target, type, listener) {\n    if (target && !Reflect.has(target, '__bind__')) {\n      Reflect.set(target, '__bind__', true);\n      target.addEventListener(type, listener);\n    }\n  }\n\n  getKeyStyle(attributes) {\n    const [width, height] = this.getSize(attributes);\n    const keyShape = super.getKeyStyle(attributes);\n    return { width, height, ...keyShape };\n  }\n\n  drawKeyShape(attributes, container) {\n    const keyStyle = this.getKeyStyle(attributes);\n    return this.upsert('key', Rect, keyStyle, container);\n  }\n\n  render(attributes = this.parsedAttributes, container = this) {\n    super.render(attributes, container);\n\n    this.drawCollapseShape(attributes, container);\n    this.drawAddShape(attributes, container);\n\n    this.drawCountShape(attributes, container);\n  }\n}\n\nclass MindmapEdge extends CubicHorizontal {\n  get rootId() {\n    return idOf(this.context.model.getRootsData()[0]);\n  }\n\n  getKeyPath(attributes) {\n    const path = super.getKeyPath(attributes);\n    const isRoot = this.targetNode.id === this.rootId;\n    const labelWidth = getNodeWidth(this.targetNode.id, isRoot);\n\n    const [, tp] = this.getEndpoints(attributes);\n    const sign = this.sourceNode.getCenter()[0] < this.targetNode.getCenter()[0] ? 1 : -1;\n    return [...path, ['L', tp[0] + labelWidth * sign, tp[1]]];\n  }\n}\n\nclass CollapseExpandTree extends BaseBehavior {\n  constructor(context, options) {\n    super(context, options);\n    this.bindEvents();\n  }\n\n  update(options) {\n    this.unbindEvents();\n    super.update(options);\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    const { graph } = this.context;\n\n    graph.on(NodeEvent.POINTER_ENTER, this.showIcon);\n    graph.on(NodeEvent.POINTER_LEAVE, this.hideIcon);\n    graph.on(TreeEvent.COLLAPSE_EXPAND, this.onCollapseExpand);\n    graph.on(TreeEvent.ADD_CHILD, this.addChild);\n  }\n\n  unbindEvents() {\n    const { graph } = this.context;\n\n    graph.off(NodeEvent.POINTER_ENTER, this.showIcon);\n    graph.off(NodeEvent.POINTER_LEAVE, this.hideIcon);\n    graph.off(TreeEvent.COLLAPSE_EXPAND, this.onCollapseExpand);\n    graph.off(TreeEvent.ADD_CHILD, this.addChild);\n  }\n\n  status = 'idle';\n\n  showIcon = (event) => {\n    this.setIcon(event, true);\n  };\n\n  hideIcon = (event) => {\n    this.setIcon(event, false);\n  };\n\n  setIcon = (event, show) => {\n    if (this.status !== 'idle') return;\n    const { target } = event;\n    const id = target.id;\n    const { graph, element } = this.context;\n    graph.updateNodeData([{ id, style: { showIcon: show } }]);\n    element.draw({ animation: false, silence: true });\n  };\n\n  onCollapseExpand = async (event) => {\n    this.status = 'busy';\n    const { id, collapsed } = event;\n    const { graph } = this.context;\n    await graph.frontElement(id);\n    if (collapsed) await graph.collapseElement(id);\n    else await graph.expandElement(id);\n    this.status = 'idle';\n  };\n\n  addChild = async (event) => {\n    this.status = 'busy';\n    const {\n      onCreateChild = () => {\n        const currentTime = new Date(Date.now()).toLocaleString();\n        return { id: `New Node in ${currentTime}` };\n      },\n    } = this.options;\n    const { graph } = this.context;\n    const datum = onCreateChild(event.id);\n    const parent = graph.getNodeData(event.id);\n\n    graph.addNodeData([datum]);\n    graph.addEdgeData([{ source: event.id, target: datum.id }]);\n    graph.updateNodeData([\n      {\n        id: event.id,\n        children: [...(parent.children || []), datum.id],\n        style: { collapsed: false, showIcon: false },\n      },\n    ]);\n    await graph.render();\n    await graph.focusElement(datum.id);\n    this.status = 'idle';\n  };\n}\n\nclass AssignColorByBranch extends BaseTransform {\n  static defaultOptions = {\n    colors: [\n      '#1783FF',\n      '#F08F56',\n      '#D580FF',\n      '#00C9C9',\n      '#7863FF',\n      '#DB9D0D',\n      '#60C42D',\n      '#FF80CA',\n      '#2491B3',\n      '#17C76F',\n    ],\n  };\n\n  constructor(context, options) {\n    super(context, Object.assign({}, AssignColorByBranch.defaultOptions, options));\n  }\n\n  beforeDraw(input) {\n    const nodes = this.context.model.getNodeData();\n\n    if (nodes.length === 0) return input;\n\n    let colorIndex = 0;\n    const dfs = (nodeId, color) => {\n      const node = nodes.find((datum) => datum.id == nodeId);\n      if (!node) return;\n\n      node.style ||= {};\n      node.style.color = color || this.options.colors[colorIndex++ % this.options.colors.length];\n      node.children?.forEach((childId) => dfs(childId, node.style?.color));\n    };\n\n    nodes.filter((node) => node.depth === 1).forEach((rootNode) => dfs(rootNode.id));\n\n    return input;\n  }\n}\n\nregister(ExtensionCategory.NODE, 'mindmap', MindmapNode);\nregister(ExtensionCategory.EDGE, 'mindmap', MindmapEdge);\nregister(ExtensionCategory.BEHAVIOR, 'collapse-expand-tree', CollapseExpandTree);\nregister(ExtensionCategory.TRANSFORM, 'assign-color-by-branch', AssignColorByBranch);\n\nconst getNodeSide = (nodeData, parentData) => {\n  if (!parentData) return 'center';\n\n  const nodePositionX = positionOf(nodeData)[0];\n  const parentPositionX = positionOf(parentData)[0];\n  return parentPositionX > nodePositionX ? 'left' : 'right';\n};\n\nfetch('https://assets.antv.antgroup.com/g6/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const rootId = data.id;\n\n    const graph = new Graph({\n      data: treeToGraphData(data),\n      node: {\n        type: 'mindmap',\n        style: function (d) {\n          const direction = getNodeSide(d, this.getParentData(idOf(d), 'tree'));\n          const isRoot = idOf(d) === rootId;\n\n          return {\n            direction,\n            labelText: idOf(d),\n            size: getNodeSize(idOf(d), isRoot),\n            labelFontFamily: 'Gill Sans',\n            // 通过设置节点标签背景来扩大交互区域 | Expand the interaction area by setting the node label background\n            labelBackground: true,\n            labelBackgroundFill: 'transparent',\n            labelPadding: direction === 'left' ? [2, 0, 10, 40] : [2, 40, 10, 0],\n            ...(isRoot ? RootNodeStyle : NodeStyle),\n          };\n        },\n      },\n      edge: {\n        type: 'mindmap',\n        style: {\n          lineWidth: 3,\n          stroke: function (data) {\n            return this.getNodeData(data.target).style.color || '#99ADD1';\n          },\n        },\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'H',\n        getHeight: () => 30,\n        getWidth: (node) => getNodeWidth(node.id, node.id === rootId),\n        getVGap: () => 6,\n        getHGap: () => 60,\n        animation: false,\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'collapse-expand-tree'],\n      transforms: ['assign-color-by-branch'],\n      animation: false,\n    });\n\n    graph.once(GraphEvent.AFTER_RENDER, () => {\n      graph.fitView();\n    });\n\n    graph.render();\n  });\n",title:{zh:"思维导图",en:"Mind Map"},filename:"mindmap.js",isNew:!1},{id:"anti-procrastination-fishbone",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*olIATZ-4qMEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Text } from '@antv/g';\nimport { BaseTransform, ExtensionCategory, Graph, register, treeToGraphData } from '@antv/g6';\n\nconst data = {\n  id: 'Overcome \\n procrastination',\n  children: [\n    {\n      id: 'Perfectionism',\n      children: [\n        { id: 'Correctly assess the difficulty of things' },\n        { id: 'Complete first, then improve' },\n        { id: 'Just do it' },\n      ],\n    },\n    {\n      id: 'Improve concentration',\n      children: [\n        { id: 'Pomodoro Technique' },\n        { id: 'Limited time, limited quantity, only do one thing at a time' },\n        { id: 'Improve anti-interference ability, reduce interruptions' },\n      ],\n    },\n    {\n      id: 'Set a clear task management process',\n      children: [\n        { id: 'Set priorities for completed tasks' },\n        { id: 'Break down specific executable goals' },\n        { id: 'Collect-sort-sort-execute feedback-summary' },\n      ],\n    },\n    {\n      id: 'Establish positive feedback',\n      children: [{ id: 'Do what you like' }, { id: 'Spiritual motivation' }, { id: 'Material motivation' }],\n    },\n    {\n      id: 'Relax and enjoy',\n      children: [\n        { id: 'Focus on process rather than results' },\n        { id: 'Driven by needs rather than anxiety' },\n        { id: 'Accept and understand' },\n      ],\n    },\n  ],\n};\n\nlet textShape;\nconst measureText = (style) => {\n  if (!textShape) textShape = new Text({ style });\n  textShape.attr(style);\n  return textShape.getBBox().width;\n};\n\nclass AssignColorByBranch extends BaseTransform {\n  static defaultOptions = {\n    colors: [\n      '#1783FF',\n      '#F08F56',\n      '#D580FF',\n      '#00C9C9',\n      '#7863FF',\n      '#DB9D0D',\n      '#60C42D',\n      '#FF80CA',\n      '#2491B3',\n      '#17C76F',\n    ],\n  };\n\n  constructor(context, options) {\n    super(context, Object.assign({}, AssignColorByBranch.defaultOptions, options));\n  }\n\n  beforeDraw(input) {\n    const nodes = this.context.model.getNodeData();\n\n    if (nodes.length === 0) return input;\n\n    let colorIndex = 0;\n    const dfs = (nodeId, color) => {\n      const node = nodes.find((datum) => datum.id == nodeId);\n      if (!node) return;\n\n      node.style ||= {};\n      node.style.color = color || this.options.colors[colorIndex++ % this.options.colors.length];\n      node.children?.forEach((childId) => dfs(childId, node.style?.color));\n    };\n\n    nodes.filter((node) => node.depth === 1).forEach((rootNode) => dfs(rootNode.id));\n\n    return input;\n  }\n}\n\nclass ArrangeEdgeZIndex extends BaseTransform {\n  beforeDraw(input) {\n    const { model } = this.context;\n    const { nodes, edges } = model.getData();\n\n    const oneLevelNodes = nodes.filter((node) => node.depth === 1);\n    const oneLevelNodeIds = oneLevelNodes.map((node) => node.id);\n\n    edges.forEach((edge) => {\n      if (oneLevelNodeIds.includes(edge.target)) {\n        edge.style ||= {};\n        edge.style.zIndex = oneLevelNodes.length - oneLevelNodes.findIndex((node) => node.id === edge.target);\n      }\n    });\n\n    return input;\n  }\n}\n\nregister(ExtensionCategory.TRANSFORM, 'assign-color-by-branch', AssignColorByBranch);\nregister(ExtensionCategory.TRANSFORM, 'arrange-edge-z-index', ArrangeEdgeZIndex);\n\nconst getNodeSize = (id, depth) => {\n  const FONT_FAMILY = 'system-ui, sans-serif';\n  return depth === 0\n    ? [measureText({ text: id, fontSize: 24, fontWeight: 'bold', fontFamily: FONT_FAMILY }) + 80, 70]\n    : depth === 1\n      ? [measureText({ text: id, fontSize: 18, fontFamily: FONT_FAMILY }) + 50, 42]\n      : [2, 30];\n};\n\nconst graph = new Graph({\n  autoFit: 'view',\n  padding: 10,\n  data: treeToGraphData(data),\n  node: {\n    type: 'rect',\n    style: (d) => {\n      const style = {\n        radius: 8,\n        size: getNodeSize(d.id, d.depth),\n        labelText: d.id,\n        labelPlacement: 'right',\n        labelFontFamily: 'Gill Sans',\n      };\n\n      if (d.depth === 0) {\n        Object.assign(style, {\n          fill: '#EFF0F0',\n          labelFill: '#262626',\n          labelFontWeight: 'bold',\n          labelFontSize: 24,\n          labelOffsetY: 4,\n          labelPlacement: 'center',\n          labelLineHeight: 24,\n        });\n      } else if (d.depth === 1) {\n        Object.assign(style, {\n          labelFontSize: 18,\n          labelFill: '#fff',\n          labelFillOpacity: 0.9,\n          labelOffsetY: 5,\n          labelPlacement: 'center',\n          fill: d.style?.color,\n        });\n      } else {\n        Object.assign(style, {\n          fill: 'transparent',\n          labelFontSize: 16,\n          labeFill: '#262626',\n        });\n      }\n      return style;\n    },\n  },\n  edge: {\n    type: 'polyline',\n    style: {\n      lineWidth: 3,\n      stroke: function (data) {\n        return this.getNodeData(data.target).style.color || '#99ADD1';\n      },\n    },\n  },\n  layout: {\n    type: 'fishbone',\n    direction: 'LR',\n    hGap: 40,\n    vGap: 60,\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas'],\n  transforms: ['assign-color-by-branch', 'arrange-edge-z-index'],\n});\n\ngraph.render();\n",title:{zh:"克服拖延症（决策型鱼骨图）",en:"Anti-Procrastination Fishbone Diagram"},filename:"anti-procrastination-fishbone.js",isNew:!1},{id:"product-fishbone",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*I0VYSYD_3bUAAAAAAAAAAAAADmJ7AQ/original",source:"import { Text } from '@antv/g';\nimport { BaseTransform, ExtensionCategory, Graph, register, treeToGraphData } from '@antv/g6';\n\nconst data = {\n  id: 'Product Profitability\\nBelow Expectations',\n  children: [\n    {\n      id: 'Problem Description',\n      children: [\n        { id: 'Brand Sales Volume' },\n        { id: 'Market Capacity' },\n        { id: 'Brand Market Share' },\n        { id: 'Total Contribution Margin' },\n      ],\n    },\n    {\n      id: 'Brand Positioning',\n      children: [{ id: 'Packaging' }, { id: 'Brand Name' }, { id: 'Selling Price' }, { id: 'Product Specifications' }],\n    },\n    {\n      id: 'Distribution Channels',\n      children: [{ id: 'Region' }, { id: 'Channel' }, { id: 'Customer Type' }, { id: 'Sales Personnel Coverage' }],\n    },\n    {\n      id: 'Market Awareness',\n      children: [\n        { id: 'Regional Weighting' },\n        { id: 'Media Mix' },\n        { id: 'Advertising Investment' },\n        { id: 'Quality Perception' },\n      ],\n    },\n    {\n      id: 'Trial Purchase',\n      children: [\n        { id: 'In-store Display' },\n        { id: 'Promotion Type' },\n        { id: 'Timing of Promotion' },\n        { id: 'Supply Assurance' },\n      ],\n    },\n    {\n      id: 'Repeat Purchase',\n      children: [\n        { id: 'Consumer Profile' },\n        { id: 'Usage Occasion' },\n        { id: 'Frequency of Use' },\n        { id: 'Returns Due to Product Issues' },\n      ],\n    },\n  ],\n};\n\nlet textShape;\nconst measureText = (style) => {\n  if (!textShape) textShape = new Text({ style });\n  textShape.attr(style);\n  return textShape.getBBox().width;\n};\n\nclass AssignColorByBranch extends BaseTransform {\n  static defaultOptions = {\n    colors: [\n      '#1783FF',\n      '#F08F56',\n      '#D580FF',\n      '#00C9C9',\n      '#7863FF',\n      '#DB9D0D',\n      '#60C42D',\n      '#FF80CA',\n      '#2491B3',\n      '#17C76F',\n    ],\n  };\n\n  constructor(context, options) {\n    super(context, Object.assign({}, AssignColorByBranch.defaultOptions, options));\n  }\n\n  beforeDraw(input) {\n    const nodes = this.context.model.getNodeData();\n\n    if (nodes.length === 0) return input;\n\n    let colorIndex = 0;\n    const dfs = (nodeId, color) => {\n      const node = nodes.find((datum) => datum.id == nodeId);\n      if (!node) return;\n\n      node.style ||= {};\n      node.style.color = color || this.options.colors[colorIndex++ % this.options.colors.length];\n      node.children?.forEach((childId) => dfs(childId, node.style?.color));\n    };\n\n    nodes.filter((node) => node.depth === 1).forEach((rootNode) => dfs(rootNode.id));\n\n    return input;\n  }\n}\n\nclass ArrangeEdgeZIndex extends BaseTransform {\n  beforeDraw(input) {\n    const { model } = this.context;\n    const { nodes, edges } = model.getData();\n\n    const oneLevelNodes = nodes.filter((node) => node.depth === 1);\n    const oneLevelNodeIds = oneLevelNodes.map((node) => node.id);\n\n    edges.forEach((edge) => {\n      if (oneLevelNodeIds.includes(edge.target)) {\n        edge.style ||= {};\n        edge.style.zIndex = oneLevelNodes.length - oneLevelNodes.findIndex((node) => node.id === edge.target);\n      }\n    });\n\n    return input;\n  }\n}\n\nregister(ExtensionCategory.TRANSFORM, 'assign-color-by-branch', AssignColorByBranch);\nregister(ExtensionCategory.TRANSFORM, 'arrange-edge-z-index', ArrangeEdgeZIndex);\n\nconst getNodeSize = (id, depth) => {\n  const FONT_FAMILY = 'system-ui, sans-serif';\n  return depth === 0\n    ? [measureText({ text: id, fontSize: 24, fontWeight: 'bold', fontFamily: FONT_FAMILY }) + 80, 90]\n    : depth === 1\n      ? [measureText({ text: id, fontSize: 18, fontFamily: FONT_FAMILY }) + 50, 42]\n      : [2, 30];\n};\n\nconst graph = new Graph({\n  autoFit: 'view',\n  padding: 30,\n  data: treeToGraphData(data),\n  node: {\n    type: 'rect',\n    style: (d) => {\n      const style = {\n        radius: 8,\n        size: getNodeSize(d.id, d.depth),\n        labelText: d.id,\n        labelPlacement: 'left',\n        labelFontFamily: 'Gill Sans',\n      };\n\n      if (d.depth === 0) {\n        Object.assign(style, {\n          fill: '#EFF0F0',\n          labelFill: '#262626',\n          labelFontWeight: 'bold',\n          labelFontSize: 24,\n          labelOffsetY: 3,\n          labelPlacement: 'center',\n          labelLineHeight: 32,\n        });\n      } else if (d.depth === 1) {\n        Object.assign(style, {\n          labelFontSize: 18,\n          labelFill: '#252525',\n          labelFillOpacity: 0.9,\n          labelOffsetY: 5,\n          labelPlacement: 'center',\n          labelFontWeight: 600,\n          fill: d.style?.color,\n          fillOpacity: 0.6,\n          lineWidth: 2,\n          stroke: '#252525',\n        });\n      } else {\n        Object.assign(style, {\n          fill: 'transparent',\n          labelFontSize: 16,\n          labeFill: '#262626',\n        });\n      }\n      return style;\n    },\n  },\n  edge: {\n    type: 'polyline',\n    style: {\n      lineWidth: 3,\n      stroke: '#252525',\n    },\n  },\n  layout: {\n    type: 'fishbone',\n    direction: 'RL',\n    hGap: 40,\n    vGap: 60,\n    getRibSep: (node) => {\n      console.log(node);\n      return node.depth === 0 ? 0 : -50;\n    },\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas'],\n  transforms: ['assign-color-by-branch', 'arrange-edge-z-index'],\n});\n\ngraph.render();\n",title:{zh:"分析产品收益（原因型鱼骨图）",en:"Product Profitability Below Expectations"},filename:"product-fishbone.js",isNew:!1},{id:"radial-dendrogram",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*tK5USKBOc2kAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/flare.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      padding: 50,\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          size: 12,\n          labelText: (d) => d.id,\n          labelBackground: true,\n          labelFontSize: 14,\n          labelFontFamily: 'Gill Sans',\n        },\n      },\n      edge: {\n        type: 'cubic-radial',\n        style: {\n          lineWidth: 3,\n        },\n      },\n      layout: {\n        type: 'dendrogram',\n        radial: true,\n        preLayout: false,\n      },\n      behaviors: [\n        'drag-canvas',\n        'zoom-canvas',\n        'drag-element',\n        {\n          key: 'hover-activate',\n          type: 'hover-activate',\n          degree: 5,\n          direction: 'in',\n          inactiveState: 'inactive',\n        },\n      ],\n      transforms: ['place-radial-labels'],\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"径向生态树",en:"Radial Dendrogram"},filename:"radial-dendrogram.js",isNew:!1},{id:"radial-compact-tree",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*9iPNRpKfb3IAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/flare.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      padding: 50,\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          size: 12,\n          labelText: (d) => d.id,\n          labelBackground: true,\n          labelFontSize: 14,\n          labelFontFamily: 'Gill Sans',\n        },\n      },\n      edge: {\n        type: 'cubic-radial',\n        style: {\n          lineWidth: 3,\n        },\n      },\n      layout: {\n        type: 'compact-box',\n        radial: true,\n        direction: 'RL',\n        getVGap: () => 40,\n        getHGap: () => 80,\n        preLayout: false,\n      },\n      behaviors: [\n        'drag-canvas',\n        'zoom-canvas',\n        'drag-element',\n        {\n          key: 'hover-activate',\n          type: 'hover-activate',\n          degree: 5,\n          direction: 'in',\n          inactiveState: 'inactive',\n        },\n      ],\n      transforms: ['place-radial-labels'],\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"径向紧凑树",en:"Radial Compact Tree"},filename:"radial-compact-tree.js",isNew:!1}],icon:"",id:"tree-graph",title:{en:"TreeGraph Scene Case",zh:"树图场景案例"},api:null,childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"layout",title:{zh:"图布局",en:"Graph Layout"},icon:"net",examples:[{demos:[{id:"force",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*sA14SZo9BBMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          ports: [],\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      layout: {\n        type: 'force',\n        linkDistance: 50,\n        clustering: true,\n        nodeClusterBy: 'cluster',\n        clusterNodeStrength: 70,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"Force 聚类",en:"Clustering Force Layout"},filename:"force.js",isNew:!1},{id:"atlas2",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-HgiS6CyuuEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      layout: {\n        type: 'force-atlas2',\n        preventOverlap: true,\n        kr: 20,\n        center: [250, 250],\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n      autoResize: true,\n      zoomRange: [0.1, 5],\n    });\n\n    graph.render();\n  });\n",title:{zh:"Force Atlas 2",en:"Force-Atlas 2 Layout"},filename:"atlas2.js",isNew:!1},{id:"d3-force",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-_sFS5IRGGcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          ports: [],\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      layout: {\n        type: 'd3-force',\n        collide: {\n          strength: 0.5,\n        },\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"D3 力导向布局",en:"D3 Force Layout"},filename:"d3-force.js",isNew:!1},{id:"functional-params",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*78tVRrG7zU8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node0', size: 50 },\n    { id: 'node1', size: 30 },\n    { id: 'node2', size: 30 },\n    { id: 'node3', size: 30 },\n    { id: 'node4', size: 30, isLeaf: true },\n    { id: 'node5', size: 30, isLeaf: true },\n    { id: 'node6', size: 15, isLeaf: true },\n    { id: 'node7', size: 15, isLeaf: true },\n    { id: 'node8', size: 15, isLeaf: true },\n    { id: 'node9', size: 15, isLeaf: true },\n    { id: 'node10', size: 15, isLeaf: true },\n    { id: 'node11', size: 15, isLeaf: true },\n    { id: 'node12', size: 15, isLeaf: true },\n    { id: 'node13', size: 15, isLeaf: true },\n    { id: 'node14', size: 15, isLeaf: true },\n    { id: 'node15', size: 15, isLeaf: true },\n    { id: 'node16', size: 15, isLeaf: true },\n  ],\n  edges: [\n    { source: 'node0', target: 'node1' },\n    { source: 'node0', target: 'node2' },\n    { source: 'node0', target: 'node3' },\n    { source: 'node0', target: 'node4' },\n    { source: 'node0', target: 'node5' },\n    { source: 'node1', target: 'node6' },\n    { source: 'node1', target: 'node7' },\n    { source: 'node2', target: 'node8' },\n    { source: 'node2', target: 'node9' },\n    { source: 'node2', target: 'node10' },\n    { source: 'node2', target: 'node11' },\n    { source: 'node2', target: 'node12' },\n    { source: 'node2', target: 'node13' },\n    { source: 'node3', target: 'node14' },\n    { source: 'node3', target: 'node15' },\n    { source: 'node3', target: 'node16' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      size: (d) => d.size,\n    },\n  },\n  layout: {\n    type: 'd3-force',\n    link: {\n      distance: (d) => {\n        if (d.source.id === 'node0') {\n          return 100;\n        }\n        return 30;\n      },\n      strength: (d) => {\n        if (d.source.id === 'node1' || d.source.id === 'node2' || d.source.id === 'node3') {\n          return 0.7;\n        }\n        return 0.1;\n      },\n    },\n    manyBody: {\n      strength: (d) => {\n        if (d.isLeaf) {\n          return -50;\n        }\n        return -10;\n      },\n    },\n  },\n  behaviors: ['drag-element-force'],\n});\n\ngraph.render();\n",title:{zh:"定制不同节点的参数",en:"Customize Layout Parameters For Different Nodes"},filename:"functional-params.js",isNew:!1},{id:"prevent-overlap",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*J802QozikwsAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const nodes = data.nodes;\n    // randomize the node size\n    nodes.forEach((node) => {\n      node.size = Math.random() * 30 + 5;\n    });\n\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'center',\n      data,\n      node: {\n        style: {\n          size: (d) => d.size,\n          lineWidth: 1,\n        },\n      },\n      layout: {\n        type: 'd3-force',\n        collide: {\n          // Prevent nodes from overlapping by specifying a collision radius for each node.\n          radius: (d) => d.size / 2,\n        },\n      },\n      behaviors: ['drag-element-force'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"力导向布局防止节点重叠",en:"Prevent Overlap in d3-force Layout"},filename:"prevent-overlap.js",isNew:!1},{id:"drag-fixed",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*QlS5T6Wy2TUAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: new Array(10).fill(0).map((_, i) => ({ id: `${i}`, label: `${i}` })),\n  edges: [\n    { source: '0', target: '1' },\n    { source: '0', target: '2' },\n    { source: '0', target: '3' },\n    { source: '0', target: '4' },\n    { source: '0', target: '5' },\n    { source: '0', target: '7' },\n    { source: '0', target: '8' },\n    { source: '0', target: '9' },\n    { source: '2', target: '3' },\n    { source: '4', target: '5' },\n    { source: '4', target: '6' },\n    { source: '5', target: '6' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.label,\n      labelPlacement: 'middle',\n      labelFill: '#fff',\n    },\n  },\n  layout: {\n    type: 'd3-force',\n    link: {\n      distance: 100,\n      strength: 2\n    },\n    collide: {\n      radius: 40,\n    },\n  },\n  behaviors: [\n    {\n      type: 'drag-element-force',\n      fixed: true,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"固定被做拽节点",en:"Drag Fixed Nodes"},filename:"drag-fixed.js",isNew:!1},{id:"bubbles",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*iMR5QqrGp0cAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, NodeEvent } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: '0',\n      label: '0',\n      value: 10,\n      cluster: 'a',\n      description: 'this is node 0, \\nand the value of it is 10',\n    },\n    {\n      id: '1',\n      label: '1',\n      value: 20,\n      cluster: 'b',\n      description: 'this is node 1, \\nand the value of it is 20',\n    },\n    {\n      id: '2',\n      label: '2',\n      value: 5,\n      cluster: 'a',\n      description: 'this is node 2, \\nand the value of it is 5',\n    },\n    {\n      id: '3',\n      label: '3',\n      value: 10,\n      cluster: 'a',\n      description: 'this is node 3, \\nand the value of it is 10',\n    },\n    {\n      id: '4',\n      label: '4',\n      value: 12,\n      cluster: 'c',\n      subCluster: 'sb',\n      description: 'this is node 4, \\nand the value of it is 12',\n    },\n    {\n      id: '5',\n      label: '5',\n      value: 18,\n      cluster: 'c',\n      subCluster: 'sa',\n      description: 'this is node 5, \\nand the value of it is 18',\n    },\n    {\n      id: '6',\n      label: '6',\n      value: 3,\n      cluster: 'c',\n      subCluster: 'sa',\n      description: 'this is node 6, \\nand the value of it is 3',\n    },\n    {\n      id: '7',\n      label: '7',\n      value: 7,\n      cluster: 'b',\n      subCluster: 'sa',\n      description: 'this is node 7, \\nand the value of it is 7',\n    },\n    {\n      id: '8',\n      label: '8',\n      value: 21,\n      cluster: 'd',\n      subCluster: 'sb',\n      description: 'this is node 8, \\nand the value of it is 21',\n    },\n    {\n      id: '9',\n      label: '9',\n      value: 9,\n      cluster: 'd',\n      subCluster: 'sb',\n      description: 'this is node 9, \\nand the value of it is 9',\n    },\n  ],\n  edges: [],\n};\n\nconst oriSize = {};\n\nconst nodes = data.nodes;\n// randomize the node size\nnodes.forEach((node) => {\n  node.size = Math.random() * 30 + 16;\n  oriSize[node.id] = node.size;\n});\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      size: (d) => d.size,\n      labelText: (d) => (d.size === 200 ? d.description : d.id),\n      labelPlacement: 'middle',\n      labelFill: '#fff',\n    },\n    palette: {\n      field: (d) => d.cluster,\n    },\n  },\n  layout: {\n    type: 'd3-force',\n    collide: {\n      radius: (d) => d.size / 2,\n      strength: 0.7,\n    },\n    manyBody: {\n      strength: 30,\n    },\n  },\n  behaviors: ['drag-element-force'],\n});\n\ngraph.on(NodeEvent.CLICK, async (e) => {\n  const nodeId = e.target.id;\n  const data = graph.getNodeData(nodeId);\n  const size = data.size === oriSize[nodeId] ? 200 : oriSize[nodeId];\n  graph.updateNodeData([{ id: nodeId, size }]);\n  await graph.layout();\n});\n\ngraph.render();\n",title:{zh:"力导向气泡图",en:"Force Directed Bubble Chart"},filename:"bubbles.js",isNew:!1},{id:"3d-force",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*4mbSTJLOXkgAAAAAAAAAAAAADmJ7AQ/original",source:"import { CameraSetting, ExtensionCategory, Graph, register } from '@antv/g6';\nimport { D3Force3DLayout, Light, Line3D, ObserveCanvas3D, Sphere, ZoomCanvas3D, renderer } from '@antv/g6-extension-3d';\n\nregister(ExtensionCategory.PLUGIN, '3d-light', Light);\nregister(ExtensionCategory.NODE, 'sphere', Sphere);\nregister(ExtensionCategory.EDGE, 'line3d', Line3D);\nregister(ExtensionCategory.LAYOUT, 'd3-force-3d', D3Force3DLayout);\nregister(ExtensionCategory.PLUGIN, 'camera-setting', CameraSetting);\nregister(ExtensionCategory.BEHAVIOR, 'zoom-canvas-3d', ZoomCanvas3D);\nregister(ExtensionCategory.BEHAVIOR, 'observe-canvas-3d', ObserveCanvas3D);\n\nfetch('https://assets.antv.antgroup.com/g6/d3-force-3d.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      renderer,\n      data,\n      layout: {\n        type: 'd3-force-3d',\n      },\n      node: {\n        type: 'sphere',\n        style: {\n          materialType: 'phong',\n        },\n        palette: {\n          color: 'tableau',\n          type: 'group',\n          field: 'group',\n        },\n      },\n      edge: {\n        type: 'line3d',\n      },\n      behaviors: ['observe-canvas-3d', 'zoom-canvas-3d'],\n      plugins: [\n        {\n          type: '3d-light',\n          directional: {\n            direction: [0, 0, 1],\n          },\n        },\n      ],\n    });\n\n    graph.render();\n  });\n",title:{zh:"3D 力导向布局",en:"3D Force Layout"},filename:"3d-force.js",isNew:!1},{id:"mesh",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ykD5QqSEgeEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfunction getData(size = 10) {\n  const nodes = Array.from({ length: size * size }, (_, i) => ({ id: `${i}` }));\n  const edges = [];\n  for (let y = 0; y < size; ++y) {\n    for (let x = 0; x < size; ++x) {\n      if (y > 0) edges.push({ source: `${(y - 1) * size + x}`, target: `${y * size + x}` });\n      if (x > 0) edges.push({ source: `${y * size + (x - 1)}`, target: `${y * size + x}` });\n    }\n  }\n  return { nodes, edges };\n}\n\nconst graph = new Graph({\n  data: getData(),\n  layout: {\n    type: 'd3-force',\n    manyBody: {\n      strength: -30,\n    },\n    link: {\n      strength: 1,\n      distance: 20,\n      iterations: 10,\n    },\n  },\n  node: {\n    style: {\n      size: 10,\n      fill: '#000',\n    },\n  },\n  edge: {\n    style: {\n      stroke: '#000',\n    },\n  },\n  behaviors: [{ type: 'drag-element-force' }, 'zoom-canvas'],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  gui.add({ msg: 'Try to drag nodes' }, 'msg').name('Tips').disable();\n});\n",title:{zh:"网格效果",en:"Mesh Layout"},filename:"mesh.js",isNew:!1},{id:"collision",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*yzv_To2Wm_EAAAAAAAAAAAAADmJ7AQ/original",source:"import { BaseBehavior, ExtensionCategory, Graph, invokeLayoutMethod, register } from '@antv/g6';\n\nfunction getData(width, size = 200) {\n  const k = width / 200;\n  const r = randomUniform(k * 2, k * 8);\n  const n = 4;\n  return {\n    nodes: Array.from({ length: size }, (_, i) => ({ id: `${i}`, data: { r: r(), group: i && (i % n) + 1 } })),\n    edges: [],\n  };\n}\n\nfunction randomUniform(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) (max = min), (min = 0);\n  else max -= min;\n  return function () {\n    return Math.random() * max + min;\n  };\n}\n\nclass CollisionElement extends BaseBehavior {\n  constructor(context) {\n    super(context, {});\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.context.graph.on('pointermove', this.onPointerMove);\n  }\n\n  onPointerMove(event) {\n    const pos = this.context.graph.getCanvasByClient([event.client.x, event.client.y]);\n    const layoutInstance = this.context.layout\n      ?.getLayoutInstance()\n      .find((layout) => ['d3-force', 'd3-force-3d'].includes(layout?.id));\n\n    if (layoutInstance) {\n      invokeLayoutMethod(layoutInstance, 'setFixedPosition', '0', [...pos]);\n    }\n  }\n}\n\nregister(ExtensionCategory.BEHAVIOR, 'collision-element', CollisionElement);\n\nconst container = document.getElementById('container');\nconst width = container.scrollWidth;\n\nconst graph = new Graph({\n  container,\n  data: getData(width),\n  layout: {\n    type: 'd3-force',\n    alphaTarget: 0.3,\n    velocityDecay: 0.1,\n    x: {\n      strength: 0.01,\n    },\n    y: {\n      strength: 0.01,\n    },\n    collide: {\n      radius: (d) => d.data.r,\n      iterations: 3,\n    },\n    manyBody: {\n      strength: (d, i) => (i ? 0 : (-width * 2) / 3),\n    },\n    link: false,\n  },\n  node: {\n    style: {\n      size: (d) => (d.id === '0' ? 0 : d.data.r * 2),\n    },\n    palette: {\n      color: 'tableau',\n      type: 'group',\n      field: (d) => d.data.group,\n    },\n  },\n  behaviors: ['collision-element'],\n});\n\ngraph.render();\n",title:{zh:"弹性碰撞效果",en:"Collision Layout"},filename:"collision.js",isNew:!1}],icon:"",id:"force-directed",title:{en:"Force-directed Layout",zh:"力导向图布局"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*pIpcQ6yX7P0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: new Array(16).fill(0).map((_, i) => ({ id: `${i}` })),\n  edges: new Array(15).fill(0).map((_, i) => ({ source: `${i}`, target: `${i + 1}` })),\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelFill: '#fff',\n      labelPlacement: 'center',\n      labelText: (d) => d.id,\n    },\n  },\n  layout: {\n    type: 'snake',\n    padding: 50,\n  },\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"基本 Snake 布局",en:"Basic Snake Layout"},filename:"basic.js",isNew:!1},{id:"gutter",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*g-5JSoayUzAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: new Array(16).fill(0).map((_, i) => ({ id: `${i}` })),\n  edges: new Array(15).fill(0).map((_, i) => ({ source: `${i}`, target: `${i + 1}` })),\n};\n\nconst graph = new Graph({\n  container: 'container',\n  autoFit: 'center',\n  data,\n  node: {\n    style: {\n      labelFill: '#fff',\n      labelPlacement: 'center',\n      labelText: (d) => d.id,\n    },\n  },\n  layout: {\n    type: 'snake',\n    cols: 3,\n    rowGap: 80,\n    colGap: 120,\n  },\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"自定义间距的 Snake 布局",en:"Snake Layout with Gutter"},filename:"gutter.js",isNew:!1}],icon:"",id:"snake",title:{en:"Snake Layout",zh:"Snake 蛇形布局"},api:null,childrenKey:"demos",order:0},{demos:[{id:"antv-dagre",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-PyRTYpI4nwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '0' },\n    { id: '1' },\n    { id: '2' },\n    { id: '3' },\n    { id: '4' },\n    { id: '5' },\n    { id: '6' },\n    { id: '7' },\n    { id: '8' },\n    { id: '9' },\n  ],\n  edges: [\n    { source: '0', target: '1' },\n    { source: '0', target: '2' },\n    { source: '1', target: '4' },\n    { source: '0', target: '3' },\n    { source: '3', target: '4' },\n    { source: '4', target: '5' },\n    { source: '4', target: '6' },\n    { source: '5', target: '7' },\n    { source: '5', target: '8' },\n    { source: '8', target: '9' },\n    { source: '2', target: '9' },\n    { source: '3', target: '9' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  autoFit: 'view',\n  data,\n  layout: {\n    type: 'antv-dagre',\n    nodeSize: [60, 30],\n    nodesep: 60,\n    ranksep: 40,\n    controlPoints: true,\n  },\n  node: {\n    type: 'rect',\n    style: {\n      size: [60, 30],\n      radius: 8,\n      labelText: (d) => d.id,\n      labelBackground: true,\n    }\n  },\n  edge: {\n    type: 'polyline',\n  },\n  behaviors: ['drag-element', 'drag-canvas', 'zoom-canvas'],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = { layout: 'default' };\n  const layouts = {\n    default: { type: 'antv-dagre', nodesep: 100, ranksep: 70, controlPoints: true },\n    LR: { type: 'antv-dagre', rankdir: 'LR', align: 'DL', nodesep: 50, ranksep: 70, controlPoints: true },\n    'LR&UL': { type: 'antv-dagre', rankdir: 'LR', align: 'UL', controlPoints: true, nodesep: 50, ranksep: 70 },\n  };\n\n  gui.add(config, 'layout', Object.keys(layouts)).onChange(async (layout) => {\n    graph.setLayout(layouts[layout]);\n    await graph.layout();\n    graph.fitCenter();\n  });\n});\n",title:{zh:"Dagre 流程图",en:"Dagre Layout"},filename:"antv-dagre.js",isNew:!1},{id:"antv-dagre-combo",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*gQGOTYlN6BMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/dagre-combo.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'center',\n      data,\n      node: {\n        type: 'rect',\n        style: {\n          size: [60, 30],\n          radius: 8,\n          labelText: (d) => d.id,\n          labelBackground: true,\n          ports: [{ placement: 'top' }, { placement: 'bottom' }],\n        },\n        palette: {\n          field: (d) => d.combo,\n        },\n      },\n      edge: {\n        type: 'cubic-vertical',\n        style: {\n          endArrow: true,\n        },\n      },\n      combo: {\n        type: 'rect',\n        style: {\n          radius: 8,\n          labelText: (d) => d.id,\n        },\n      },\n      layout: {\n        type: 'antv-dagre',\n        ranksep: 50,\n        nodesep: 5,\n        sortByCombo: true,\n      },\n      behaviors: ['drag-element', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"带有 Combo 的流程图",en:"Dagre with Combos"},filename:"antv-dagre-combo.js",isNew:!1},{id:"dagre",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*v5mBSopYr_wAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'kspacey', data: { label: 'Kevin Spacey', width: 144, height: 100 } },\n    { id: 'swilliams', data: { label: 'Saul Williams', width: 160, height: 100 } },\n    { id: 'bpitt', data: { label: 'Brad Pitt', width: 108, height: 100 } },\n    { id: 'hford', data: { label: 'Harrison Ford', width: 168, height: 100 } },\n    { id: 'lwilson', data: { label: 'Luke Wilson', width: 144, height: 100 } },\n    { id: 'kbacon', data: { label: 'Kevin Bacon', width: 121, height: 100 } },\n  ],\n  edges: [\n    { id: 'kspacey->swilliams', source: 'kspacey', target: 'swilliams' },\n    { id: 'swilliams->kbacon', source: 'swilliams', target: 'kbacon' },\n    { id: 'bpitt->kbacon', source: 'bpitt', target: 'kbacon' },\n    { id: 'hford->lwilson', source: 'hford', target: 'lwilson' },\n    { id: 'lwilson->kbacon', source: 'lwilson', target: 'kbacon' },\n  ],\n};\n\nconst graph = new Graph({\n  autoFit: 'center',\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      size: (d) => [d.data.width, d.data.height],\n      radius: 10,\n      iconText: (d) => d.data.label,\n      iconFontSize: 14,\n    },\n    palette: {\n      type: 'group',\n      field: 'label',\n    },\n  },\n  edge: {\n    type: 'polyline',\n    style: {\n      router: {\n        type: 'orth',\n      },\n    },\n  },\n  layout: {\n    type: 'dagre',\n  },\n});\n\ngraph.render();\n",title:{zh:"Dagre.js 布局",en:"Dagre.js Layout"},filename:"dagre.js",isNew:!1}],icon:"",id:"dagre",title:{en:"Dagre Layout",zh:"Dagre 布局"},api:null,childrenKey:"demos",order:1},{demos:[{id:"combo-combined",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zPAzSZ3XxpUAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/combo.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'combo-combined',\n        comboPadding: 2,\n      },\n      node: {\n        style: {\n          size: 20,\n          labelText: (d) => d.id,\n        },\n        palette: {\n          type: 'group',\n          field: (d) => d.combo,\n        },\n      },\n      edge: {\n        style: (model) => {\n          const { size, color } = model.data;\n          return {\n            stroke: color || '#99ADD1',\n            lineWidth: size || 1,\n          };\n        },\n      },\n      behaviors: ['drag-element', 'drag-canvas', 'zoom-canvas'],\n      autoFit: 'view',\n    });\n\n    graph.render();\n  });\n",title:{zh:"ComboCombined 组合布局",en:"Combo Combined Layout"},filename:"combo-combined.js",isNew:!1}],icon:"",id:"combo-layout",title:{en:"Combo Layout",zh:"组合布局"},api:null,childrenKey:"demos",order:2},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Hu02Ro6UCegAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\n/**\n * If the node is a leaf node\n * @param {*} d - node data\n * @returns {boolean} - whether the node is a leaf node\n */\nfunction isLeafNode(d) {\n  return !d.children || d.children.length === 0;\n}\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          labelPlacement: (d) => (isLeafNode(d) ? 'right' : 'left'),\n          labelBackground: true,\n          ports: [{ placement: 'right' }, { placement: 'left' }],\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'compact-box',\n        direction: 'LR',\n        getHeight: function getHeight() {\n          return 32;\n        },\n        getWidth: function getWidth() {\n          return 32;\n        },\n        getVGap: function getVGap() {\n          return 10;\n        },\n        getHGap: function getHGap() {\n          return 100;\n        },\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"紧凑树",en:"CompactBox Layout"},filename:"basic.js",isNew:!1},{id:"vertical",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YFO6Rb1hM24AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\n/**\n * If the node is a leaf node\n * @param {*} d - node data\n * @returns {boolean} - whether the node is a leaf node\n */\nfunction isLeafNode(d) {\n  return !d.children || d.children.length === 0;\n}\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n      node: {\n        style: (d) => {\n          const style = {\n            labelText: d.id,\n            labelPlacement: 'right',\n            labelOffsetX: 2,\n            labelBackground: true,\n            ports: [{ placement: 'top' }, { placement: 'bottom' }],\n          };\n          if (isLeafNode(d)) {\n            Object.assign(style, {\n              labelTransform: [\n                ['rotate', 90],\n                ['translate', 18],\n              ],\n              labelBaseline: 'center',\n              labelTextAlign: 'left',\n            });\n          }\n          return style;\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'cubic-vertical',\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'compact-box',\n        direction: 'TB',\n        getHeight: function getHeight() {\n          return 16;\n        },\n        getWidth: function getWidth() {\n          return 16;\n        },\n        getVGap: function getVGap() {\n          return 80;\n        },\n        getHGap: function getHGap() {\n          return 20;\n        },\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"从上向下布局",en:"Top to Bottom CompactBox"},filename:"vertical.js",isNew:!1},{id:"radial",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*nwPmQqzJprwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelBackground: true,\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'compact-box',\n        radial: true,\n        direction: 'RL',\n        getId: function getId(d) {\n          return d.id;\n        },\n        getHeight: () => {\n          return 26;\n        },\n        getWidth: () => {\n          return 26;\n        },\n        getVGap: () => {\n          return 20;\n        },\n        getHGap: () => {\n          return 40;\n        },\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"径向布局",en:"Radial Layout"},filename:"radial.js",isNew:!1}],icon:"",id:"compact-box",title:{en:"CompactBox",zh:"CompactBox 紧凑树"},api:null,childrenKey:"demos",order:3},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*qJi5Q4qg6W8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelFill: '#fff',\n          labelPlacement: 'center'\n        }\n      },\n      layout: {\n        type: 'circular',\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 Circular 布局",en:"Basic Circular Layout"},filename:"basic.js",isNew:!1},{id:"degree",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*eWecT7lzB0kAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelFill: '#fff',\n          labelPlacement: 'center'\n        }\n      },\n      layout: {\n        type: 'circular',\n        ordering: 'degree',\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"按照节点度数排序",en:"Degree Ordered"},filename:"degree.js",isNew:!1},{id:"spiral",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*x4HvSr25sHkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'center',\n      data,\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelFill: '#fff',\n          labelPlacement: 'center'\n        }\n      },\n      layout: {\n        type: 'circular',\n        startRadius: 10,\n        endRadius: 300,\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"螺旋线布局",en:"Spiral Layout"},filename:"spiral.js",isNew:!1},{id:"division",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*9wz2RJH1lxkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'center',\n      data,\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelFill: '#fff',\n          labelPlacement: 'center'\n        }\n      },\n      layout: {\n        type: 'circular',\n        divisions: 5,\n        radius: 200,\n        startAngle: Math.PI / 4,\n        endAngle: Math.PI,\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"分割环形布局",en:"Divided Circular Layout"},filename:"division.js",isNew:!1}],icon:"",id:"circular",title:{en:"Circular Layout",zh:"Circular 环形布局"},api:null,childrenKey:"demos",order:4},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*7tDPSa-LHbAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\n/**\n * If the node is a leaf node\n * @param {*} d - node data\n * @returns {boolean} - whether the node is a leaf node\n */\nfunction isLeafNode(d) {\n  return !d.children || d.children.length === 0;\n}\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          labelPlacement: (d) => (isLeafNode(d) ? 'right' : 'left'),\n          labelBackground: true,\n          ports: [{ placement: 'right' }, { placement: 'left' }],\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'dendrogram',\n        direction: 'LR', // H / V / LR / RL / TB / BT\n        nodeSep: 36,\n        rankSep: 250,\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"生态树",en:"Dendrogram Layout"},filename:"basic.js",isNew:!1},{id:"vertical",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*mp3BRbyBzCEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\n/**\n * If the node is a leaf node\n * @param {*} d - node data\n * @returns {boolean} - whether the node is a leaf node\n */\nfunction isLeafNode(d) {\n  return !d.children || d.children.length === 0;\n}\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n      node: {\n        style: (d) => {\n          const style = {\n            labelText: d.id,\n            labelPlacement: 'right',\n            labelOffsetX: 2,\n            labelBackground: true,\n            ports: [{ placement: 'top' }, { placement: 'bottom' }],\n          };\n          if (isLeafNode(d)) {\n            Object.assign(style, {\n              labelTransform: [\n                ['rotate', 90],\n                ['translate', 18],\n              ],\n              labelBaseline: 'center',\n              labelTextAlign: 'left',\n            });\n          }\n          return style;\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'cubic-vertical',\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'dendrogram',\n        direction: 'TB', // H / V / LR / RL / TB / BT\n        nodeSep: 50,\n        rankSep: 120,\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"垂直布局",en:"Vertical Layout"},filename:"vertical.js",isNew:!1},{id:"radial",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*nBIIR5yhTlQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelBackground: true,\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'dendrogram',\n        radial: true,\n        nodeSep: 40,\n        rankSep: 140,\n      },\n    });\n\n    graph.render();\n  });\n",title:{zh:"径向布局",en:"Radial Layout"},filename:"radial.js",isNew:!1}],icon:"",id:"dendrogram",title:{en:"Dendrogram",zh:"Dendrogram 生态树"},api:null,childrenKey:"demos",order:4},{demos:[{id:"auto-side",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*im2UR5hT3WcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nconst getNodeSide = (graph, datum) => {\n  const parentData = graph.getParentData(datum.id, 'tree');\n  if (!parentData) return 'center';\n  return datum.style.x > parentData.style.x ? 'right' : 'left';\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelBackground: true,\n          labelPlacement: function (d) {\n            const side = getNodeSide(this, d);\n            return side === 'center' ? 'right' : side\n          },\n          ports: [{ placement: 'right' }, { placement: 'left' }],\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'H',\n        getHeight: () => 32,\n        getWidth: () => 32,\n        getVGap: () => 4,\n        getHGap: () => 64,\n      },\n      behaviors: ['collapse-expand', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点自动分布",en:"Auto Mindmap Layout"},filename:"auto-side.js",isNew:!1},{id:"right-side",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*p1cYSJqxbogAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelPlacement: 'right',\n          labelBackground: true,\n          ports: [{ placement: 'right' }, { placement: 'left' }],\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'LR',\n        getHeight: () => 32,\n        getWidth: () => 32,\n        getVGap: () => 4,\n        getHGap: () => 100,\n      },\n      behaviors: ['collapse-expand', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点右侧分布",en:"Right Side Mindmap Layout"},filename:"right-side.js",isNew:!1},{id:"left-side",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*iy_tQ49Nn1EAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelPlacement: 'left',\n          labelBackground: true,\n          ports: [{ placement: 'right' }, { placement: 'left' }],\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'RL',\n        getHeight: () => 32,\n        getWidth: () => 32,\n        getVGap: () => 4,\n        getHGap: () => 100,\n      },\n      behaviors: ['collapse-expand', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点左侧分布",en:"Left Side Mindmap Layout"},filename:"left-side.js",isNew:!1},{id:"custom-side",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*m9p-TpQGI-YAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nconst getNodeSide = (graph, datum) => {\n  const parentData = graph.getParentData(datum.id, 'tree');\n  if (!parentData) return 'center';\n  return datum.style.x > parentData.style.x ? 'right' : 'left';\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: treeToGraphData(data),\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          labelBackground: true,\n          labelPlacement: function (d) {\n            const side = getNodeSide(this, d);\n            return side === 'center' ? 'right' : side;\n          },\n          ports: [{ placement: 'right' }, { placement: 'left' }],\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'cubic-horizontal',\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'mindmap',\n        direction: 'H',\n        preLayout: false,\n        getHeight: () => 32,\n        getWidth: () => 32,\n        getVGap: () => 4,\n        getHGap: () => 64,\n        getSide: (d) => {\n          if (d.id === 'Classification') {\n            return 'left';\n          }\n          return 'right';\n        },\n      },\n      behaviors: ['collapse-expand', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"自定义子节点分布",en:"Custom Mindmap Layout"},filename:"custom-side.js",isNew:!1}],icon:"",id:"mindmap",title:{en:"Mindmap",zh:"Mindmap 脑图树"},api:null,childrenKey:"demos",order:5},{demos:[{id:"auto-side",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Kc63QoxgLNYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nconst getNodeSide = (graph, datum) => {\n  const parentData = graph.getParentData(datum.id, 'tree');\n  if (!parentData) return 'center';\n  return datum.style.x > parentData.style.x ? 'right' : 'left';\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data: treeToGraphData(data),\n      autoFit: 'view',\n      node: {\n        style: function (d) {\n          const side = getNodeSide(this, d);\n          return {\n            labelText: d.id,\n            labelPlacement: side === 'center' ? 'bottom' : side,\n            labelBackground: true,\n            ports:\n              side === 'center'\n                ? [{ placement: 'bottom' }]\n                : side === 'right'\n                  ? [{ placement: 'bottom' }, { placement: 'left' }]\n                  : [{ placement: 'bottom' }, { placement: 'right' }],\n          };\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'polyline',\n        style: {\n          radius: 4,\n          router: {\n            type: 'orth',\n          },\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'indented',\n        direction: 'H',\n        indent: 80,\n        preLayout: false,\n        getHeight: () => 16,\n        getWidth: () => 32,\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点自动分布",en:"Two Side Indented Layout"},filename:"auto-side.js",isNew:!1},{id:"right-side",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*3PioQ4TAMx8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data: treeToGraphData(data),\n      autoFit: 'view',\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelPlacement: 'right',\n          labelBackground: true,\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'polyline',\n        style: {\n          radius: 4,\n          router: {\n            type: 'orth'\n          }\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'indented',\n        direction: 'LR',\n        indent: 80,\n        getHeight: () => 16,\n        getWidth: () => 32,\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点右侧分布",en:"Right Side Indented Layout"},filename:"right-side.js",isNew:!1},{id:"left-side",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*o6uzQ5nmXJkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data: treeToGraphData(data),\n      autoFit: 'view',\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          labelPlacement: 'left',\n          labelBackground: true,\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'polyline',\n        style: {\n          radius: 4,\n          router: {\n            type: 'orth',\n          },\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'indented',\n        direction: 'RL',\n        indent: 80,\n        getHeight: () => 16,\n        getWidth: () => 32,\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"子节点左侧分布",en:"Left Side Indented Layout"},filename:"left-side.js",isNew:!1},{id:"custom-side",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Kc63QoxgLNYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nconst getNodeSide = (graph, datum) => {\n  const parentData = graph.getParentData(datum.id, 'tree');\n  if (!parentData) return 'center';\n  return datum.style.x > parentData.style.x ? 'right' : 'left';\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data: treeToGraphData(data),\n      autoFit: 'view',\n      node: {\n        style: function (d) {\n          const side = getNodeSide(this, d);\n          return {\n            labelText: d.id,\n            labelPlacement: side === 'center' ? 'bottom' : side,\n            labelBackground: true,\n            ports:\n              side === 'center'\n                ? [{ placement: 'bottom' }]\n                : side === 'right'\n                  ? [{ placement: 'bottom' }, { placement: 'left' }]\n                  : [{ placement: 'bottom' }, { placement: 'right' }],\n          };\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'polyline',\n        style: {\n          radius: 4,\n          router: {\n            type: 'orth',\n          },\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'indented',\n        direction: 'H',\n        indent: 80,\n        preLayout: false,\n        getHeight: () => 16,\n        getWidth: () => 32,\n        getSide: (d) => {\n          if (d.id === 'Regression' || d.id === 'Classification') return 'left';\n          return 'right';\n        },\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"自定义子节点分布",en:"Custom Side Indented Layout"},filename:"custom-side.js",isNew:!1},{id:"no-drop-cap",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*bC-pRrO7srwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/algorithm-category.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data: treeToGraphData(data),\n      autoFit: 'view',\n      node: {\n        style: {\n          labelText: d => d.id,\n          labelPlacement: 'right',\n          labelBackground: true,\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      edge: {\n        type: 'polyline',\n        style: {\n          radius: 4,\n          router: {\n            type: 'orth'\n          }\n        },\n        animation: {\n          enter: false,\n        },\n      },\n      layout: {\n        type: 'indented',\n        direction: 'LR',\n        indent: 80,\n        getHeight: () => 16,\n        getWidth: () => 32,\n        dropCap: false\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'collapse-expand'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"首子节点不换行",en:"No Drop Cap Indented Layout"},filename:"no-drop-cap.js",isNew:!1}],icon:"",id:"indented",title:{en:"Indented",zh:"Indented 缩进树"},api:null,childrenKey:"demos",order:6},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*d3P-RK4YCDYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/radial.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'center',\n      layout: {\n        type: 'radial',\n        nodeSize: 32,\n        unitRadius: 100,\n        linkDistance: 200,\n      },\n      node: {\n        style: {\n          labelFill: '#fff',\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 Radial 辐射布局",en:"Basic Radial Layout"},filename:"basic.js",isNew:!1},{id:"strict-prevent-overlap",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*vpXjTIFKy1QAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/radial.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'center',\n      layout: {\n        type: 'radial',\n        nodeSize: 32,\n        unitRadius: 90,\n        linkDistance: 200,\n        preventOverlap: true,\n        maxPreventOverlapIteration: 100,\n      },\n      node: {\n        style: {\n          labelFill: '#fff',\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"防止节点重叠的严格辐射布局",en:"Strict Radial Layout with Overlap Prevention"},filename:"strict-prevent-overlap.js",isNew:!1},{id:"non-strict-prevent-overlap",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*4I4VRa6Kyo8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/radial.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'center',\n      layout: {\n        type: 'radial',\n        nodeSize: 32,\n        unitRadius: 90,\n        linkDistance: 200,\n        preventOverlap: true,\n        maxPreventOverlapIteration: 100,\n        strictRadial: false,\n      },\n      node: {\n        style: {\n          labelFill: '#fff',\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"防止节点重叠的非严格辐射布局",en:"Non-strict Radial Layout with Overlap Prevention"},filename:"non-strict-prevent-overlap.js",isNew:!1},{id:"cluster-sort",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*_GJ_RL1Qi-oAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '0', data: { type: 'a' } },\n    { id: '1', data: { type: 'a' } },\n    { id: '2', data: { type: 'a' } },\n    { id: '3', data: { type: 'a' } },\n    { id: '4', data: { type: 'c' } },\n    { id: '5', data: { type: 'a' } },\n    { id: '6', data: { type: 'b' } },\n    { id: '7', data: { type: 'b' } },\n    { id: '8', data: { type: 'c' } },\n    { id: '9', data: { type: 'd' } },\n    { id: '10', data: { type: 'd' } },\n    { id: '11', data: { type: 'b' } },\n    { id: '12', data: { type: 'c' } },\n    { id: '13', data: { type: 'b' } },\n    { id: '14', data: { type: 'd' } },\n    { id: '15', data: { type: 'd' } },\n    { id: '16', data: { type: 'b' } },\n    { id: '17', data: { type: 'c' } },\n    { id: '18', data: { type: 'c' } },\n    { id: '19', data: { type: 'b' } },\n    { id: '20', data: { type: 'b' } },\n    { id: '21', data: { type: 'd' } },\n    { id: '22', data: { type: 'd' } },\n    { id: '23', data: { type: 'd' } },\n    { id: '24', data: { type: 'a' } },\n    { id: '25', data: { type: 'a' } },\n    { id: '26', data: { type: 'b' } },\n    { id: '27', data: { type: 'b' } },\n    { id: '28', data: { type: 'd' } },\n    { id: '29', data: { type: 'c' } },\n    { id: '30', data: { type: 'c' } },\n    { id: '31', data: { type: 'b' } },\n    { id: '32', data: { type: 'b' } },\n    { id: '33', data: { type: 'a' } },\n  ],\n  edges: [\n    { source: '0', target: '1' },\n    { source: '0', target: '2' },\n    { source: '0', target: '3' },\n    { source: '0', target: '4' },\n    { source: '0', target: '5' },\n    { source: '0', target: '7' },\n    { source: '0', target: '8' },\n    { source: '0', target: '9' },\n    { source: '0', target: '10' },\n    { source: '0', target: '11' },\n    { source: '0', target: '13' },\n    { source: '0', target: '14' },\n    { source: '0', target: '15' },\n    { source: '0', target: '16' },\n    { source: '2', target: '3' },\n    { source: '4', target: '5' },\n    { source: '4', target: '6' },\n    { source: '5', target: '6' },\n    { source: '7', target: '13' },\n    { source: '8', target: '14' },\n    { source: '9', target: '10' },\n    { source: '10', target: '22' },\n    { source: '10', target: '14' },\n    { source: '10', target: '12' },\n    { source: '10', target: '24' },\n    { source: '10', target: '21' },\n    { source: '10', target: '20' },\n    { source: '11', target: '24' },\n    { source: '11', target: '22' },\n    { source: '11', target: '14' },\n    { source: '12', target: '13' },\n    { source: '16', target: '17' },\n    { source: '16', target: '18' },\n    { source: '16', target: '21' },\n    { source: '16', target: '22' },\n    { source: '17', target: '18' },\n    { source: '17', target: '20' },\n    { source: '18', target: '19' },\n    { source: '19', target: '20' },\n    { source: '19', target: '33' },\n    { source: '19', target: '22' },\n    { source: '19', target: '23' },\n    { source: '20', target: '21' },\n    { source: '21', target: '22' },\n    { source: '22', target: '24' },\n    { source: '22', target: '25' },\n    { source: '22', target: '26' },\n    { source: '22', target: '23' },\n    { source: '22', target: '28' },\n    { source: '22', target: '30' },\n    { source: '22', target: '31' },\n    { source: '22', target: '32' },\n    { source: '22', target: '33' },\n    { source: '23', target: '28' },\n    { source: '23', target: '27' },\n    { source: '23', target: '29' },\n    { source: '23', target: '30' },\n    { source: '23', target: '31' },\n    { source: '23', target: '33' },\n    { source: '32', target: '33' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  autoFit: 'center',\n  data,\n  layout: {\n    type: 'radial',\n    nodeSize: 32,\n    unitRadius: 90,\n    linkDistance: 200,\n    preventOverlap: true,\n    sortBy: 'type',\n    sortStrength: 50,\n  },\n  node: {\n    style: {\n      labelFill: '#fff',\n      labelPlacement: 'center',\n      labelText: (d) => d.id,\n    },\n    palette: {\n      type: 'group',\n      field: 'type',\n    },\n  },\n  edge: {\n    style: {\n      endArrow: true,\n    },\n  },\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"排序聚类",en:"Cluster Sort"},filename:"cluster-sort.js",isNew:!1}],icon:"",id:"radial",title:{en:"Radial Layout",zh:"Radial 辐射布局"},api:null,childrenKey:"demos",order:7},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*KXunQKOLCSAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/8dacf27e-e1bc-4522-b6d3-4b6d9b9ed7df.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      edge:{\n        type:'line'\n      },\n      layout: {\n        type: 'concentric',\n        nodeSize: 32,\n        maxLevelDiff: 0.5,\n        sortBy: 'degree',\n        preventOverlap: true,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"Concentric 同心圆布局",en:"Concentric Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"concentric",title:{en:"Concentric Layout",zh:"Concentric 同心圆布局"},api:null,childrenKey:"demos",order:10},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*CT60SrCib9QAAAAAAAAAAAAAemJ7AQ/original",source:"import { Graph, treeToGraphData } from '@antv/g6';\n\nconst data = {\n  id: 'Quality',\n  children: [\n    {\n      id: 'Machine',\n      children: [{ id: 'Mill' }, { id: 'Mixer' }, { id: 'Metal Lathe', children: [{ id: 'Milling' }] }],\n    },\n    { id: 'Method' },\n    {\n      id: 'Material',\n      children: [\n        {\n          id: 'Masonite',\n          children: [\n            { id: 'spearMint' },\n            { id: 'pepperMint', children: [{ id: 'test3' }] },\n            { id: 'test1', children: [{ id: 'test4' }] },\n          ],\n        },\n        {\n          id: 'Marscapone',\n          children: [{ id: 'Malty' }, { id: 'Minty' }],\n        },\n        { id: 'Meat', children: [{ id: 'Mutton' }] },\n      ],\n    },\n    {\n      id: 'Man Power',\n      children: [\n        { id: 'Manager' },\n        { id: \"Master's Student\" },\n        { id: 'Magician' },\n        { id: 'Miner' },\n        { id: 'Magister', children: [{ id: 'Malpractice' }] },\n        {\n          id: 'Massage Artist',\n          children: [{ id: 'Masseur' }, { id: 'Masseuse' }],\n        },\n      ],\n    },\n    {\n      id: 'Measurement',\n      children: [{ id: 'Malleability' }],\n    },\n    {\n      id: 'Milieu',\n      children: [{ id: 'Marine' }],\n    },\n  ],\n};\n\nexport const layoutFishbone = async (context) => {\n  const graph = new Graph({\n    ...context,\n    container: 'container',\n    autoFit: 'view',\n    data: treeToGraphData(data),\n    node: {\n      type: 'rect',\n      style: {\n        size: [32, 32],\n        // fill: () => randomColor(),\n        label: false,\n        labelFill: '#262626',\n        labelFontFamily: 'Gill Sans',\n        labelMaxLines: 2,\n        labelMaxWidth: '100%',\n        labelPlacement: 'center',\n        labelText: (d) => d.id,\n        labelWordWrap: true,\n      },\n    },\n    edge: {\n      type: 'polyline',\n      style: {\n        lineWidth: 3,\n      },\n    },\n    layout: {\n      type: 'fishbone',\n      vGap: 48,\n      hGap: 48,\n      direction: 'RL',\n    },\n    behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n    animation: false,\n  });\n\n  await graph.render();\n\n  layoutFishbone.form = (panel) => {\n    const config = {\n      type: 'fishbone',\n      direction: 'RL',\n    };\n\n    return [\n      panel\n        .add(config, 'direction', ['LR', 'RL'])\n        .name('Direction')\n        .onChange((value) => {\n          graph.setLayout((prev) => ({ ...prev, direction: value }));\n          graph.render();\n        }),\n    ];\n  };\n\n  return graph;\n};\n\nlayoutFishbone();",title:{zh:"Fishbone 鱼骨布局",en:"Fishbone Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"fishbone",title:{en:"Fishbone Layout",zh:"Fishbone 鱼骨布局"},api:null,childrenKey:"demos",order:11},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*8RYVTrENVCcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          labelText: (d) => d.id,\n          labelBackground: true,\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      layout: {\n        type: 'grid',\n        sortBy: 'id',\n        nodeSize: 32,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      gui.add({ sortBy: 'id' }, 'sortBy', ['id', 'cluster']).onChange((type) => {\n        graph.setLayout({\n          type: 'grid',\n          sortBy: type,\n        });\n        graph.layout();\n      });\n    });\n  });\n",title:{zh:"Grid 网格布局",en:"Grid Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"grid",title:{en:"Grid",zh:"Grid 网格布局"},api:null,childrenKey:"demos",order:11},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*myM6T6R_d34AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      padding: 20,\n      autoFit: 'view',\n      data,\n      node: {\n        style: {\n          labelFill: '#fff',\n          labelText: (d) => d.id,\n          labelPlacement: 'center',\n        },\n      },\n      layout: {\n        type: 'mds',\n        nodeSize: 32,\n        linkDistance: 100,\n      },\n      behaviors: ['drag-element', 'drag-canvas', 'zoom-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 MDS 布局",en:"Basic MDS Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"mds",title:{en:"MDS Layout",zh:"MDS 布局"},api:null,childrenKey:"demos",order:12},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1AvnTorIogUAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'fruchterman',\n        gravity: 5,\n        speed: 5,\n        animation: true,\n      },\n      node: {\n        style: {\n          labelFill: '#fff',\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"基本 Fruchterman 布局",en:"Basic Fruchterman Layout"},filename:"basic.js",isNew:!1},{id:"cluster",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1i4ZQaI6Iu4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'fruchterman',\n        gravity: 5,\n        speed: 5,\n        clustering: true,\n        nodeClusterBy: 'cluster',\n        clusterGravity: 16\n      },\n      node: {\n        style: {\n          labelFill: '#fff',\n          labelPlacement: 'center',\n          labelText: (d) => d.id,\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      edge: {\n        style: {\n          endArrow: true,\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"Fruchterman 聚类布局",en:"Fruchterman Cluster Layout"},filename:"cluster.js",isNew:!1},{id:"run-in-web-worker",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*3gn9TZ3oUoIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, GraphEvent } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/cluster.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'fruchterman',\n        speed: 20,\n        gravity: 10,\n        maxIteration: 10000,\n        workerEnabled: true,\n      },\n      node: {\n        style: {\n          size: 20,\n          labelText: (d) => d.id,\n          labelPlacement: 'center',\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      edge: {\n        style: {\n          stroke: '#ddd',\n        },\n      },\n      behaviors: ['drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      const msg = gui.add({ msg: 'Running...' }, 'msg').name('Tips').disable();\n      graph.on(GraphEvent.AFTER_LAYOUT, () => {\n        msg.setValue('Layout Done!');\n      });\n    });\n  });\n",title:{zh:"使用 Web-worker",en:"Run in Web-worker"},filename:"run-in-web-worker.js",isNew:!1},{id:"run-in-gpu",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*SmXBQ6fv8PoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, register } from '@antv/g6';\nimport { FruchtermanLayout } from '@antv/layout-gpu';\n\nregister('layout', 'fruchterman-gpu', FruchtermanLayout);\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/7bacd7d1-4119-4ac1-8be3-4c4b9bcbc25f.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      node: {\n        style: {\n          size: 5,\n        },\n      },\n      edge: {\n        style: {\n          startArrow: true,\n        },\n      },\n      layout: {\n        type: 'fruchterman-gpu',\n        speed: 20,\n        gravity: 1,\n        maxIteration: 10000,\n        workerEnabled: true,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"使用 GPU 加速",en:"Run in GPU"},filename:"run-in-gpu.js",isNew:!1}],icon:"",id:"fruchterman",title:{en:"Fruchterman Layout",zh:"Fruchterman 图布局"},api:null,childrenKey:"demos",order:13},{demos:[{id:"switch",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*aGiCRrsJeCUAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      layout: {\n        type: 'circular',\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-node'],\n      data,\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      gui\n        .add({ layout: 'circular' }, 'layout', ['circular', 'grid', 'force', 'radial', 'concentric', 'mds'])\n        .onChange((layout) => {\n          const options = {\n            circular: { type: 'circular' },\n            grid: { type: 'grid' },\n            force: { type: 'force', preventOverlap: true },\n            radial: { type: 'radial', preventOverlap: true },\n            concentric: { type: 'concentric' },\n            mds: { type: 'mds', linkDistance: 100 },\n          };\n          graph.stopLayout();\n          graph.layout(options[layout]);\n        });\n    });\n  });\n",title:{zh:"布局切换",en:"Switch Layout"},filename:"switch.js",isNew:!1},{id:"change-data",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Cq8SRL2NZtYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst fetchData = async (type) => {\n  if (type === 'large') {\n    const data = await fetch('https://assets.antv.antgroup.com/g6/cluster.json').then((res) => res.json());\n    return data;\n  }\n  return {\n    nodes: [{ id: 'b0' }, { id: 'b1' }, { id: 'b2' }, { id: 'b3' }, { id: 'b4' }, { id: 'b5' }],\n    edges: [\n      { source: 'b0', target: 'b1' },\n      { source: 'b0', target: 'b2' },\n      { source: 'b0', target: 'b3' },\n      { source: 'b0', target: 'b4' },\n      { source: 'b0', target: 'b5' },\n    ],\n  };\n};\n\nfetchData('small').then((data) => {\n  const graph = new Graph({\n    container: 'container',\n    behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n    layout: {\n      type: 'force',\n      animated: true,\n      linkDistance: 100,\n      preventOverlap: true,\n    },\n    data,\n  });\n\n  graph.render();\n\n  window.addPanel((gui) => {\n    gui.add({ type: 'small' }, 'type', ['small', 'large']).onChange((type) => {\n      fetchData(type).then((data) => {\n        graph.setData(data);\n        graph.render();\n      });\n    });\n  });\n});\n",title:{zh:"数据动态切换",en:"Change Data"},filename:"change-data.js",isNew:!1}],icon:"",id:"mechanism",title:{en:"Layout Mechanism",zh:"布局机制"},api:null,childrenKey:"demos",order:15},{demos:[{id:"bi-graph",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*RfYnRK1rWVgAAAAAAAAAAAAADmJ7AQ/original",source:"import { BaseLayout, ExtensionCategory, Graph, register } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '0', data: { cluster: 'A' } },\n    { id: '1', data: { cluster: 'A' } },\n    { id: '2', data: { cluster: 'A' } },\n    { id: '3', data: { cluster: 'A' } },\n    { id: '4', data: { cluster: 'A' } },\n    { id: '5', data: { cluster: 'A' } },\n    { id: '6', data: { cluster: 'B' } },\n    { id: '7', data: { cluster: 'B' } },\n    { id: '8', data: { cluster: 'B' } },\n    { id: '9', data: { cluster: 'B' } },\n  ],\n  edges: [\n    { source: '0', target: '6' },\n    { source: '0', target: '7' },\n    { source: '0', target: '9' },\n    { source: '1', target: '6' },\n    { source: '1', target: '9' },\n    { source: '1', target: '7' },\n    { source: '2', target: '8' },\n    { source: '2', target: '9' },\n    { source: '2', target: '6' },\n    { source: '3', target: '8' },\n    { source: '4', target: '6' },\n    { source: '4', target: '7' },\n    { source: '5', target: '9' },\n  ],\n};\n\nclass BiLayout extends BaseLayout {\n  id = 'bi-layout';\n\n  async execute(data, options) {\n    const { sep = 100, nodeSep = 20, nodeSize = 32 } = { ...this.options, ...options };\n\n    const [A, B] = data.nodes.reduce(\n      (acc, curr) => {\n        acc[curr.data.cluster === 'A' ? 0 : 1].push(curr);\n        return acc;\n      },\n      [[], []],\n    );\n\n    return {\n      nodes: [\n        ...A.map((node, i) => ({\n          id: node.id,\n          style: {\n            x: i * (nodeSep + nodeSize),\n            y: 0,\n          },\n        })),\n        ...B.map((node, i) => ({\n          id: node.id,\n          style: {\n            x: i * (nodeSep + nodeSize),\n            y: sep,\n          },\n        })),\n      ],\n    };\n  }\n}\n\nregister(ExtensionCategory.LAYOUT, 'bi', BiLayout);\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  autoFit: 'center',\n  node: {\n    style: {\n      labelFill: '#fff',\n      labelPlacement: 'center',\n      labelText: (d) => d.id,\n    },\n    palette: {\n      type: 'group',\n      field: 'cluster',\n      color: ['#1783FF', '#D580FF'],\n    },\n  },\n  layout: {\n    type: 'bi',\n    sep: 300,\n    nodeSep: 20,\n    nodeSize: 32,\n    preLayout: true,\n  },\n  behaviors: ['drag-canvas', 'drag-element', 'zoom-canvas'],\n});\n\ngraph.render();\n",title:{zh:"二分图布局",en:"Bi-graph Layout"},filename:"bi-graph.js",isNew:!1},{id:"arc",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*_eivQrJXt8sAAAAAAAAAAABkARQnAQ",source:"import { BaseEdge, BaseLayout, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass ArcLayout extends BaseLayout {\n  async execute(data, options) {\n    const { nodeSep = 20, nodeSize } = { ...this.options, ...options };\n    const { nodes } = data;\n    return {\n      nodes: nodes.map((node, index) => ({\n        id: node.id,\n        style: {\n          x: index * (nodeSep + nodeSize),\n          y: 0,\n        },\n      })),\n    };\n  }\n}\n\nclass ArcEdge extends BaseEdge {\n  getKeyPath(attributes) {\n    const [sourcePoint, targetPoint] = this.getEndpoints(attributes);\n    const [sx, sy] = sourcePoint;\n    const [tx] = targetPoint;\n    const r = Math.abs(tx - sx) / 2;\n\n    return [\n      ['M', sx, sy],\n      ['A', r, r, 0, 0, sx < tx ? 1 : 0, tx, sy],\n    ];\n  }\n}\n\nregister(ExtensionCategory.LAYOUT, 'arc', ArcLayout);\nregister(ExtensionCategory.EDGE, 'arc', ArcEdge);\n\nconst palette = {\n  analytics: 'rgb(158, 1, 66)',\n  data: 'rgb(213, 62, 79)',\n  animate: 'rgb(244, 109, 67)',\n  display: 'rgb(253, 174, 97)',\n  flex: 'rgb(254, 224, 139)',\n  physics: 'rgb(230, 245, 152)',\n  query: 'rgb(171, 221, 164)',\n  scale: 'rgb(102, 194, 165)',\n  util: 'rgb(50, 136, 189)',\n  vis: 'rgb(94, 79, 162)',\n};\n\nfetch('https://gw.alipayobjects.com/os/basement_prod/70cde3be-22e8-4291-98f1-4d5a5b75b62f.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const getCluster = (id) => data.nodes.find((node) => node.id === id).cluster;\n\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      node: {\n        style: {\n          size: 20,\n          fill: (d) => palette[d.cluster],\n          ports: [{ position: 'top' }],\n          labelText: (d) => d.name,\n          labelTextAlign: 'start',\n          labelTextBaseline: 'middle',\n          labelTransform: [['rotate', 90]],\n        },\n      },\n      edge: {\n        type: 'arc',\n        style: {\n          stroke: (d) => `linear-gradient(${palette[getCluster(d.source)]}, ${palette[getCluster(d.source)]})`,\n          strokeOpacity: 0.5,\n        },\n      },\n      layout: {\n        type: 'arc',\n        nodeSize: 20,\n        preLayout: true,\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"弧线图",en:"Arc Diagram"},filename:"arc.js",isNew:!1}],icon:"",id:"custom",title:{en:"Custom Layout",zh:"自定义布局"},api:null,childrenKey:"demos",order:16},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*7dQoTLrT2xMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfunction generateArray(groups = 10, itemsPerGroup = 6) {\n  const result = []\n  \n  for (let i = 1; i <= groups; i++) {\n    for (let j = 1; j <= itemsPerGroup; j++) {\n      const id = `${i}-${j}`\n      result.push({\n        id,\n        labelText: id\n      })\n    }\n  }\n  \n  return result\n}\n\nconst data = generateArray()\n\nconst graph = new Graph({\n  container: 'container',\n  data:{\n    nodes:data\n  },\n  animation:false,\n  autoFit: 'view',\n  autoResize: true,\n  node: {\n    style: {\n      labelFill: '#fff',\n      labelPlacement: 'center',\n      labelText: (d) => d.labelText,\n    },\n  },\n  layout: Array.from({ length: 10 }, (_, i) => ({\n    type: 'circular',\n    nodeFilter: (node) => node.id.startsWith(`${i + 1}-`),\n    center: [\n      1000 + (i % 5) * 850, // x坐标\n      i < 5 ? 100 : 1100, // y坐标\n    ],\n  })),\n  behaviors: ['drag-canvas', 'drag-element','zoom-canvas'],\n});\n\ngraph.render();\n",title:{zh:"子图布局",en:"SubGraph Layout"},filename:"basic.js",isNew:!1}],icon:"",id:"sub-graph",title:{en:"SubGraph",zh:"子图布局"},api:null,childrenKey:"demos",order:16}],childrenKey:"examples"},{id:"element",title:{zh:"元素",en:"Element"},icon:"shape",examples:[{demos:[{id:"circle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*SuPdRLp1PQgAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'circle',\n    style: {\n      size: 40,\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"圆形",en:"Circle"},filename:"circle.js",isNew:!1},{id:"rect",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*etLSQYZnJAAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      size: 40,\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"矩形",en:"Rect"},filename:"rect.js",isNew:!1},{id:"rounded-rect",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*r03cSIy59-UAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      radius: 4, // 👈🏻 Set the radius.\n      size: 40,\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"圆角矩形",en:"Radius Rect"},filename:"rounded-rect.js",isNew:!1},{id:"diamond",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*oUSlSZt6rCoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'diamond',\n    style: {\n      size: 40,\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"菱形",en:"Diamond"},filename:"diamond.js",isNew:!1},{id:"hexagon",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*muosSr4ft8QAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'hexagon',\n    style: {\n      size: 40,\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      outerR: 30, // 外半径\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"六边形",en:"Hexagon"},filename:"hexagon.js",isNew:!1},{id:"triangle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*BW_sSbWVQowAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'triangle',\n    style: {\n      size: 40,\n      direction: (d) => (d.id === 'ports' ? 'left' : undefined),\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"三角形",en:"Triangle"},filename:"triangle.js",isNew:!1},{id:"image",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*NPG3SL_n-CYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'image',\n    style: {\n      size: 40,\n      labelText: (d) => d.id,\n      src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      haloStroke: '#227eff',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n    state: {\n      inactive: {\n        fillOpacity: 0.5,\n      },\n      disabled: {\n        fillOpacity: 0.2,\n      },\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"图片",en:"Image"},filename:"image.js",isNew:!1},{id:"ellipse",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Vdq4Rb3ESOoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'ellipse',\n    style: {\n      size: [45, 35],\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"椭圆",en:"Ellipse"},filename:"ellipse.js",isNew:!1},{id:"star",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YSVjSLyYNwIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default' },\n    { id: 'halo' },\n    { id: 'badges' },\n    { id: 'ports' },\n    {\n      id: 'active',\n      states: ['active'],\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'star',\n    style: {\n      size: 40,\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"星形",en:"Star"},filename:"star.js",isNew:!1},{id:"html",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*TvSOSINFbBIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst ICON_MAP = {\n  error: '&#10060;',\n  overload: '&#9889;',\n  running: '&#9989;',\n};\n\nconst COLOR_MAP = {\n  error: '#f5222d',\n  overload: '#faad14',\n  running: '#52c41a',\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', data: { location: 'East', status: 'error', ip: '192.168.1.2' } },\n      { id: 'node-2', data: { location: 'West', status: 'overload', ip: '192.168.1.3' } },\n      { id: 'node-3', data: { location: 'South', status: 'running', ip: '192.168.1.4' } },\n    ],\n  },\n  node: {\n    type: 'html',\n    style: {\n      size: [240, 80],\n      dx: -120,\n      dy: -40,\n      innerHTML: (d) => {\n        const {\n          data: { location, status, ip },\n        } = d;\n        const color = COLOR_MAP[status];\n\n        return `\n<div \n  style=\"\n    width:100%; \n    height: 100%; \n    background: ${color}bb; \n    border: 1px solid ${color};\n    color: #fff;\n    user-select: none;\n    display: flex; \n    padding: 10px;\n    \"\n>\n  <div style=\"display: flex;flex-direction: column;flex: 1;\">\n    <div style=\"font-weight: bold;\">\n      ${location} Node\n    </div>\n    <div>\n      status: ${status} ${ICON_MAP[status]}\n    </div>\n  </div>\n  <div>\n    <span style=\"border: 1px solid white; padding: 2px;\">\n      ${ip}\n    </span>\n  </div>\n</div>`;\n      },\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['drag-element', 'zoom-canvas'],\n});\n\ngraph.render();\n",title:{zh:"HTML节点",en:"HTML节点"},filename:"html.js",isNew:!1},{id:"donut",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*h3eWT4loiTwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    { id: 'default', index: 0 },\n    { id: 'halo', index: 1 },\n    { id: 'badges', index: 2 },\n    { id: 'ports', index: 3 },\n    {\n      id: 'active',\n      states: ['active'],\n      index: 4,\n    },\n    {\n      id: 'selected',\n      states: ['selected'],\n      index: 5,\n    },\n    {\n      id: 'highlight',\n      states: ['highlight'],\n      index: 6,\n    },\n    {\n      id: 'inactive',\n      states: ['inactive'],\n      index: 7,\n    },\n    {\n      id: 'disabled',\n      states: ['disabled'],\n      index: 8,\n    },\n  ],\n};\nconst graph = new Graph({\n  container: 'container',\n  animation: false,\n  data,\n  node: {\n    type: 'donut',\n    style: {\n      size: 80,\n      fill: '#DB9D0D',\n      innerR: 20,\n      donuts: (item) => {\n        const { index } = item;\n        if (index === 0) return [1, 2, 3]; // donuts数据类型为number[]时，根据值的大小决定环的占比\n\n        if (index === 1) {\n          return [\n            { value: 50, color: 'red' },\n            { value: 150, color: 'green' },\n            { value: 100, color: 'blue' },\n          ];\n        }\n\n        if (index === 4) {\n          return [\n            { value: 150, fill: 'pink', stroke: '#fff', lineWidth: 1 },\n            { value: 250, stroke: '#fff', lineWidth: 1 },\n            { value: 200, stroke: '#fff', lineWidth: 1 },\n          ];\n        }\n\n        return [100, 200, 100, 200];\n      },\n      labelText: (d) => d.id,\n      iconFontFamily: 'iconfont',\n      iconText: '\\ue602',\n      halo: (d) => (d.id === 'halo' ? true : false),\n      badges: (d) =>\n        d.id === 'badges'\n          ? [\n              {\n                text: 'A',\n                placement: 'right-top',\n              },\n              {\n                text: 'Important',\n                placement: 'right',\n              },\n              {\n                text: 'Notice',\n                placement: 'right-bottom',\n              },\n            ]\n          : [],\n      badgeFontSize: 8,\n      badgePadding: [1, 4],\n      portR: 3,\n      ports: (d) =>\n        d.id === 'ports'\n          ? [{ placement: 'left' }, { placement: 'right' }, { placement: 'top' }, { placement: 'bottom' }]\n          : [],\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"甜甜圈",en:"Donut"},filename:"donut.js",isNew:!1},{id:"3d-node",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*rLPZSqW7LskAAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, register } from '@antv/g6';\nimport {\n  Capsule,\n  Cone,\n  Cube,\n  Cylinder,\n  Light,\n  ObserveCanvas3D,\n  Plane,\n  Sphere,\n  Torus,\n  renderer,\n} from '@antv/g6-extension-3d';\n\nregister(ExtensionCategory.PLUGIN, '3d-light', Light);\nregister(ExtensionCategory.NODE, 'sphere', Sphere);\nregister(ExtensionCategory.NODE, 'plane', Plane);\nregister(ExtensionCategory.NODE, 'cylinder', Cylinder);\nregister(ExtensionCategory.NODE, 'cone', Cone);\nregister(ExtensionCategory.NODE, 'cube', Cube);\nregister(ExtensionCategory.NODE, 'capsule', Capsule);\nregister(ExtensionCategory.NODE, 'torus', Torus);\nregister(ExtensionCategory.BEHAVIOR, 'observe-canvas-3d', ObserveCanvas3D);\n\nconst nodes = [\n  {\n    id: 'node-1',\n    type: 'sphere',\n    style: {\n      texture: 'https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*cdTdTI2bNl8AAAAAAAAAAAAADmJ7AQ/original',\n    },\n  },\n  { id: 'node-2', type: 'plane', style: { size: 50 } },\n  { id: 'node-3', type: 'cylinder' },\n  { id: 'node-4', type: 'cone' },\n  {\n    id: 'node-5',\n    type: 'cube',\n    style: {\n      texture: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n    },\n  },\n  { id: 'node-6', type: 'capsule' },\n  { id: 'node-7', type: 'torus' },\n];\n\nconst graph = new Graph({\n  container: 'container',\n  renderer,\n  data: {\n    nodes,\n  },\n  node: {\n    style: {\n      materialType: 'phong',\n      labelText: (d) => d.id,\n      x: (d) => 100 + (nodes.findIndex((n) => n.id === d.id) % 5) * 100,\n      y: (d) => 100 + Math.floor(nodes.findIndex((n) => n.id === d.id) / 5) * 100,\n    },\n  },\n  plugins: [\n    {\n      type: '3d-light',\n      directional: {\n        direction: [0, 0, 1],\n      },\n    },\n  ],\n  behaviors: ['observe-canvas-3d'],\n});\n\ngraph.render();\n",title:{zh:"3D 节点",en:"3D Node"},filename:"3d-node.js",isNew:!1},{id:"port",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*AvaIRIuptcwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', type: 'circle', style: { x: 80, y: 200, size: 30 } },\n    {\n      id: 'node-2',\n      type: 'rect',\n      style: {\n        x: 250,\n        y: 200,\n        size: 50,\n        port: true,\n        ports: [\n          { key: 'port-1', placement: [0, 0.15] },\n          { key: 'port-2', placement: [0, 0.5] },\n          { key: 'port-3', placement: [0, 0.85] },\n        ],\n      },\n    },\n  ],\n  edges: [\n    { id: 'edge-1', source: 'node-1', target: 'node-2', style: { targetPort: 'port-1' } },\n    { id: 'edge-2', source: 'node-1', target: 'node-2', style: { targetPort: 'port-2' } },\n    { id: 'edge-3', source: 'node-1', target: 'node-2', style: { targetPort: 'port-3' } },\n  ],\n};\n\nconst graph = new Graph({\n  data,\n  edge: {\n    style: {\n      endArrow: true,\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = { show: false, position: 'outline' };\n  gui.add(config, 'position', ['outline', 'center']).onChange((value) => {\n    graph.updateNodeData([{ id: 'node-2', style: { portLinkToCenter: value === 'center' } }]);\n    graph.draw();\n  });\n  gui\n    .add(config, 'show')\n    .onChange((value) => {\n      graph.updateNodeData([{ id: 'node-2', style: { portR: value ? 5 : 0 } }]);\n      graph.draw();\n    })\n    .name('show ports');\n});\n",title:{zh:"连接桩",en:"Port"},filename:"port.js",isNew:!1}],icon:"",id:"node",title:{en:"Nodes",zh:"节点"},api:null,childrenKey:"demos",order:0},{demos:[{id:"line",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ax2RRKUqXlcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    {\n      id: 'node1',\n    },\n    {\n      id: 'node2',\n    },\n    {\n      id: 'node3',\n    },\n    {\n      id: 'node4',\n    },\n    {\n      id: 'node5',\n    },\n    {\n      id: 'node6',\n    },\n  ],\n  edges: [\n    {\n      id: 'line-default',\n      source: 'node1',\n      target: 'node2',\n    },\n    {\n      id: 'line-active',\n      source: 'node1',\n      target: 'node3',\n      states: ['active'],\n    },\n    {\n      id: 'line-selected',\n      source: 'node1',\n      target: 'node4',\n      states: ['selected'],\n    },\n    {\n      id: 'line-highlight',\n      source: 'node1',\n      target: 'node5',\n      states: ['highlight'],\n    },\n    {\n      id: 'line-inactive',\n      source: 'node1',\n      target: 'node6',\n      states: ['inactive'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'line',\n    style: {\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n      badge: true,\n      badgeText: '\\ue603',\n      badgeFontFamily: 'iconfont',\n      badgeBackgroundWidth: 12,\n      badgeBackgroundHeight: 12,\n    },\n  },\n  layout: {\n    type: 'radial',\n    unitRadius: 220,\n    linkDistance: 220,\n  },\n});\n\ngraph.render();\n",title:{zh:"直线",en:"Line"},filename:"line.js",isNew:!1},{id:"polyline",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zw8VRou1mRAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 200, y: 200 } },\n    { id: 'node-2', style: { x: 350, y: 120 } },\n  ],\n  edges: [\n    {\n      id: 'edge-1',\n      source: 'node-1',\n      target: 'node-2',\n      controlPoints: [[300, 190]],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'polyline',\n    style: {\n      controlPoints: (d) => d.controlPoints,\n    },\n  },\n  behaviors: [{ type: 'drag-element' }],\n});\n\ngraph.render();\n",title:{zh:"折线-带控制点",en:"Polyline with Control Points"},filename:"polyline.js",isNew:!1},{id:"polyline-orth",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ldO6S4NOfKQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 200, y: 200 } },\n    { id: 'node-2', style: { x: 350, y: 120 } },\n  ],\n  edges: [\n    {\n      id: 'edge-1',\n      source: 'node-1',\n      target: 'node-2',\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'polyline',\n    style: {\n      router: {\n        type: 'orth',\n      },\n    },\n  },\n  behaviors: [{ type: 'drag-element' }],\n});\n\ngraph.render();\n",title:{zh:"正交线",en:"Orthogonal Line"},filename:"polyline-orth.js",isNew:!1},{id:"polyline-orth-with-cps",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*C9apQa9NioMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 200, y: 200 } },\n    { id: 'node-2', style: { x: 350, y: 120 } },\n    { id: 'node-cp', style: { x: 300, y: 190, size: 5, fill: 'rgb(244, 109, 67)' } },\n  ],\n  edges: [\n    {\n      id: 'edge-1',\n      source: 'node-1',\n      target: 'node-2',\n      style: { controlPoints: [[300, 190]] },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'polyline',\n    style: {\n      router: {\n        type: 'orth',\n      },\n      controlPoints: (d) => d.style.controlPoints,\n    },\n  },\n  behaviors: [{ type: 'drag-element' }],\n});\n\ngraph.render();\n",title:{zh:"正交线-带控制点",en:"Orthogonal Line with Control Points"},filename:"polyline-orth-with-cps.js",isNew:!1},{id:"quadratic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*RRelQ7VrFc4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    {\n      id: 'node1',\n    },\n    {\n      id: 'node2',\n    },\n    {\n      id: 'node3',\n    },\n    {\n      id: 'node4',\n    },\n    {\n      id: 'node5',\n    },\n    {\n      id: 'node6',\n    },\n  ],\n  edges: [\n    {\n      id: 'line-default',\n      source: 'node1',\n      target: 'node2',\n    },\n    {\n      id: 'line-active',\n      source: 'node1',\n      target: 'node3',\n      states: ['active'],\n    },\n    {\n      id: 'line-selected',\n      source: 'node1',\n      target: 'node4',\n      states: ['selected'],\n    },\n    {\n      id: 'line-highlight',\n      source: 'node1',\n      target: 'node5',\n      states: ['highlight'],\n    },\n    {\n      id: 'line-inactive',\n      source: 'node1',\n      target: 'node6',\n      states: ['inactive'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'quadratic',\n    style: {\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n      badge: true,\n      badgeText: '\\ue603',\n      badgeFontFamily: 'iconfont',\n      badgeBackgroundWidth: 12,\n      badgeBackgroundHeight: 12,\n    },\n  },\n  layout: {\n    type: 'radial',\n    unitRadius: 220,\n    linkDistance: 220,\n  },\n});\n\ngraph.render();\n",title:{zh:"二次贝塞尔曲线",en:"Quadratic"},filename:"quadratic.js",isNew:!1},{id:"cubic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*cVd-TLQWujYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nconst data = {\n  nodes: [\n    {\n      id: 'node1',\n    },\n    {\n      id: 'node2',\n    },\n    {\n      id: 'node3',\n    },\n    {\n      id: 'node4',\n    },\n    {\n      id: 'node5',\n    },\n    {\n      id: 'node6',\n    },\n  ],\n  edges: [\n    {\n      id: 'line-default',\n      source: 'node1',\n      target: 'node2',\n    },\n    {\n      id: 'line-active',\n      source: 'node1',\n      target: 'node3',\n      states: ['active'],\n    },\n    {\n      id: 'line-selected',\n      source: 'node1',\n      target: 'node4',\n      states: ['selected'],\n    },\n    {\n      id: 'line-highlight',\n      source: 'node1',\n      target: 'node5',\n      states: ['highlight'],\n    },\n    {\n      id: 'line-inactive',\n      source: 'node1',\n      target: 'node6',\n      states: ['inactive'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  edge: {\n    type: 'cubic',\n    style: {\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n      badge: true,\n      badgeText: '\\ue603',\n      badgeFontFamily: 'iconfont',\n      badgeBackgroundWidth: 12,\n      badgeBackgroundHeight: 12,\n    },\n  },\n  layout: {\n    type: 'radial',\n    unitRadius: 220,\n    linkDistance: 220,\n  },\n});\n\ngraph.render();\n",title:{zh:"三次贝塞尔曲线",en:"Cubic"},filename:"cubic.js",isNew:!1},{id:"vertical-cubic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*wrDlQKxNHNEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: 'node1',\n    },\n    {\n      id: 'node2',\n    },\n    {\n      id: 'node3',\n    },\n    {\n      id: 'node4',\n    },\n    {\n      id: 'node5',\n    },\n    {\n      id: 'node6',\n    },\n  ],\n  edges: [\n    {\n      id: 'line-default',\n      source: 'node1',\n      target: 'node2',\n    },\n    {\n      id: 'line-active',\n      source: 'node1',\n      target: 'node3',\n      states: ['active'],\n    },\n    {\n      id: 'line-selected',\n      source: 'node1',\n      target: 'node4',\n      states: ['selected'],\n    },\n    {\n      id: 'line-highlight',\n      source: 'node1',\n      target: 'node5',\n      states: ['highlight'],\n    },\n    {\n      id: 'line-inactive',\n      source: 'node1',\n      target: 'node6',\n      states: ['inactive'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      port: true,\n      ports: [{ placement: 'top' }, { placement: 'bottom' }],\n    },\n  },\n  edge: {\n    type: 'cubic-vertical',\n    style: {\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n    },\n  },\n  layout: {\n    type: 'antv-dagre',\n    begin: [50, 50],\n    rankdir: 'TB',\n    nodesep: 20,\n    ranksep: 120,\n  },\n});\n\ngraph.render();\n",title:{zh:"三次贝塞尔曲线-垂直",en:"Vertical Cubic"},filename:"vertical-cubic.js",isNew:!1},{id:"horizontal-cubic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*6Gj2R50AJ8AAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: 'node1',\n    },\n    {\n      id: 'node2',\n    },\n    {\n      id: 'node3',\n    },\n    {\n      id: 'node4',\n    },\n    {\n      id: 'node5',\n    },\n    {\n      id: 'node6',\n    },\n  ],\n  edges: [\n    {\n      id: 'line-default',\n      source: 'node1',\n      target: 'node2',\n    },\n    {\n      id: 'line-active',\n      source: 'node1',\n      target: 'node3',\n      states: ['active'],\n    },\n    {\n      id: 'line-selected',\n      source: 'node1',\n      target: 'node4',\n      states: ['selected'],\n    },\n    {\n      id: 'line-highlight',\n      source: 'node1',\n      target: 'node5',\n      states: ['highlight'],\n    },\n    {\n      id: 'line-inactive',\n      source: 'node1',\n      target: 'node6',\n      states: ['inactive'],\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      port: true,\n      ports: [{ placement: 'right' }, { placement: 'left' }],\n    },\n  },\n  edge: {\n    type: 'cubic-horizontal',\n    style: {\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n    },\n  },\n  layout: {\n    type: 'antv-dagre',\n    rankdir: 'LR',\n    nodesep: 20,\n    ranksep: 120,\n  },\n});\n\ngraph.render();\n",title:{zh:"三次贝塞尔曲线-水平",en:"Horizontal Cubic"},filename:"horizontal-cubic.js",isNew:!1},{id:"loop-polyline",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*eCLSSIiRDVEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3-ports' }, { id: 'node4-ports' }],\n  edges: [\n    {\n      id: 'loop-1',\n      source: 'node1',\n      target: 'node1',\n      placement: 'top',\n    },\n    {\n      id: 'loop-2',\n      source: 'node1',\n      target: 'node1',\n      placement: 'right',\n    },\n    {\n      id: 'loop-3',\n      source: 'node1',\n      target: 'node1',\n      placement: 'bottom',\n    },\n    {\n      id: 'loop-4',\n      source: 'node1',\n      target: 'node1',\n      placement: 'left',\n    },\n    {\n      id: 'loop-5',\n      source: 'node2',\n      target: 'node2',\n      placement: 'top-right',\n    },\n    {\n      id: 'loop-6',\n      source: 'node2',\n      target: 'node2',\n      placement: 'bottom-right',\n    },\n    {\n      id: 'loop-7',\n      source: 'node2',\n      target: 'node2',\n      placement: 'bottom-left',\n    },\n    {\n      id: 'loop-8',\n      source: 'node2',\n      target: 'node2',\n      placement: 'top-left',\n    },\n    {\n      id: 'loop-9',\n      source: 'node3-ports',\n      target: 'node3-ports',\n      style: { sourcePort: 'port1', targetPort: 'port2' },\n    },\n    {\n      id: 'loop-10',\n      source: 'node4-ports',\n      target: 'node4-ports',\n      style: { sourcePort: 'port2', targetPort: 'port2' },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      size: [80, 30],\n      port: (d) => d.id.includes('ports'),\n      portR: 3,\n      ports: [\n        {\n          key: 'port1',\n          placement: [0.7, 0],\n        },\n        {\n          key: 'port2',\n          placement: 'right',\n        },\n      ],\n    },\n  },\n  edge: {\n    type: 'polyline',\n    style: {\n      sourcePort: (d) => d.style.sourcePort,\n      targetPort: (d) => d.style.targetPort,\n      endArrow: true,\n      loopPlacement: (d) => d.placement,\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"折线自环边",en:"Polyline Loop"},filename:"loop-polyline.js",isNew:!1},{id:"loop-curve",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*OReBSqIkp_cAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, idOf } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3-ports' }, { id: 'node4-ports' }],\n  edges: [\n    {\n      id: 'loop-1',\n      source: 'node1',\n      target: 'node1',\n      style: { placement: 'top' },\n    },\n    {\n      id: 'loop-2',\n      source: 'node1',\n      target: 'node1',\n      style: { placement: 'right' },\n    },\n    {\n      id: 'loop-3',\n      source: 'node1',\n      target: 'node1',\n      style: { placement: 'bottom' },\n    },\n    {\n      id: 'loop-4',\n      source: 'node1',\n      target: 'node1',\n      style: { placement: 'left' },\n    },\n    {\n      id: 'loop-5',\n      source: 'node2',\n      target: 'node2',\n      style: { placement: 'top-right' },\n    },\n    {\n      id: 'loop-6',\n      source: 'node2',\n      target: 'node2',\n      style: { placement: 'bottom-right' },\n    },\n    {\n      id: 'loop-7',\n      source: 'node2',\n      target: 'node2',\n      style: { placement: 'bottom-left' },\n    },\n    {\n      id: 'loop-8',\n      source: 'node2',\n      target: 'node2',\n      style: { placement: 'top-left' },\n    },\n    {\n      id: 'loop-9',\n      source: 'node3-ports',\n      target: 'node3-ports',\n      style: { sourcePort: 'port1', targetPort: 'port2' },\n    },\n    {\n      id: 'loop-10',\n      source: 'node4-ports',\n      target: 'node4-ports',\n      style: { sourcePort: 'port2', targetPort: 'port2' },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      size: [80, 30],\n      port: (d) => idOf(d).includes('ports'),\n      portR: 3,\n      ports: [\n        {\n          key: 'port1',\n          placement: [0.7, 0],\n        },\n        {\n          key: 'port2',\n          placement: 'right',\n        },\n      ],\n    },\n  },\n  edge: {\n    type: 'line',\n    style: {\n      sourcePort: (d) => d.style.sourcePort,\n      targetPort: (d) => d.style.targetPort,\n      endArrow: true,\n      loopPlacement: (d) => d.style.placement,\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"曲线自环边",en:"Curve Loop"},filename:"loop-curve.js",isNew:!1},{id:"arrows",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*VlxQQoEpTIgAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: new Array(16).fill(0).map((_, i) => ({ id: `node${i + 1}` })),\n  edges: [\n    'default-arrow',\n    'triangle-arrow',\n    'simple-arrow',\n    'vee-arrow',\n    'circle-arrow',\n    'rect-arrow',\n    'diamond-arrow',\n    'triangleRect-arrow',\n  ].map((id, i) => ({\n    id,\n    source: `node${i * 2 + 1}`,\n    target: `node${i * 2 + 2}`,\n  })),\n};\n\nconst graph = new Graph({\n  data,\n  edge: {\n    style: {\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n      endArrowType: (d) => d.id.split('-')[0],\n    },\n  },\n  layout: {\n    type: 'grid',\n    cols: 2,\n  },\n});\n\ngraph.render();\n",title:{zh:"箭头",en:"Arrows"},filename:"arrows.js",isNew:!1}],icon:"",id:"edge",title:{en:"Edges",zh:"边"},api:null,childrenKey:"demos",order:1},{demos:[{id:"circle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Kbk1S5pzSY0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\n    { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\n    { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\n  ],\n  edges: [],\n  combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  combo: {\n    type: 'circle',\n  },\n  behaviors: ['drag-element', 'collapse-expand'],\n});\n\ngraph.render();\n",title:"圆形",filename:"circle.js",isNew:!1},{id:"rect",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*PKtgSZzmb3YAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\n    { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\n    { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\n  ],\n  edges: [],\n  combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  combo: {\n    type: 'rect',\n    style: {\n      padding: 20,\n    },\n  },\n  behaviors: ['drag-element', 'collapse-expand'],\n});\n\ngraph.render();\n",title:"矩形",filename:"rect.js",isNew:!1}],icon:"",id:"combo",title:{en:"Combos",zh:"组合"},api:null,childrenKey:"demos",order:2},{demos:[{id:"copy",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*a-keS4q-nU4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, NodeEvent } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: 'node1',\n      data: {\n        label: 'Click to copy this label which is too long to be displayed',\n      },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      x: 200,\n      y: 200,\n      size: 150,\n      labelPlacement: 'center',\n      labelText: (d) => d.data.label,\n      labelWordWrap: true,\n      labelMaxWidth: '90%',\n      labelBackground: true,\n      labelBackgroundFill: '#eee',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n      labelPointerEvents: 'none',\n      labelBackgroundPointerEvents: 'none',\n    },\n  },\n  behaviors: ['drag-element'],\n  plugins: [{\n    type: 'tooltip',\n    getContent: (e, items) => {\n      let result = `<h4>Node Label:</h4>`;\n      items.forEach((item) => {\n        result += `<p>${item.data.label}</p>`;\n      });\n      return result;\n    },\n  }]\n});\n\ngraph.render();\n\ngraph.on('node:click', (e) => {\n  const node = graph.getNodeData(e.target.id);\n  const label = node?.data?.label;\n\n  navigator.clipboard.writeText(label);\n  alert('copied to clipboard!');\n});\n\ngraph.on(NodeEvent.POINTER_ENTER, (e) => {\n  graph.setElementState({ [e.target.id]: 'active' });\n});\n\ngraph.on(NodeEvent.POINTER_OUT, (e) => {\n  graph.setElementState({ [e.target.id]: [] });\n});\n",title:{zh:"复制",en:"Copy Content"},filename:"copy.js",isNew:!1},{id:"ellipsis",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-0P0R6AAnuMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 100, y: 150, size: 100 } },\n    { id: 'node-2', style: { x: 400, y: 150, size: 150 } },\n  ],\n  edges: [{ source: 'node-1', target: 'node-2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelPlacement: 'center',\n      labelText: 'This label is too long to be displayed',\n      labelWordWrap: true, // enable label ellipsis\n      labelMaxWidth: '90%',\n      labelBackground: true,\n      labelBackgroundFill: '#eee',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n    },\n  },\n  edge: {\n    style: {\n      labelOffsetY: -4,\n      labelTextBaseline: 'bottom',\n      labelText: 'This label is too long to be displayed',\n      labelWordWrap: true,\n      labelMaxWidth: '80%',\n      labelBackground: true,\n      labelBackgroundFill: 'red',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"文本省略",en:"Text Ellipsis"},filename:"ellipsis.js",isNew:!1},{id:"word-wrap",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*N9eHSoiH3bEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', style: { x: 100, y: 150, size: 100 } },\n    { id: 'node-2', style: { x: 400, y: 150, size: 150 } },\n  ],\n  edges: [{ source: 'node-1', target: 'node-2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  fitCenter: true,\n  data,\n  node: {\n    type: 'rect',\n    style: {\n      labelPlacement: 'bottom',\n      labelText: 'This label is too long to be displayed',\n      labelMaxWidth: '90%',\n      labelBackground: true,\n      labelBackgroundFill: '#eee',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n      labelWordWrap: true,\n      labelMaxLines: 4,\n    },\n  },\n  edge: {\n    style: {\n      labelOffsetY: -4,\n      labelTextBaseline: 'bottom',\n      labelText: 'This label is too long to be displayed',\n      labelMaxWidth: '80%',\n      labelBackground: true,\n      labelBackgroundFill: 'red',\n      labelBackgroundFillOpacity: 0.5,\n      labelBackgroundRadius: 4,\n      labelWordWrap: true,\n      labelMaxLines: 4,\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"文本换行",en:"Word Wrap"},filename:"word-wrap.js",isNew:!1},{id:"background",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*NG7xT4mkRL4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', style: { x: 150, y: 100 } },\n    { id: 'node2', style: { x: 250, y: 200 } },\n    { id: 'node3', style: { x: 450, y: 200 } },\n  ],\n  edges: [\n    { source: 'node1', target: 'node2' },\n    { source: 'node1', target: 'node3' },\n    { source: 'node2', target: 'node3' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n      labelPosition: 'bottom',\n      labelFill: '#e66465',\n      labelFontSize: 12,\n      labelFontStyle: 'italic',\n      labelBackground: true,\n      labelBackgroundFill: 'linear-gradient(#e66465, #9198e5)',\n      labelBackgroundStroke: '#9ec9ff',\n      labelBackgroundRadius: 2,\n    },\n  },\n  edge: {\n    style: {\n      labelText: (d) => d.id,\n      labelPosition: 'center',\n      labelTextBaseline: 'top',\n      labelDy: 5,\n      labelFontSize: 12,\n      labelFontWeight: 'bold',\n      labelFill: '#1890ff',\n      labelBackground: true,\n      labelBackgroundFill: 'linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%)',\n      labelBackgroundStroke: '#9ec9ff',\n      labelBackgroundRadius: 2,\n    },\n  },\n  layout: {\n    type: 'force',\n  },\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"背景颜色",en:"Background"},filename:"background.js",isNew:!1}],icon:"",id:"label",title:{en:"Label",zh:"标签"},api:null,childrenKey:"demos",order:3},{demos:[{id:"react-node",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*9oz-R7bIkd0AAAAAAAAAAAAADmJ7AQ/original",source:"import { DatabaseFilled } from '@ant-design/icons';\nimport { ExtensionCategory, Graph, register } from '@antv/g6';\nimport { ReactNode } from '@antv/g6-extension-react';\nimport { Badge, Flex, Input, Tag, Typography } from 'antd';\nimport { useEffect, useRef } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nconst { Text } = Typography;\n\nregister(ExtensionCategory.NODE, 'react', ReactNode);\n\nconst Node = ({ data, onChange }) => {\n  const { status, type } = data.data;\n\n  return (\n    <Flex\n      style={{\n        width: '100%',\n        height: '100%',\n        background: '#fff',\n        padding: 10,\n        borderRadius: 5,\n        border: '1px solid gray',\n      }}\n      vertical\n    >\n      <Flex align=\"center\" justify=\"space-between\">\n        <Text>\n          <DatabaseFilled />\n          Server\n          <Tag>{type}</Tag>\n        </Text>\n        <Badge status={status} />\n      </Flex>\n      <Text type=\"secondary\">{data.id}</Text>\n      <Flex align=\"center\">\n        <Text style={{ flexShrink: 0 }}>\n          <Text type=\"danger\">*</Text>URL:\n        </Text>\n        <Input\n          style={{ borderRadius: 0, borderBottom: '1px solid #d9d9d9' }}\n          variant=\"borderless\"\n          value={data.data?.url}\n          onChange={(event) => {\n            const url = event.target.value;\n            onChange?.(url);\n          }}\n        />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport const ReactNodeDemo = () => {\n  const containerRef = useRef();\n\n  useEffect(() => {\n    const graph = new Graph({\n      container: containerRef.current,\n      data: {\n        nodes: [\n          {\n            id: 'local-server-1',\n            data: { status: 'success', type: 'local', url: 'http://localhost:3000' },\n            style: { x: 50, y: 50 },\n          },\n          {\n            id: 'remote-server-1',\n            data: { status: 'warning', type: 'remote' },\n            style: { x: 350, y: 50 },\n          },\n        ],\n        edges: [{ source: 'local-server-1', target: 'remote-server-1' }],\n      },\n      node: {\n        type: 'react',\n        style: {\n          size: [240, 100],\n          component: (data) => <Node data={data} />,\n        },\n      },\n      behaviors: ['drag-element', 'zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  }, []);\n\n  return <div style={{ width: '100%', height: '100%' }} ref={containerRef}></div>;\n};\n\nconst root = createRoot(document.getElementById('container'));\nroot.render(<ReactNodeDemo />);\n",title:{zh:"React 节点",en:"React node"},filename:"react-node.jsx",isNew:!1},{id:"reactnode-idcard",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*nKs0R7O2njIAAAAAAAAAAAAAemJ7AQ/original",source:"import { UserOutlined } from '@ant-design/icons';\nimport { ExtensionCategory, Graph, register } from '@antv/g6';\nimport { ReactNode } from '@antv/g6-extension-react';\nimport { Avatar, Button, Card, Descriptions, Select, Space, Typography } from 'antd';\nimport React, { useEffect, useRef } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nregister(ExtensionCategory.NODE, 'react-node', ReactNode);\n\nconst IDCardNode = ({ id, data }) => {\n  const { name, idNumber, address, expanded, selected, graph } = data;\n\n  const toggleExpand = (e) => {\n    e.stopPropagation();\n    graph.updateNodeData([\n      {\n        id,\n        data: { expanded: !expanded },\n      },\n    ]);\n    graph.render();\n  };\n\n  const handleSelect = (value) => {\n    graph.updateNodeData([\n      {\n        id,\n        data: { selected: value !== 0 },\n      },\n    ]);\n    if (value === 2) {\n      // 获取与当前节点相连的所有节点\n      const connectedNodes = graph.getNeighborNodesData(id);\n\n      connectedNodes.forEach((node) => {\n        graph.updateNodeData([\n          {\n            id: node.id,\n            data: { selected: true },\n          },\n        ]);\n      });\n    }\n    graph.render();\n  };\n\n  const CardTitle = (\n    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n      <Space>\n        <Avatar shape=\"square\" size=\"small\" icon={<UserOutlined />} />\n        <Title level={5} style={{ margin: 0 }}>\n          {name}\n        </Title>\n\n        <Select\n          value={selected ? data.selectedOption || 1 : 0}\n          style={{ width: 150, marginRight: 8 }}\n          onChange={handleSelect}\n        >\n          <Option value={0}>None</Option>\n          <Option value={1}>Node</Option>\n          <Option value={2}>Connected</Option>\n        </Select>\n      </Space>\n      <Button type=\"link\" onClick={toggleExpand} style={{ padding: 0 }}>\n        {expanded ? 'fold' : 'expand'}\n      </Button>\n    </div>\n  );\n\n  return (\n    <Card\n      size=\"small\"\n      title={CardTitle}\n      style={{\n        width: 340,\n        padding: 10,\n        borderRadius: 8,\n        borderWidth: 2,\n        borderColor: selected ? 'orange' : '#eee', // 根据选中状态设置边框颜色\n        cursor: 'pointer',\n      }}\n    >\n      {expanded ? (\n        <Descriptions bordered column={1} style={{ width: '100%', textAlign: 'center' }}>\n          <Descriptions.Item label=\"ID Number\">{idNumber}</Descriptions.Item>\n          <Descriptions.Item label=\"Address\">{address}</Descriptions.Item>\n        </Descriptions>\n      ) : (\n        <Text style={{ textAlign: 'center' }}>IDCard Information</Text>\n      )}\n    </Card>\n  );\n};\n\n// 定义 Graph 数据\nconst data = {\n  nodes: [\n    {\n      id: 'node1',\n      data: {\n        name: 'Alice',\n        idNumber: 'IDUSAASD2131734',\n        address: '1234 Broadway, Apt 5B, New York, NY 10001',\n        expanded: false, // 初始状态为收缩\n        selected: false, // 初始状态为未选中\n        selectedOption: 1, // 初始选择本节点\n      },\n      style: { x: 50, y: 50 },\n    },\n    {\n      id: 'node2',\n      data: {\n        name: 'Bob',\n        idNumber: 'IDUSAASD1431920',\n        address: '3030 Chestnut St, Philadelphia, PA 19104',\n        expanded: false, // 初始状态为收缩\n        selected: false, // 初始状态为未选中\n        selectedOption: 0, // 初始不选择\n      },\n      style: { x: 700, y: 100 },\n    },\n    {\n      id: 'node3',\n      data: {\n        name: 'Charlie',\n        idNumber: 'IDUSAASD1431921',\n        address: '4040 Elm St, Chicago, IL 60611',\n        expanded: false,\n        selected: true,\n        selectedOption: 0,\n      },\n    },\n    {\n      id: 'node4',\n      data: {\n        name: 'David',\n        idNumber: 'IDUSAASD1431922',\n        address: '5050 Oak St, Houston, TX 77002',\n        expanded: false,\n        selected: false,\n        selectedOption: 0,\n      },\n    },\n    {\n      id: 'node5',\n      data: {\n        name: 'Eve',\n        idNumber: 'IDUSAASD1431923',\n        address: '6060 Pine St, Phoenix, AZ 85001',\n        expanded: false,\n        selected: false,\n        selectedOption: 0,\n      },\n    },\n  ],\n  edges: [\n    { source: 'node1', target: 'node2' },\n    { source: 'node2', target: 'node3' },\n    { source: 'node3', target: 'node4' },\n    { source: 'node4', target: 'node5' },\n  ],\n};\n\nexport const ReactNodeDemo = () => {\n  const containerRef = useRef();\n  const graphRef = useRef(null);\n\n  useEffect(() => {\n    // 创建 Graph 实例\n    const graph = new Graph({\n      autoFit: 'view',\n      container: containerRef.current,\n      data,\n      node: {\n        type: 'react-node',\n        style: {\n          size: (datum) => (datum.data.expanded ? [340, 236] : [340, 105]), // 调整大小以适应内容\n          component: (data) => <IDCardNode id={data.id} data={{ ...data.data, graph: graph }} />,\n        },\n      },\n      behaviors: ['drag-element', 'zoom-canvas', 'drag-canvas'],\n      layout: {\n        type: 'snake',\n        cols: 2,\n        rowGap: 100,\n        colGap: 220,\n      },\n    });\n\n    // 渲染 Graph\n    graph.render();\n\n    // 保存 graph 实例\n    graphRef.current = graph;\n\n    return () => {\n      graph.destroy();\n    };\n  }, []);\n\n  return <div style={{ width: '100%', height: '100%' }} ref={containerRef}></div>;\n};\n\n// 渲染 React 组件到 DOM\nconst root = createRoot(document.getElementById('container'));\nroot.render(<ReactNodeDemo />);\n",title:{zh:"React 节点 身份证",en:"React node IDCard"},filename:"reactnode-idcard.jsx",isNew:!1},{id:"g2-bar-chart",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*VcCDR5myr70AAAAAAAAAAAAADmJ7AQ/original",source:"import { Rect as RectGeometry } from '@antv/g';\nimport { renderToMountedElement, stdlib } from '@antv/g2';\nimport { ExtensionCategory, Graph, Rect, register } from '@antv/g6';\n\nclass BarChart extends Rect {\n  onCreate() {\n    const [width, height] = this.getSize();\n    const group = this.upsert(\n      'chart-container',\n      RectGeometry,\n      {\n        transform: `translate(${-width / 2}, ${-height / 2})`,\n        width,\n        height,\n        fill: '#fff',\n        stroke: '#697b8c',\n        radius: 10,\n        shadowColor: '#697b8c',\n        shadowBlur: 10,\n        shadowOffsetX: 5,\n        shadowOffsetY: 5,\n      },\n      this.shapeMap.key,\n    );\n\n    const { name, value } = this.attributes;\n    renderToMountedElement(\n      // @antv/g2 Specification\n      // https://g2.antv.antgroup.com/examples/general/interval/#column\n      {\n        width,\n        height,\n        data: { value },\n        title: name,\n        type: 'interval',\n        axis: {\n          x: { title: false },\n          y: { title: false },\n        },\n        scale: {\n          y: { domain: [0, 100] },\n        },\n        encode: {\n          x: 'subject',\n          y: 'score',\n          color: 'subject',\n        },\n        legend: { color: false },\n      },\n      {\n        group,\n        library: stdlib(),\n      },\n    );\n  }\n}\n\nregister(ExtensionCategory.NODE, 'bar-chart', BarChart);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      {\n        id: 'Jack',\n        data: {\n          value: [\n            { subject: 'Math', score: 95 },\n            { subject: 'Chinese', score: 70 },\n            { subject: 'English', score: 75 },\n            { subject: 'Geography', score: 80 },\n            { subject: 'Physics', score: 90 },\n            { subject: 'Chemistry', score: 85 },\n            { subject: 'Biology', score: 70 },\n          ],\n        },\n      },\n      {\n        id: 'Aaron',\n        data: {\n          value: [\n            { subject: 'Math', score: 70 },\n            { subject: 'Chinese', score: 90 },\n            { subject: 'English', score: 90 },\n            { subject: 'Geography', score: 60 },\n            { subject: 'Physics', score: 70 },\n            { subject: 'Chemistry', score: 65 },\n            { subject: 'Biology', score: 80 },\n          ],\n        },\n      },\n      {\n        id: 'Rebecca',\n        data: {\n          value: [\n            { subject: 'Math', score: 60 },\n            { subject: 'Chinese', score: 95 },\n            { subject: 'English', score: 100 },\n            { subject: 'Geography', score: 80 },\n            { subject: 'Physics', score: 60 },\n            { subject: 'Chemistry', score: 90 },\n            { subject: 'Biology', score: 85 },\n          ],\n        },\n      },\n    ],\n  },\n  node: {\n    type: 'bar-chart',\n    style: {\n      size: 250,\n      fillOpacity: 0,\n      name: (d) => d.id,\n      value: (d) => d.data.value,\n    },\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"G2 柱状图",en:"G2 bar chart"},filename:"g2-bar-chart.js",isNew:!1},{id:"g2-activity-chart",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*GVyoQKk2WIIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle as CircleGeometry } from '@antv/g';\nimport { renderToMountedElement, stdlib } from '@antv/g2';\nimport { Circle, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass ActivityChart extends Circle {\n  onCreate() {\n    const { value } = this.attributes;\n    const radius = this.shapeMap.key.style.r;\n    const activeRadius = radius / 4;\n    const activeSize = radius / 2;\n\n    const group = this.upsert(\n      'chart-container',\n      CircleGeometry,\n      {\n        r: radius,\n        fill: '#fff',\n      },\n      this.shapeMap.key,\n    );\n\n    renderToMountedElement(\n      // @antv/g2 Specification\n      // https://g2.antv.antgroup.com/examples/general/radial/#apple-activity\n      {\n        x: -radius,\n        y: -radius,\n        width: radius * 2,\n        height: radius * 2,\n        type: 'view',\n        data: value,\n        margin: 0,\n        coordinate: { type: 'radial', innerRadius: 0.2 },\n        children: [\n          {\n            type: 'interval',\n            encode: { x: 'name', y: 1, size: activeSize, color: 'color' },\n            scale: { color: { type: 'identity' } },\n            style: { fillOpacity: 0.25 },\n            animate: false,\n            tooltip: false,\n          },\n          {\n            type: 'interval',\n            encode: { x: 'name', y: 'percent', color: 'color', size: activeSize },\n            style: {\n              radius: activeRadius,\n              shadowColor: 'rgba(0,0,0,0.45)',\n              shadowBlur: 20,\n              shadowOffsetX: -2,\n              shadowOffsetY: -5,\n            },\n            animate: {\n              enter: { type: 'fadeIn', duration: 1000 },\n            },\n            axis: false,\n            tooltip: false,\n          },\n          {\n            type: 'image',\n            encode: { x: 'name', y: 0, src: (d) => d.icon, size: 6 },\n            style: { transform: [['translateX', 6]] },\n          },\n        ],\n      },\n      {\n        group,\n        library: stdlib(),\n      },\n    );\n  }\n}\n\nconst people = ['Aaron', 'Rebecca', 'Emily', 'Liam', 'Olivia', 'Ethan', 'Sophia', 'Mason'];\n\nconst mockData = () => {\n  const getRandomPercent = () => +(Math.random() * 0.9 + 0.1).toFixed(1);\n\n  return [\n    {\n      name: 'activity1',\n      percent: getRandomPercent(),\n      color: '#1ad5de',\n      icon: 'https://gw.alipayobjects.com/zos/antfincdn/ck11Y6aRrz/shangjiantou.png',\n    },\n    {\n      name: 'activity2',\n      percent: getRandomPercent(),\n      color: '#a0ff03',\n      icon: 'https://gw.alipayobjects.com/zos/antfincdn/zY2JB7hhrO/shuangjiantou.png',\n    },\n    {\n      name: 'activity3',\n      percent: getRandomPercent(),\n      color: '#e90b3a',\n      icon: 'https://gw.alipayobjects.com/zos/antfincdn/%24qBxSxdK05/jiantou.png',\n    },\n  ];\n};\n\nregister(ExtensionCategory.NODE, 'activity-chart', ActivityChart);\n\nconst graph = new Graph({\n  container: 'container',\n  autoFit: 'view',\n  data: {\n    nodes: people.map((name, i) => ({\n      id: name,\n      style: { value: mockData() },\n    })),\n    edges: people.map((_, i) => {\n      return {\n        id: `edge${i}`,\n        source: people[i],\n        target: people[(i + 1) % 5],\n      };\n    }),\n  },\n  node: {\n    type: 'activity-chart',\n    style: {\n      size: 50,\n      labelText: (d) => d.id,\n      fillOpacity: 0,\n    },\n    animation: {\n      enter: false,\n    },\n  },\n  layout: {\n    type: 'force',\n    preventOverlap: true,\n    animated: false,\n  },\n  behaviors: ['zoom-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"G2 活动图",en:"G2 activity Chart"},filename:"g2-activity-chart.js",isNew:!1}],icon:"",id:"custom-node",title:{en:"Custom Node",zh:"自定义节点"},api:null,childrenKey:"demos",order:4},{demos:[{id:"custom-path",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*MPQTSap6ZusAAAAAAAAAAAAADmJ7AQ/original",source:"import { BaseEdge, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass PolylineEdge extends BaseEdge {\n  getKeyPath(attributes) {\n    const [sourcePoint, targetPoint] = this.getEndpoints(attributes);\n\n    return [\n      ['M', sourcePoint[0], sourcePoint[1]],\n      ['L', targetPoint[0] / 2 + (1 / 2) * sourcePoint[0], sourcePoint[1]],\n      ['L', targetPoint[0] / 2 + (1 / 2) * sourcePoint[0], targetPoint[1]],\n      ['L', targetPoint[0], targetPoint[1]],\n    ];\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'custom-polyline', PolylineEdge);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 100, y: 100, ports: [{ key: 'right', placement: [1, 0.5] }] } },\n      { id: 'node-1', style: { x: 250, y: 200, ports: [{ key: 'left', placement: [0, 0.5] }] } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  edge: {\n    type: 'custom-polyline',\n    style: {\n      startArrow: true,\n      endArrow: true,\n      stroke: '#F6BD16',\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"自定义路径",en:"Custom Path"},filename:"custom-path.js",isNew:!1},{id:"extra-label",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*RnE9SL9xkBIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Text } from '@antv/g';\nimport { Renderer } from '@antv/g-svg';\nimport { ExtensionCategory, Graph, Line, register, subStyleProps } from '@antv/g6';\n\nclass LabelEdge extends Line {\n  render(attributes, container) {\n    super.render(attributes);\n    this.drawEndLabel(attributes, container, 'start');\n    this.drawEndLabel(attributes, container, 'end');\n  }\n\n  drawEndLabel(attributes, container, type) {\n    const key = type === 'start' ? 'startLabel' : 'endLabel';\n    const [x, y] = this.getEndpoints(attributes)[type === 'start' ? 0 : 1];\n\n    const fontStyle = {\n      x,\n      y,\n      dx: type === 'start' ? 15 : -15,\n      fontSize: 16,\n      fill: 'gray',\n      textBaseline: 'middle',\n      textAlign: type,\n    };\n    const style = subStyleProps(attributes, key);\n    const text = style.text;\n    this.upsert(`label-${type}`, Text, text ? { ...fontStyle, ...style } : false, container);\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'extra-label-edge', LabelEdge);\n\nconst graph = new Graph({\n  container: 'container',\n  renderer: () => new Renderer(),\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 100, y: 100 } },\n      { id: 'node-1', style: { x: 300, y: 100 } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  edge: {\n    type: 'extra-label-edge',\n    style: {\n      startArrow: true,\n      endArrow: true,\n      stroke: '#F6BD16',\n      startLabelText: 'start',\n      endLabelText: 'end',\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"额外标签",en:"Extra Label"},filename:"extra-label.js",isNew:!1},{id:"custom-arrow",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*6wrVRoF3S98AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: new Array(6).fill(0).map((_, i) => ({ id: `node${i + 1}` })),\n  edges: [\n    {\n      id: 'custom-arrow-1',\n      source: 'node1',\n      target: 'node2',\n      style: {\n        endArrowD: 'M-14,0 L-4,-4 L0,-14 L4,-4 L14,0 L4,4 L0,14 L-4,4 Z',\n        endArrowOffset: 14,\n      },\n    },\n    {\n      id: 'custom-arrow-2',\n      source: 'node3',\n      target: 'node4',\n      style: {\n        endArrowD: 'M 3,-5 L 3,5 L 15,10 L 15,-10 Z',\n        endArrowOffset: 10,\n      },\n    },\n    {\n      id: 'image-arrow',\n      source: 'node5',\n      target: 'node6',\n      style: {\n        endArrowSrc: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        endArrowSize: 28,\n        endArrowTransform: [['rotate', 90]],\n      },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  data,\n  edge: {\n    style: {\n      stroke: '#F6BD16',\n      labelText: (d) => d.id,\n      labelBackground: true,\n      endArrow: true,\n    },\n  },\n  layout: {\n    type: 'grid',\n    cols: 2,\n  },\n});\n\ngraph.render();\n",title:{zh:"自定义箭头",en:"Custom Arrow"},filename:"custom-arrow.js",isNew:!1}],icon:"",id:"custom-edge",title:{en:"Custom Edge",zh:"自定义边"},api:null,childrenKey:"demos",order:5},{demos:[{id:"extra-button",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YBe_Ta8leloAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle, Path } from '@antv/g';\nimport { Renderer } from '@antv/g-svg';\nimport { CircleCombo, ExtensionCategory, Graph, register } from '@antv/g6';\n\nconst collapse = (x, y, r) => {\n  return [\n    ['M', x - r, y],\n    ['a', r, r, 0, 1, 0, r * 2, 0],\n    ['a', r, r, 0, 1, 0, -r * 2, 0],\n    ['M', x - r + 4, y],\n    ['L', x + r - 4, y],\n  ];\n};\n\nconst expand = (x, y, r) => {\n  return [\n    ['M', x - r, y],\n    ['a', r, r, 0, 1, 0, r * 2, 0],\n    ['a', r, r, 0, 1, 0, -r * 2, 0],\n    ['M', x - r + 4, y],\n    ['L', x - r + 2 * r - 4, y],\n    ['M', x - r + r, y - r + 4],\n    ['L', x, y + r - 4],\n  ];\n};\n\nclass CircleComboWithExtraButton extends CircleCombo {\n  render(attributes, container) {\n    super.render(attributes, container);\n    this.drawButton(attributes);\n  }\n\n  drawButton(attributes) {\n    const { collapsed } = attributes;\n    const [, height] = this.getKeySize(attributes);\n    const btnR = 8;\n    const y = height / 2 + btnR;\n    const d = collapsed ? expand(0, y, btnR) : collapse(0, y, btnR);\n\n    const hitArea = this.upsert('hit-area', Circle, { cy: y, r: 10, fill: '#fff', cursor: 'pointer' }, this);\n    this.upsert('button', Path, { stroke: '#3d81f7', d, cursor: 'pointer' }, hitArea);\n  }\n\n  onCreate() {\n    this.shapeMap['hit-area'].addEventListener('click', () => {\n      const id = this.id;\n      const collapsed = !this.attributes.collapsed;\n      const { graph } = this.context;\n      if (collapsed) graph.collapseElement(id);\n      else graph.expandElement(id);\n    });\n  }\n}\n\nregister(ExtensionCategory.COMBO, 'circle-combo-with-extra-button', CircleComboWithExtraButton);\n\nconst graph = new Graph({\n  container: 'container',\n  renderer: () => new Renderer(),\n  data: {\n    nodes: [\n      { id: 'node-0', combo: 'combo-0', style: { x: 100, y: 100 } },\n      { id: 'node-1', combo: 'combo-0', style: { x: 150, y: 100 } },\n      { id: 'node-2', style: { x: 250, y: 100 } },\n    ],\n    edges: [{ source: 'node-1', target: 'node-2' }],\n    combos: [{ id: 'combo-0' }],\n  },\n  combo: {\n    type: 'circle-combo-with-extra-button',\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n",title:{zh:"额外按钮",en:"Extra Button"},filename:"extra-button.js",isNew:!1}],icon:"",id:"custom-combo",title:{en:"Custom Combo",zh:"自定义组合"},api:null,childrenKey:"demos",order:6}],childrenKey:"examples"},{id:"behavior",title:{zh:"交互",en:"Behavior"},icon:"interaction",examples:[{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*FIj7T4ZtyoAAAAAAAAAAAAAAemJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', style: { x: 200, y: 100, labelText: '短标签' } },\n    { id: 'node2', style: { x: 360, y: 100, labelText: '中等长度的标签' } },\n    { id: 'node3', style: { x: 280, y: 220, labelText: '这是一个非常非常长的标签，需要自适应显示'} },\n  ],\n  edges: [\n    { source: 'node1', target: 'node2' },\n    { source: 'node1', target: 'node3' },\n    { source: 'node2', target: 'node3' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  behaviors: [\n    'zoom-canvas', \n    'drag-canvas', \n    { \n      key: 'auto-adapt-label', \n      type: 'auto-adapt-label',\n      padding: 0,\n      throttle: 200\n    }\n  ],\n  plugins: [{ type: 'grid-line', size: 30 }],\n  animation: true,\n});\n\ngraph.render();",title:"智能标签控制",filename:"basic.js",isNew:!1}],icon:"",id:"auto-adapt-label",title:{en:"Intelligent tag control",zh:"智能标签控制"},api:null,childrenKey:"demos",order:0},{demos:[{id:"drag",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*0f81RI8DTF0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  behaviors: ['drag-canvas'],\n});\n\ngraph.render();\n",title:{zh:"拖拽画布",en:"Drag Canvas"},filename:"drag.js",isNew:!1},{id:"scroll-xy",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*VoBZR7Z62KEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  behaviors: ['scroll-canvas'],\n});\n\ngraph.render();\n",title:{zh:"XY 轴滚动",en:"Scroll XY"},filename:"scroll-xy.js",isNew:!1},{id:"scroll-y",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*c5DCSoAYsZQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  behaviors: [{ type: 'scroll-canvas', direction: 'y' }],\n});\n\ngraph.render();\n",title:{zh:"Y 轴滚动",en:"Scroll Y"},filename:"scroll-y.js",isNew:!1},{id:"zoom",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1AXoRY9Bw-0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  behaviors: ['zoom-canvas'],\n});\n\ngraph.render();\n",title:{zh:"缩放画布",en:"Zoom Canvas"},filename:"zoom.js",isNew:!1},{id:"optimize",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*AZ4IRJkIZr8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  node: {\n    style: {\n      labelText: (datum) => datum.id,\n    },\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'scroll-canvas', 'optimize-viewport-transform'],\n});\n\ngraph.render();\n",title:{zh:"拖拽缩放画布时隐藏元素",en:"Hide Elements When Dragging and Zooming"},filename:"optimize.js",isNew:!1}],icon:"",id:"canvas",title:{en:"Canvas Manipulation",zh:"画布操作"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Rvx9SYSHGsIAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node1', combo: 'combo1', style: { x: 350, y: 200 } },\n      { id: 'node2', combo: 'combo1', style: { x: 350, y: 250 } },\n      { id: 'node3', combo: 'combo3', style: { x: 100, y: 200 } },\n    ],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'combo1', target: 'node3' },\n    ],\n    combos: [\n      { id: 'combo1', combo: 'combo2' },\n      { id: 'combo2' },\n      { id: 'combo3', style: { collapsed: true } },\n    ],\n  },\n  behaviors: ['collapse-expand', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"展开/收起",en:"Expand/Collapse"},filename:"basic.js",isNew:!1},{id:"collapse-expand",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zrL2RJtAKkAAAAAAAAAAAAAAemJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node1', combo: 'combo1', style: { x: 300, y: 100 } },\n      { id: 'node2', combo: 'combo1', style: { x: 300, y: 150 } },\n      { id: 'node3', combo: 'combo2', style: { x: 100, y: 100 } },\n      { id: 'node4', combo: 'combo2', style: { x: 50, y: 150 } },\n      { id: 'node5', combo: 'combo2', style: { x: 150, y: 150 } },\n    ],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node3', target: 'node5' },\n    ],\n    combos: [\n      { id: 'combo1', style: { labelText: '双击折叠', collapsed: true } },\n      { id: 'combo2', style: { labelText: '单击折叠', collapsed: false } },\n    ],\n  },\n  behaviors: [\n    {\n      type: 'collapse-expand',\n      trigger: 'dblclick',\n      enable: (event) => event.targetType === 'combo' && event.target.id === 'combo1',\n    },\n    {\n      type: 'collapse-expand',\n      trigger: 'click',\n      enable: (event) => event.targetType === 'combo' && event.target.id === 'combo2',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"展开/收起的触发方式",en:"Trigger of Expand/Collapse"},filename:"collapse-expand.js",isNew:!1}],icon:"",id:"combo",title:{en:"Combo Behaviors",zh:"组合交互"},api:null,childrenKey:"demos",order:0},{demos:[{id:"by-drag",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DW16QJNmRm8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: [\n    {\n      type: 'create-edge',\n      trigger: 'drag',\n      style: {\n        fill: 'red',\n        lineWidth: 2,\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"通过拖拽创建边",en:"Create Edge by Drag"},filename:"by-drag.js",isNew:!1},{id:"by-click",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DW16QJNmRm8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: [\n    {\n      type: 'create-edge',\n      trigger: 'click',\n      style: {\n        stroke: 'red',\n        lineWidth: 2,\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"通过点击创建边",en:"Create Edge by Click"},filename:"by-click.js",isNew:!1},{id:"between-combos",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*Uwn-RZXSXLQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  data: {\n    nodes: [\n      { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\n      { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\n      { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\n    ],\n    combos: [{ id: 'combo1' }, { id: 'combo2', style: { ports: [{ placement: 'center' }] } }],\n  },\n  behaviors: [\n    {\n      type: 'create-edge',\n      trigger: 'drag',\n      style: {\n        lineWidth: 2,\n        lineDash: [2, 3],\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"创建组合间连边",en:"Create Edge Between Combos"},filename:"between-combos.js",isNew:!1},{id:"custom-edge-style",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ccvHTKQ19oMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node1', target: 'node3' },\n      { source: 'node1', target: 'node4' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  behaviors: [\n    {\n      type: 'create-edge',\n      trigger: 'click',\n      onCreate: (edge) => {\n        const { style, ...rest } = edge;\n        return {\n          ...rest,\n          style: {\n            ...style,\n            stroke: 'red',\n            lineWidth: 2,\n            endArrow: true,\n          },\n        };\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"自定义边样式",en:"Custom Edge Style"},filename:"custom-edge-style.js",isNew:!1}],icon:"",id:"create-edge",title:{en:"Create Edge",zh:"创建边"},api:null,childrenKey:"demos",order:0},{demos:[{id:"fix-size",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ipfbT61guFYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node0', size: 50, label: '0', style: { x: 326, y: 268 }, states: ['selected'] },\n    { id: 'node1', size: 30, label: '1', style: { x: 280, y: 384 }, states: ['selected'] },\n    { id: 'node2', size: 30, label: '2', style: { x: 234, y: 167 } },\n    { id: 'node3', size: 30, label: '3', style: { x: 391, y: 368 } },\n    { id: 'node4', size: 30, label: '4', style: { x: 444, y: 209 } },\n    { id: 'node5', size: 30, label: '5', style: { x: 378, y: 157 } },\n    { id: 'node6', size: 15, label: '6', style: { x: 229, y: 400 } },\n    { id: 'node7', size: 15, label: '7', style: { x: 281, y: 440 } },\n    { id: 'node8', size: 15, label: '8', style: { x: 188, y: 119 } },\n    { id: 'node9', size: 15, label: '9', style: { x: 287, y: 157 } },\n    { id: 'node10', size: 15, label: '10', style: { x: 185, y: 200 } },\n    { id: 'node11', size: 15, label: '11', style: { x: 238, y: 110 } },\n    { id: 'node12', size: 15, label: '12', style: { x: 239, y: 221 } },\n    { id: 'node13', size: 15, label: '13', style: { x: 176, y: 160 } },\n    { id: 'node14', size: 15, label: '14', style: { x: 389, y: 423 } },\n    { id: 'node15', size: 15, label: '15', style: { x: 441, y: 341 } },\n    { id: 'node16', size: 15, label: '16', style: { x: 442, y: 398 } },\n  ],\n  edges: [\n    { source: 'node0', target: 'node1', label: '0-1', states: ['selected'] },\n    { source: 'node0', target: 'node2', label: '0-2' },\n    { source: 'node0', target: 'node3', label: '0-3' },\n    { source: 'node0', target: 'node4', label: '0-4' },\n    { source: 'node0', target: 'node5', label: '0-5' },\n    { source: 'node1', target: 'node6', label: '1-6' },\n    { source: 'node1', target: 'node7', label: '1-7' },\n    { source: 'node2', target: 'node8', label: '2-8' },\n    { source: 'node2', target: 'node9', label: '2-9' },\n    { source: 'node2', target: 'node10', label: '2-10' },\n    { source: 'node2', target: 'node11', label: '2-11' },\n    { source: 'node2', target: 'node12', label: '2-12' },\n    { source: 'node2', target: 'node13', label: '2-13' },\n    { source: 'node3', target: 'node14', label: '3-14' },\n    { source: 'node3', target: 'node15', label: '3-15' },\n    { source: 'node3', target: 'node16', label: '3-16' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.label,\n      size: (d) => d.size,\n      lineWidth: 1,\n    },\n  },\n  edge: { style: { labelText: (d) => d.label } },\n  behaviors: [\n    'zoom-canvas',\n    'drag-canvas',\n    {\n      key: 'fix-element-size',\n      type: 'fix-element-size',\n      enable: (event) => event.data.scale < 1,\n      state: 'selected',\n      reset: true,\n    },\n    { type: 'click-select', key: 'click-select', multiple: true },\n  ],\n  autoFit: 'center',\n});\n\ngraph.render();\n",title:{zh:"缩放过程中固定选中元素",en:"Fix Element Size While Zooming"},filename:"fix-size.js",isNew:!1},{id:"autosize-label",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ggOXQqiwhboAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node0', size: 50, label: '0', style: { x: 326, y: 268 } },\n    { id: 'node1', size: 30, label: '1', style: { x: 280, y: 384 } },\n    { id: 'node2', size: 30, label: '2', style: { x: 234, y: 167 } },\n    { id: 'node3', size: 30, label: '3', style: { x: 391, y: 368 } },\n    { id: 'node4', size: 30, label: '4', style: { x: 444, y: 209 } },\n    { id: 'node5', size: 30, label: '5', style: { x: 378, y: 157 } },\n    { id: 'node6', size: 15, label: '6', style: { x: 229, y: 400 } },\n    { id: 'node7', size: 15, label: '7', style: { x: 281, y: 440 } },\n    { id: 'node8', size: 15, label: '8', style: { x: 188, y: 119 } },\n    { id: 'node9', size: 15, label: '9', style: { x: 287, y: 157 } },\n    { id: 'node10', size: 15, label: '10', style: { x: 185, y: 200 } },\n    { id: 'node11', size: 15, label: '11', style: { x: 238, y: 110 } },\n    { id: 'node12', size: 15, label: '12', style: { x: 239, y: 221 } },\n    { id: 'node13', size: 15, label: '13', style: { x: 176, y: 160 } },\n    { id: 'node14', size: 15, label: '14', style: { x: 389, y: 423 } },\n    { id: 'node15', size: 15, label: '15', style: { x: 441, y: 341 } },\n    { id: 'node16', size: 15, label: '16', style: { x: 442, y: 398 } },\n  ],\n  edges: [\n    { source: 'node0', target: 'node1', label: '0-1' },\n    { source: 'node0', target: 'node2', label: '0-2' },\n    { source: 'node0', target: 'node3', label: '0-3' },\n    { source: 'node0', target: 'node4', label: '0-4' },\n    { source: 'node0', target: 'node5', label: '0-5' },\n    { source: 'node1', target: 'node6', label: '1-6' },\n    { source: 'node1', target: 'node7', label: '1-7' },\n    { source: 'node2', target: 'node8', label: '2-8' },\n    { source: 'node2', target: 'node9', label: '2-9' },\n    { source: 'node2', target: 'node10', label: '2-10' },\n    { source: 'node2', target: 'node11', label: '2-11' },\n    { source: 'node2', target: 'node12', label: '2-12' },\n    { source: 'node2', target: 'node13', label: '2-13' },\n    { source: 'node3', target: 'node14', label: '3-14' },\n    { source: 'node3', target: 'node15', label: '3-15' },\n    { source: 'node3', target: 'node16', label: '3-16' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n      labelMaxWidth: '200%',\n      labelWordWrap: true,\n      size: (d) => d.size,\n    },\n  },\n  edge: {\n    style: {\n      labelText: (d) => `${d.source}-${d.target}`,\n      labelWordWrap: true,\n      labelMaxLines: 2,\n      labelMaxWidth: '60%',\n    },\n  },\n  behaviors: [\n    {\n      type: 'fix-element-size',\n      key: 'fix-element-size',\n      enable: true,\n      node: [\n        {\n          shape: (shapes) =>\n            shapes.find((shape) => shape.parentElement?.className === 'label' && shape.className === 'text'),\n          fields: ['fontSize', 'lineHeight'],\n        },\n      ],\n      edge: [\n        {\n          shape: (shapes) =>\n            shapes.find((shape) => shape.parentElement?.className === 'label' && shape.className === 'text'),\n          fields: ['fontSize', 'lineHeight'],\n        },\n      ],\n    },\n    'zoom-canvas',\n    'drag-canvas',\n  ],\n  autoFit: 'center',\n});\n\ngraph.render();\n",title:{zh:"缩放过程中动态调整标签的最大长度",en:"Auto Size Label While Zooming"},filename:"autosize-label.js",isNew:!1},{id:"fix-font-size",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*nLPOTaYUEO4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node0', size: 50, label: '0', style: { x: 326, y: 268 } },\n    { id: 'node1', size: 30, label: '1', style: { x: 280, y: 384 } },\n    { id: 'node2', size: 30, label: '2', style: { x: 234, y: 167 } },\n    { id: 'node3', size: 30, label: '3', style: { x: 391, y: 368 } },\n    { id: 'node4', size: 30, label: '4', style: { x: 444, y: 209 } },\n    { id: 'node5', size: 30, label: '5', style: { x: 378, y: 157 } },\n    { id: 'node6', size: 15, label: '6', style: { x: 229, y: 400 } },\n    { id: 'node7', size: 15, label: '7', style: { x: 281, y: 440 } },\n    { id: 'node8', size: 15, label: '8', style: { x: 188, y: 119 } },\n    { id: 'node9', size: 15, label: '9', style: { x: 287, y: 157 } },\n    { id: 'node10', size: 15, label: '10', style: { x: 185, y: 200 } },\n    { id: 'node11', size: 15, label: '11', style: { x: 238, y: 110 } },\n    { id: 'node12', size: 15, label: '12', style: { x: 239, y: 221 } },\n    { id: 'node13', size: 15, label: '13', style: { x: 176, y: 160 } },\n    { id: 'node14', size: 15, label: '14', style: { x: 389, y: 423 } },\n    { id: 'node15', size: 15, label: '15', style: { x: 441, y: 341 } },\n    { id: 'node16', size: 15, label: '16', style: { x: 442, y: 398 } },\n  ],\n  edges: [\n    { source: 'node0', target: 'node1', label: '0-1' },\n    { source: 'node0', target: 'node2', label: '0-2' },\n    { source: 'node0', target: 'node3', label: '0-3' },\n    { source: 'node0', target: 'node4', label: '0-4' },\n    { source: 'node0', target: 'node5', label: '0-5' },\n    { source: 'node1', target: 'node6', label: '1-6' },\n    { source: 'node1', target: 'node7', label: '1-7' },\n    { source: 'node2', target: 'node8', label: '2-8' },\n    { source: 'node2', target: 'node9', label: '2-9' },\n    { source: 'node2', target: 'node10', label: '2-10' },\n    { source: 'node2', target: 'node11', label: '2-11' },\n    { source: 'node2', target: 'node12', label: '2-12' },\n    { source: 'node2', target: 'node13', label: '2-13' },\n    { source: 'node3', target: 'node14', label: '3-14' },\n    { source: 'node3', target: 'node15', label: '3-15' },\n    { source: 'node3', target: 'node16', label: '3-16' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: {\n      labelBackground: true,\n      labelBackgroundFill: '#FFB6C1',\n      labelBackgroundRadius: 4,\n      labelFontFamily: 'Arial',\n      labelPadding: [0, 4],\n      labelText: (d) => d.id,\n      size: (d) => d.size,\n    },\n  },\n  behaviors: [\n    'zoom-canvas',\n    'drag-canvas',\n    {\n      key: 'fix-element-size',\n      type: 'fix-element-size',\n      enable: true,\n      node: { shape: 'label' },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"缩放过程中字号保持",en:"Fix Font Size While Zooming"},filename:"fix-font-size.js",isNew:!1}],icon:"",id:"fix-element-size",title:{zh:"缩放画布时固定元素大小"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ph6tS4k6S-oAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node1', combo: 'combo1', style: { x: 110, y: 150 } },\n    { id: 'node2', combo: 'combo1', style: { x: 190, y: 150 } },\n    { id: 'node3', combo: 'combo2', style: { x: 150, y: 260 } },\n  ],\n  edges: [{ source: 'node1', target: 'node2' }],\n  combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  node: {\n    style: { labelText: (d) => d.id },\n  },\n  data,\n  behaviors: ['collapse-expand', 'focus-element'],\n});\n\ngraph.render();\n",title:"点击聚焦",filename:"basic.js",isNew:!1}],icon:"",id:"focus",title:{en:"Focus Element",zh:"元素聚焦"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*7cgmToibajkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst format = (data) => {\n  const { nodes, edges } = data;\n  return {\n    nodes: nodes.map(({ id, ...node }) => ({ id, data: node })),\n    edges: edges.map(({ id, source, target, ...edge }) => ({ id, source, target, data: edge })),\n  };\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/xiaomi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: format(data),\n      behaviors: ['hover-activate'],\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        nodeSize: 24,\n      },\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"高亮元素",en:"Hover Element"},filename:"basic.js",isNew:!1},{id:"activate-relations",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*7cgmToibajkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst format = (data) => {\n  const { nodes, edges } = data;\n  return {\n    nodes: nodes.map(({ id, ...node }) => ({ id, data: node })),\n    edges: edges.map(({ id, source, target, ...edge }) => ({ id, source, target, data: edge })),\n  };\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/xiaomi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: format(data),\n      behaviors: [\n        {\n          type: 'hover-activate',\n          degree: 1, // 👈🏻 Activate relations.\n        },\n      ],\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        nodeSize: 24,\n      },\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"高亮相邻节点",en:"Activate Relations"},filename:"activate-relations.js",isNew:!1},{id:"config-params",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*AdibQby3Ma0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst format = (data) => {\n  const { nodes, edges } = data;\n  return {\n    nodes: nodes.map(({ id, ...node }) => ({ id, data: node })),\n    edges: edges.map(({ id, source, target, ...edge }) => ({ id, source, target, data: edge })),\n  };\n};\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/xiaomi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data: format(data),\n      node: {\n        style: { size: 30 },\n        state: {\n          highlight: {\n            fill: '#D580FF',\n            halo: true,\n            lineWidth: 0,\n          },\n          dim: {\n            fill: '#99ADD1',\n          },\n        },\n      },\n      edge: {\n        state: {\n          highlight: {\n            stroke: '#D580FF',\n          },\n        },\n      },\n      behaviors: [\n        {\n          type: 'hover-activate',\n          enable: (event) => event.targetType === 'node',\n          degree: 1, // 👈🏻 Activate relations.\n          state: 'highlight',\n          inactiveState: 'dim',\n          onHover: (event) => {\n            event.view.setCursor('pointer');\n          },\n          onHoverEnd: (event) => {\n            event.view.setCursor('default');\n          },\n        },\n      ],\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        nodeSize: 24,\n      },\n      animation: false,\n    });\n\n    graph.render();\n  });\n",title:{zh:"定制参数",en:"Configurations for Activate Relations"},filename:"config-params.js",isNew:!1}],icon:"",id:"highlight-element",title:{en:"Highlight Element",zh:"高亮元素"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ZPt0SKT5JXQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle as CircleGeometry } from '@antv/g';\nimport { CanvasEvent, Circle, ExtensionCategory, Graph, NodeEvent, register } from '@antv/g6';\n\nclass LightNode extends Circle {\n  render(attributes, container) {\n    super.render(attributes, container);\n    this.upsert('light', CircleGeometry, { r: 8, fill: '#0f0', cx: 0, cy: -25 }, container);\n  }\n}\n\nregister(ExtensionCategory.NODE, 'light', LightNode);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node1', style: { x: 100, y: 150 } },\n      { id: 'node2', style: { x: 300, y: 150 } },\n    ],\n    edges: [{ source: 'node1', target: 'node2' }],\n  },\n  node: {\n    type: 'light',\n    style: {\n      size: 100,\n      labelText: (d) => d.style.labelText || 'Click the Light',\n      labelPlacement: 'center',\n      labelBackground: true,\n      labelBackgroundFill: '#fff',\n      labelBackgroundFillOpacity: 0.8,\n    },\n  },\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n\ngraph.on(NodeEvent.CLICK, (event) => {\n  const { target, originalTarget } = event;\n  if (originalTarget.className === 'light') {\n    graph.updateNodeData([{ id: target.id, states: ['selected'], style: { labelText: 'Clicked!' } }]);\n    graph.draw();\n  }\n});\n\ngraph.on(CanvasEvent.CLICK, () => {\n  const selectedIds = graph.getElementDataByState('node', 'selected').map((node) => node.id);\n  graph.updateNodeData(selectedIds.map((id) => ({ id, states: [], style: { labelText: 'Click the Light' } })));\n  graph.draw();\n});\n",title:{zh:"指定图形响应事件",en:"Specify the shape response event"},filename:"basic.js",isNew:!1}],icon:"",id:"inner-event",title:{en:"Inner Element Event",zh:"元素内部事件"},api:null,childrenKey:"demos",order:0},{demos:[{id:"click",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*F0RGQ67xbGYAAAAAAAAAAAAAARQnAQ",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  layout: {\n    type: 'grid',\n  },\n  data: {\n    nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }],\n    edges: [\n      { source: 'node1', target: 'node2' },\n      { source: 'node2', target: 'node3' },\n      { source: 'node3', target: 'node4' },\n      { source: 'node4', target: 'node5' },\n    ],\n  },\n  node: {\n    style: {\n      fill: '#E4504D',\n    },\n    state: {\n      active: {\n        fill: '#0b0',\n      },\n    },\n  },\n  behaviors: [\n    {\n      type: 'click-select',\n      degree: 1,\n      state: 'active',\n      unselectedState: 'inactive',\n      multiple: true,\n      trigger: ['shift'],\n    },\n    'drag-element',\n  ],\n});\n\ngraph.render();\n",title:{zh:"点选",en:"Click Select"},filename:"click.js",isNew:!1},{id:"brush",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*OeBHQZKfEwsAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', style: { x: 200, y: 250 } },\n      { id: 'node-2', style: { x: 250, y: 200 } },\n      { id: 'node-3', style: { x: 300, y: 250 } },\n      { id: 'node-4', style: { x: 250, y: 300 } },\n    ],\n    edges: [\n      { source: 'node-1', target: 'node-2' },\n      { source: 'node-2', target: 'node-3' },\n      { source: 'node-3', target: 'node-4' },\n      { source: 'node-4', target: 'node-1' },\n    ],\n  },\n  behaviors: [\n    {\n      key: 'brush-select',\n      type: 'brush-select',\n      enable: true,\n      animation: false,\n      mode: 'default', // union intersect diff default\n      state: 'selected', // 'active', 'selected', 'inactive', ...\n      trigger: [], // ['Shift', 'Alt', 'Control', 'Drag', 'Meta', ...]\n      style: {\n        width: 0,\n        height: 0,\n        lineWidth: 4,\n        lineDash: [2, 2],\n        fill: 'linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%),linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%),linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%)',\n        stroke: 'pink',\n        fillOpacity: 0.2,\n        zIndex: 2,\n        pointerEvents: 'none',\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"框选",en:"Brush Select"},filename:"brush.js",isNew:!1},{id:"brush-combo",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*hE19RZL7iYQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  animation: false,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  data: {\n    nodes: [\n      { id: 'node-1', combo: 'combo1', style: { x: 250, y: 150, lineWidth: 0 } },\n      { id: 'node-2', combo: 'combo1', style: { x: 350, y: 150, lineWidth: 0 } },\n      { id: 'node-3', combo: 'combo2', style: { x: 250, y: 300, lineWidth: 0 } },\n    ],\n    edges: [\n      { target: 'node-1', source: 'node-2' },\n      { target: 'node-1', source: 'node-3' },\n    ],\n    combos: [{ id: 'combo1', combo: 'combo2' }, { id: 'combo2' }],\n  },\n  behaviors: [\n    {\n      type: 'brush-select',\n      immediately: true,\n      mode: 'default',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"框选组合",en:"Brush Combo"},filename:"brush-combo.js",isNew:!1},{id:"lasso",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*GSdRQ5TO9IAAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', style: { x: 200, y: 250 } },\n      { id: 'node-2', style: { x: 250, y: 200 } },\n      { id: 'node-3', style: { x: 300, y: 250 } },\n      { id: 'node-4', style: { x: 250, y: 300 } },\n    ],\n    edges: [\n      { source: 'node-1', target: 'node-2' },\n      { source: 'node-2', target: 'node-3' },\n      { source: 'node-3', target: 'node-4' },\n      { source: 'node-4', target: 'node-1' },\n    ],\n  },\n  behaviors: [\n    {\n      key: 'lasso-select',\n      type: 'lasso-select',\n      enable: true,\n      animation: false,\n      mode: 'default', // union intersect diff default\n      state: 'selected', // 'active', 'selected', 'inactive', ...\n      trigger: [], // ['Shift', 'Alt', 'Control', 'Drag', 'Meta', ...]\n      style: {\n        width: 0,\n        height: 0,\n        lineWidth: 4,\n        lineDash: [2, 2],\n        fill: 'linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%),linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%),linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%)',\n        stroke: 'pink',\n        fillOpacity: 0.2,\n        zIndex: 2,\n        pointerEvents: 'none',\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"拉索选择",en:"Lasso Select"},filename:"lasso.js",isNew:!1}],icon:"",id:"select",title:{en:"Select",zh:"选中"},api:null,childrenKey:"demos",order:0},{demos:[{id:"update",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DSVuQ6oH_m8AAAAAAAAAAAAADmJ7AQ/original",source:"import { EdgeEvent, Graph, NodeEvent } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: 'node-1',\n      style: { x: 100, y: 150, labelText: 'Hover me!' },\n    },\n    {\n      id: 'node-2',\n      style: { x: 300, y: 150, labelText: 'Hover me!' },\n    },\n  ],\n  edges: [{ source: 'node-1', target: 'node-2', style: { labelText: 'Hover me!' } }],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  behaviors: ['drag-element'],\n});\n\ngraph.render();\n\ngraph.on(NodeEvent.POINTER_ENTER, (event) => {\n  const { target } = event;\n  graph.updateNodeData([\n    { id: target.id, style: { labelText: 'Hovered', fill: 'lightgreen', labelFill: 'lightgreen' } },\n  ]);\n  graph.draw();\n});\n\ngraph.on(EdgeEvent.POINTER_ENTER, (event) => {\n  const { target } = event;\n  graph.updateEdgeData([\n    { id: target.id, style: { labelText: 'Hovered', stroke: 'lightgreen', labelFill: 'lightgreen', lineWidth: 3 } },\n  ]);\n  graph.draw();\n});\n\ngraph.on(NodeEvent.POINTER_OUT, (event) => {\n  const { target } = event;\n  graph.updateNodeData([{ id: target.id, style: { labelText: 'Hover me!', fill: '#5B8FF9', labelFill: 'black' } }]);\n  graph.draw();\n});\n\ngraph.on(EdgeEvent.POINTER_OUT, (event) => {\n  const { target } = event;\n  graph.updateEdgeData([\n    { id: target.id, style: { labelText: 'Hover me!', stroke: '#5B8FF9', labelFill: 'black', lineWidth: 1 } },\n  ]);\n  graph.draw();\n});\n",title:{zh:"更新标签",en:"Update Label"},filename:"update.js",isNew:!1}],icon:"",id:"update-label",title:{en:"Update Label",zh:"更新标签"},api:null,childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"animation",title:{zh:"动画",en:"Animation"},icon:"scatter",examples:[{demos:[{id:"enter",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*f9JTTKw-VNwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 50, y: 50 } },\n      { id: 'node-1', style: { x: 200, y: 50 } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  node: {\n    animation: {\n      enter: [\n        {\n          fields: ['opacity'],\n          duration: 1000,\n          easing: 'linear',\n        },\n      ],\n    },\n  },\n  edge: {\n    animation: {\n      enter: [\n        {\n          fields: ['opacity'],\n          duration: 1000,\n          easing: 'linear',\n        },\n      ],\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    index: 2,\n    duration: 1000,\n    easing: 'linear',\n    add: () => {\n      const { index } = config;\n      const y = 50 + 25 * index;\n      graph.addData({\n        nodes: [\n          { id: `node-${index + 1}`, style: { x: 50, y } },\n          { id: `node-${index + 2}`, style: { x: 200, y } },\n        ],\n        edges: [{ source: `node-${index + 1}`, target: `node-${index + 2}` }],\n      });\n      graph.draw();\n      config.index += 2;\n    },\n  };\n\n  const updateMapper = (key, value) => {\n    const { node, edge } = graph.getOptions();\n    node.animation.enter[0][key] = value;\n    edge.animation.enter[0][key] = value;\n    graph.setNode(node);\n    graph.setEdge(edge);\n  };\n\n  gui.add(config, 'duration', 500, 5000, 100).onChange((duration) => {\n    updateMapper('duration', duration);\n  });\n  // see: https://g.antv.antgroup.com/en/api/animation/waapi#easing-1\n  gui.add(config, 'easing', ['linear', 'ease-in-sine', 'ease-in-cubic']).onChange((easing) => {\n    updateMapper('easing', easing);\n  });\n  gui.add(config, 'add').name('Add Element');\n});\n",title:{zh:"入场动画",en:"Enter Animation"},filename:"enter.js",isNew:!1},{id:"enter-edge-path-in",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*R895Tq952I0AAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, Line, register } from '@antv/g6';\n\nclass PathInLine extends Line {\n  onCreate() {\n    const shape = this.shapeMap.key;\n    const length = shape.getTotalLength();\n    shape.animate([{ lineDash: [0, length] }, { lineDash: [length, 0] }], {\n      duration: 500,\n      fill: 'both',\n    });\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'path-in-line', PathInLine);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 50, y: 50 } },\n      { id: 'node-1', style: { x: 200, y: 50 } },\n    ],\n  },\n  edge: {\n    type: 'path-in-line',\n    animation: {\n      // disable default enter and exit animation\n      enter: false,\n      exit: false,\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    connect: () => {\n      const edge = graph.getEdgeData('edge-1');\n      if (edge) {\n        alert('The edge already exists.');\n        return;\n      }\n\n      graph.addEdgeData([{ id: 'edge-1', source: 'node-0', target: 'node-1' }]);\n      graph.draw();\n    },\n    disconnect: () => {\n      const edge = graph.getEdgeData('edge-1');\n      if (edge) {\n        graph.removeEdgeData(['edge-1']);\n        graph.draw();\n      }\n    },\n  };\n  gui.add(config, 'connect');\n  gui.add(config, 'disconnect');\n});\n",title:{zh:"边路径入场",en:"Edge Path In"},filename:"enter-edge-path-in.js",isNew:!1},{id:"update",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*C1wjRrz-gC8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 50, y: 50 } },\n      { id: 'node-1', style: { x: 200, y: 50 } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  node: {\n    animation: {\n      update: [{ fields: ['x', 'y', 'size'] }, { fields: ['fill'], shape: 'key' }],\n    },\n  },\n  edge: {\n    animation: {\n      update: [{ fields: ['sourceNode', 'targetNode'] }, { fields: ['stroke', 'lineWidth'], shape: 'key' }],\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const colors = ['red', 'blue', 'green', 'yellow', 'black', 'purple', 'orange', 'gray'];\n  let [nextOffsetY, nextSize, nextLineWidth] = [50, 50, 5];\n  const config = {\n    color: () => {\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      graph.updateData({\n        nodes: [\n          { id: 'node-0', style: { fill: color } },\n          { id: 'node-1', style: { fill: color } },\n        ],\n        edges: [{ source: 'node-0', target: 'node-1', style: { stroke: color } }],\n      });\n      graph.draw();\n    },\n    position: () => {\n      const offsetY = nextOffsetY;\n      graph.translateElementBy({\n        'node-0': [0, offsetY],\n        'node-1': [0, offsetY],\n      });\n      nextOffsetY = -nextOffsetY;\n    },\n    size: () => {\n      const size = nextSize;\n      const lineWidth = nextLineWidth;\n      graph.updateData({\n        nodes: [\n          { id: 'node-0', style: { size } },\n          { id: 'node-1', style: { size } },\n        ],\n        edges: [{ source: 'node-0', target: 'node-1', style: { lineWidth } }],\n      });\n      graph.draw();\n      [nextSize, nextLineWidth] = [nextSize === 50 ? 16 : 50, nextLineWidth === 5 ? 1 : 5];\n    },\n  };\n  gui.add(config, 'color').name('fill & stroke');\n  gui.add(config, 'position').name('position');\n  gui.add(config, 'size').name('size & lineWidth');\n});\n",title:{zh:"更新动画",en:"Update Animation"},filename:"update.js",isNew:!1},{id:"exit",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*UGu1Qolzzc4AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: Array.from({ length: 10 }, (_, i) => ({\n      id: `node-${i}`,\n      style: { x: i % 2 === 0 ? 50 : 200, y: 25 + 50 * Math.floor(i / 2) },\n    })),\n    edges: Array.from({ length: 5 }, (_, i) => ({\n      id: `edge-${i}`,\n      source: `node-${i * 2}`,\n      target: `node-${i * 2 + 1}`,\n    })),\n  },\n  node: {\n    animation: {\n      exit: [\n        {\n          fields: ['opacity'],\n          duration: 1000,\n          easing: 'linear',\n        },\n      ],\n    },\n  },\n  edge: {\n    animation: {\n      exit: [\n        {\n          fields: ['opacity'],\n          duration: 1000,\n          easing: 'linear',\n        },\n      ],\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    index: 4,\n    duration: 1000,\n    easing: 'linear',\n    remove: () => {\n      const { index } = config;\n      if (index === -1) return;\n      graph.removeData({\n        nodes: [`node-${index * 2}`, `node-${index * 2 + 1}`],\n        edges: [`edge-${index}`],\n      });\n      graph.draw();\n      config.index--;\n    },\n  };\n  const updateMapper = (key, value) => {\n    const { node, edge } = graph.getOptions();\n    node.animation.exit[0][key] = value;\n    edge.animation.exit[0][key] = value;\n    graph.setNode(node);\n    graph.setEdge(edge);\n  };\n  gui.add(config, 'duration', 500, 5000, 100).onChange((duration) => {\n    updateMapper('duration', duration);\n  });\n  // see: https://g.antv.antgroup.com/en/api/animation/waapi#easing-1\n  gui.add(config, 'easing', ['linear', 'ease-in-sine', 'ease-in-cubic']).onChange((easing) => {\n    updateMapper('easing', easing);\n  });\n  gui.add(config, 'remove').name('Remove Element');\n});\n",title:{zh:"退场动画",en:"Exit Animation"},filename:"exit.js",isNew:!1},{id:"combo-collapse-expand",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*wzK3T6oBEg0AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', combo: 'combo-2', style: { x: 120, y: 100 } },\n      { id: 'node-2', combo: 'combo-1', style: { x: 300, y: 200 } },\n      { id: 'node-3', combo: 'combo-1', style: { x: 200, y: 300 } },\n    ],\n    edges: [\n      { id: 'edge-1', source: 'node-1', target: 'node-2' },\n      { id: 'edge-2', source: 'node-2', target: 'node-3' },\n    ],\n    combos: [\n      {\n        id: 'combo-1',\n        type: 'rect',\n        combo: 'combo-2',\n        style: {\n          collapsed: true,\n        },\n      },\n      { id: 'combo-2' },\n    ],\n  },\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  combo: {\n    style: {\n      labelText: (d) => d.id,\n      lineDash: 0,\n      collapsedLineDash: [5, 5],\n    },\n  },\n  behaviors: [{ type: 'drag-element' }, 'collapse-expand'],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    collapse: () => {\n      graph.collapseElement('combo-1');\n    },\n    expand: () => {\n      graph.expandElement('combo-1');\n    },\n  };\n  gui.add(config, 'collapse');\n  gui.add(config, 'expand');\n});\n",title:{zh:"组合展开/收起",en:"Combo Collapse/Expand"},filename:"combo-collapse-expand.js",isNew:!1}],icon:"",id:"basic",title:{en:"Basic Animation",zh:"基本动画"},api:null,childrenKey:"demos",order:0},{demos:[{id:"ant-line",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*EonQSohWxtYAAAAAAAAAAAAADmJ7AQ/original",source:"import { ExtensionCategory, Graph, Line, register } from '@antv/g6';\n\nclass AntLine extends Line {\n  onCreate() {\n    const shape = this.shapeMap.key;\n    shape.animate([{ lineDashOffset: -20 }, { lineDashOffset: 0 }], {\n      duration: 500,\n      iterations: Infinity,\n    });\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'ant-line', AntLine);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: 'node-1', style: { x: 50, y: 50 } },\n      { id: 'node-2', style: { x: 200, y: 50 } },\n      { id: 'node-3', style: { x: 125, y: 150 } },\n    ],\n    edges: [\n      { source: 'node-1', target: 'node-2' },\n      { source: 'node-2', target: 'node-3' },\n      { source: 'node-3', target: 'node-1' },\n    ],\n  },\n  edge: {\n    type: 'ant-line',\n    style: {\n      lineDash: [10, 10],\n    },\n  },\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  const config = {\n    lineDash: 10,\n  };\n  gui.add(config, 'lineDash', 1, 20, 1).onChange((lineDash) => {\n    graph.setEdge({\n      type: 'ant-line',\n      style: {\n        lineDash: [lineDash, lineDash],\n      },\n    });\n    graph.draw();\n  });\n});\n",title:{zh:"蚂蚁线",en:"Ant Line"},filename:"ant-line.js",isNew:!1},{id:"fly-marker",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*CN6ZQ4M8c80AAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle } from '@antv/g';\nimport { Renderer } from '@antv/g-svg';\nimport { CubicHorizontal, ExtensionCategory, Graph, register, subStyleProps } from '@antv/g6';\n\nclass FlyMarkerCubic extends CubicHorizontal {\n  getMarkerStyle(attributes) {\n    return { r: 5, fill: '#c3d5f9', offsetPath: this.shapeMap.key, ...subStyleProps(attributes, 'marker') };\n  }\n\n  onCreate() {\n    const marker = this.upsert('marker', Circle, this.getMarkerStyle(this.attributes), this);\n    marker.animate([{ offsetDistance: 0 }, { offsetDistance: 1 }], {\n      duration: 3000,\n      iterations: Infinity,\n    });\n  }\n}\n\nregister(ExtensionCategory.EDGE, 'fly-marker-cubic', FlyMarkerCubic);\n\nconst graph = new Graph({\n  container: 'container',\n  renderer: () => new Renderer(),\n  data: {\n    nodes: [\n      { id: 'node-0', style: { x: 50, y: 50 } },\n      { id: 'node-1', style: { x: 200, y: 200 } },\n    ],\n    edges: [{ source: 'node-0', target: 'node-1' }],\n  },\n  edge: {\n    type: 'fly-marker-cubic',\n    style: {\n      lineDash: [10, 10],\n    },\n  },\n});\n\ngraph.render();\n",title:{zh:"飞行标记",en:"Fly Marker"},filename:"fly-marker.js",isNew:!1},{id:"breathing-circle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*b-o-R5irgzsAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass BreathingCircle extends Circle {\n  onCreate() {\n    const halo = this.shapeMap.halo;\n    halo.animate([{ lineWidth: 0 }, { lineWidth: 20 }], {\n      duration: 1000,\n      iterations: Infinity,\n      direction: 'alternate',\n    });\n  }\n}\n\nregister(ExtensionCategory.NODE, 'breathing-circle', BreathingCircle);\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }],\n  },\n  node: {\n    type: 'breathing-circle',\n    style: {\n      size: 50,\n      halo: true,\n    },\n    palette: ['#3875f6', '#efb041', '#ec5b56', '#72c240'],\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"呼吸效果",en:"Fly Marker"},filename:"breathing-circle.js",isNew:!1},{id:"ripple-circle",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*blf6TZXDzckAAAAAAAAAAAAADmJ7AQ/original",source:"import { Circle as CircleGeometry } from '@antv/g';\nimport { Renderer } from '@antv/g-svg';\nimport { Circle, ExtensionCategory, Graph, register } from '@antv/g6';\n\nclass RippleCircle extends Circle {\n  onCreate() {\n    const { fill } = this.attributes;\n    const r = this.shapeMap.key.style.r;\n    const length = 5;\n    const fillOpacity = 0.5;\n\n    Array.from({ length }).map((_, index) => {\n      const ripple = this.upsert(\n        `ripple-${index}`,\n        CircleGeometry,\n        {\n          r,\n          fill,\n          fillOpacity,\n        },\n        this,\n      );\n      ripple.animate(\n        [\n          { r, fillOpacity },\n          { r: r + length * 5, fillOpacity: 0 },\n        ],\n        {\n          duration: 1000 * length,\n          iterations: Infinity,\n          delay: 1000 * index,\n          easing: 'ease-cubic',\n        },\n      );\n    });\n  }\n}\n\nregister(ExtensionCategory.NODE, 'ripple-circle', RippleCircle);\n\nconst graph = new Graph({\n  container: 'container',\n  renderer: () => new Renderer(),\n  data: {\n    nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }],\n  },\n  node: {\n    type: 'ripple-circle',\n    animation: {\n      enter: false,\n    },\n    style: {\n      size: 50,\n    },\n    palette: ['#3875f6', '#efb041', '#ec5b56', '#72c240'],\n  },\n  layout: {\n    type: 'grid',\n  },\n});\n\ngraph.render();\n",title:{zh:"涟漪效果",en:"Ripple"},filename:"ripple-circle.js",isNew:!1}],icon:"",id:"persistence",title:{en:"Persistence Animation",zh:"持续动画"},api:null,childrenKey:"demos",order:1},{demos:[{id:"zoom",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zZPpRoMmlvMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/force.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'force',\n      },\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      const animation = {\n        duration: 500,\n        easing: 'linear',\n      };\n      const config = {\n        zoomIn: () => {\n          graph.zoomBy(1.2, animation);\n        },\n        zoomOut: () => {\n          graph.zoomBy(0.8, animation);\n        },\n      };\n      gui.add(config, 'zoomIn');\n      gui.add(config, 'zoomOut');\n    });\n  });\n",title:{zh:"视口缩放",en:"Zoom Viewport"},filename:"zoom.js",isNew:!1},{id:"translate",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*zZPpRoMmlvMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/force.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'force',\n      },\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      const animation = {\n        duration: 500,\n        easing: 'linear',\n      };\n      const config = {\n        Up: () => graph.translateBy([0, -50], animation),\n        Down: () => graph.translateBy([0, 50], animation),\n        Left: () => graph.translateBy([-50, 0], animation),\n        Right: () => graph.translateBy([50, 0], animation),\n      };\n      gui.add(config, 'Up').name('⬆️ Up');\n      gui.add(config, 'Down').name('⬇️ Down');\n      gui.add(config, 'Left').name('⬅️ Left');\n      gui.add(config, 'Right').name('➡️ Right');\n    });\n  });\n",title:{zh:"视口平移",en:"Translate Viewport"},filename:"translate.js",isNew:!1},{id:"rotate",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-yI2QqHqPQEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/force.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      layout: {\n        type: 'force',\n      },\n    });\n\n    graph.render();\n\n    window.addPanel((gui) => {\n      const animation = {\n        duration: 500,\n        easing: 'linear',\n      };\n      const config = {\n        clockwise: () => graph.rotateBy(-10, animation),\n        anticlockwise: () => graph.rotateBy(10, animation),\n      };\n      gui.add(config, 'clockwise').name('🔁 Clockwise');\n      gui.add(config, 'anticlockwise').name('🔄 Anti-clockwise');\n    });\n  });\n",title:{zh:"视口旋转",en:"Rotate Viewport"},filename:"rotate.js",isNew:!1}],icon:"",id:"viewport",title:{en:"Viewport Animation",zh:"视口动画"},api:null,childrenKey:"demos",order:2}],childrenKey:"examples"},{id:"plugin",title:{zh:"插件",en:"Plugin"},icon:"tool",examples:[{demos:[{id:"background",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*eCkYR7cLfWwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  width: 800,\n  height: 600,\n  data,\n  layout: { type: 'grid' },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'background',\n      width: '800px',\n      height: '600px',\n      backgroundImage: 'url(https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*0Qq0ToQm1rEAAAAAAAAAAAAADmJ7AQ/original)',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      opacity: 0.2,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"背景图片",en:"Background Image"},filename:"background.js",isNew:!1}],icon:"",id:"background",title:{en:"Background",zh:"Background 背景图"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*JwvxTbOoWQ8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/collection.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const groupedNodesByCluster = data.nodes.reduce((acc, node) => {\n      const cluster = node.data.cluster;\n      acc[cluster] ||= [];\n      acc[cluster].push(node.id);\n      return acc;\n    }, {});\n\n    const createStyle = (baseColor) => ({\n      fill: baseColor,\n      stroke: baseColor,\n      labelFill: '#fff',\n      labelPadding: 2,\n      labelBackgroundFill: baseColor,\n      labelBackgroundRadius: 5,\n    });\n\n    const graph = new Graph({\n      container: 'container',\n      data,\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n      node: {\n        palette: { field: 'cluster' },\n      },\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        linkDistance: (d) => {\n          if (d.source === 'node0' || d.target === 'node0') {\n            return 200;\n          }\n          return 80;\n        },\n      },\n      plugins: [\n        {\n          key: 'bubble-sets-a',\n          type: 'bubble-sets',\n          members: groupedNodesByCluster['a'],\n          labelText: 'cluster-a',\n          ...createStyle('#1783FF'),\n        },\n        {\n          key: 'bubble-sets-b',\n          type: 'bubble-sets',\n          members: groupedNodesByCluster['b'],\n          labelText: 'cluster-b',\n          ...createStyle('#00C9C9'),\n        },\n        {\n          key: 'bubble-sets-c',\n          type: 'bubble-sets',\n          members: groupedNodesByCluster['c'],\n          labelText: 'cluster-c',\n          ...createStyle('#F08F56'),\n        },\n        {\n          key: 'bubble-sets-d',\n          type: 'bubble-sets',\n          members: groupedNodesByCluster['d'],\n          labelText: 'cluster-d',\n          ...createStyle('#D580FF'),\n        },\n      ],\n      autoFit: 'center',\n    });\n\n    graph.render();\n  });\n",title:{zh:"用气泡集包裹节点集",en:"Use Bubblesets to wrap the node sets."},filename:"basic.js",isNew:!1}],icon:"",id:"bubble-sets",title:{en:"Bubblesets",zh:"Bubblesets 气泡集"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*9o1lRbfc3YMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'contextmenu',\n      trigger: 'contextmenu', // 'click' or 'contextmenu'\n      onClick: (v) => {\n        alert('You have clicked the「' + v + '」item');\n      },\n      getItems: () => {\n        return [\n          { name: '展开一度关系', value: 'spread' },\n          { name: '查看详情', value: 'detail' },\n        ];\n      },\n      enable: (e) => e.targetType === 'node',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"上下文菜单",en:"Context Menu"},filename:"basic.js",isNew:!1}],icon:"",id:"contextMenu",title:{en:"ContextMenu",zh:"Contextmenu 上下文菜单"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*aC-VQJmDwdkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/circular.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      layout: {\n        type: 'circular',\n      },\n      node: { style: { size: 20 } },\n      behaviors: ['drag-canvas', 'drag-element'],\n      plugins: [\n        {\n          key: 'edge-bundling',\n          type: 'edge-bundling',\n          bundleThreshold: 0.1,\n        },\n      ],\n    });\n\n    graph.render();\n  });\n",title:{zh:"边绑定",en:"Edge Bundling"},filename:"basic.js",isNew:!1}],icon:"",id:"edge-bundling",title:{en:"EdgeBundling",zh:"EdgeBundling 边绑定"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*62FuSY-LFEIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      node: {\n        style: { size: 16 },\n        palette: {\n          field: (datum) => Math.floor(datum.style?.y / 60),\n        },\n      },\n      edge: {\n        style: {\n          label: false,\n          labelText: (d) => d.data.value?.toString(),\n          stroke: '#ccc',\n        },\n      },\n      plugins: [\n        {\n          key: 'edge-filter-lens',\n          type: 'edge-filter-lens',\n        },\n      ],\n    });\n    graph.render();\n\n    const config = {\n      trigger: 'pointermove',\n      scaleRBy: 'wheel',\n      nodeType: 'both',\n    };\n\n    window.addPanel((gui) => {\n      gui\n        .add(config, 'trigger', ['pointermove', 'click', 'drag'])\n        .name('Trigger')\n        .onChange((value) => {\n          graph.updatePlugin({\n            key: 'edge-filter-lens',\n            trigger: value,\n          });\n        });\n      gui\n        .add(config, 'scaleRBy', ['wheel', 'unset'])\n        .name('Scale R by')\n        .onChange((value) => {\n          graph.updatePlugin({\n            key: 'edge-filter-lens',\n            scaleRBy: value,\n          });\n        });\n      gui\n        .add(config, 'nodeType', ['source', 'target', 'both', 'either'])\n        .name('Node Type')\n        .onChange((value) => {\n          graph.updatePlugin({\n            key: 'edge-filter-lens',\n            nodeType: value,\n          });\n        });\n    });\n  });\n",title:{zh:"边过滤镜",en:"Edge Filter Lens"},filename:"basic.js",isNew:!1}],icon:"",id:"edge-filter-lens",title:{en:"EdgeFilterLens",zh:"EdgeFilterLens 边过滤镜"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*SPqiTLwdZ9MAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nfetch('https://assets.antv.antgroup.com/g6/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      node: {\n        style: {\n          size: (datum) => datum.id.length * 2 + 10,\n          label: false,\n          labelText: (datum) => datum.id,\n          labelBackground: true,\n          icon: false,\n          iconFontFamily: 'iconfont',\n          iconText: '\\ue6f6',\n          iconFill: '#fff',\n        },\n        palette: {\n          type: 'group',\n          field: (datum) => datum.id,\n          color: ['#1783FF', '#00C9C9', '#F08F56', '#D580FF'],\n        },\n      },\n      edge: {\n        style: {\n          stroke: '#e2e2e2',\n        },\n      },\n      plugins: [{ key: 'fisheye', type: 'fisheye', nodeStyle: { label: true, icon: true } }],\n    });\n    graph.render();\n  });\n",title:{zh:"鱼眼放大镜",en:"Fisheye"},filename:"basic.js",isNew:!1},{id:"custom",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*-VyPRY-2dMIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph, iconfont } from '@antv/g6';\n\nconst style = document.createElement('style');\nstyle.innerHTML = `@import url('${iconfont.css}');`;\ndocument.head.appendChild(style);\n\nfetch('https://assets.antv.antgroup.com/g6/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      autoFit: 'view',\n      data,\n      node: {\n        style: {\n          size: (datum) => datum.id.length * 2 + 10,\n          label: false,\n          labelText: (datum) => datum.id,\n          labelBackground: true,\n          icon: false,\n          iconFontFamily: 'iconfont',\n          iconText: '\\ue6f6',\n          iconFill: '#fff',\n        },\n        palette: {\n          type: 'group',\n          field: (datum) => datum.id,\n          color: ['#1783FF', '#00C9C9', '#F08F56', '#D580FF'],\n        },\n      },\n      edge: {\n        style: {\n          stroke: '#e2e2e2',\n        },\n      },\n      plugins: [\n        {\n          key: 'fisheye',\n          type: 'fisheye',\n          trigger: 'click',\n          scaleRBy: 'wheel',\n          scaleDBy: 'drag',\n          style: { fill: '#F08F56', stroke: '#666', lineDash: [5, 5] },\n          nodeStyle: { label: true, icon: true },\n        },\n      ],\n    });\n    graph.render();\n\n    const config = {\n      trigger: 'click',\n      scaleRBy: 'wheel',\n      scaleDBy: 'drag',\n      showDPercent: true,\n      borderless: true,\n    };\n\n    window.addPanel((gui) => {\n      gui\n        .add(config, 'trigger', ['pointermove', 'click', 'drag'])\n        .name('Trigger')\n        .onChange((value) => {\n          graph.updatePlugin({\n            key: 'fisheye',\n            trigger: value,\n          });\n        });\n      gui\n        .add(config, 'scaleRBy', ['wheel', 'drag', 'unset'])\n        .name('Scale R by')\n        .onChange((value) => {\n          graph.updatePlugin({\n            key: 'fisheye',\n            scaleRBy: value,\n          });\n        });\n      gui\n        .add(config, 'scaleDBy', ['wheel', 'drag', 'unset'])\n        .name('Scale D by')\n        .onChange((value) => {\n          graph.updatePlugin({\n            key: 'fisheye',\n            scaleDBy: value,\n          });\n        });\n      gui\n        .add(config, 'showDPercent')\n        .name('Show D Percent')\n        .onChange((value) => {\n          graph.updatePlugin({\n            key: 'fisheye',\n            showDPercent: value,\n          });\n        });\n      gui\n        .add(config, 'borderless')\n        .name('Borderless')\n        .onChange((value) => {\n          const style = value\n            ? { fill: 'transparent', lineDash: 0, stroke: 'transparent' }\n            : { fill: '#F08F56', lineDash: [5, 5], stroke: '#666' };\n          graph.updatePlugin({\n            key: 'fisheye',\n            style,\n          });\n        });\n    });\n  });\n",title:{zh:"自定义鱼眼放大镜",en:"Custom Fisheye"},filename:"custom.js",isNew:!1}],icon:"",id:"fisheye",title:{en:"Fisheye",zh:"Fisheye 鱼眼放大镜"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*KQlbQZxPOvgAAAAAAAAAAAAAemJ7AQ/fmt.avif",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  data: { nodes: Array.from({ length: 20 }).map((_, i) => ({ id: `node${i}` })) },\n  autoFit: 'center',\n  background: '#fff',\n  plugins: [\n    {\n      type: 'fullscreen',\n      key: 'fullscreen',\n    },\n    function () {\n      const graph = this;\n      return {\n        type: 'toolbar',\n        key: 'toolbar',\n        position: 'top-left',\n        onClick: (item) => {\n          const fullscreenPlugin = graph.getPluginInstance('fullscreen');\n          if (item === 'request-fullscreen') {\n            fullscreenPlugin.request();\n          }\n          if (item === 'exit-fullscreen') {\n            fullscreenPlugin.exit();\n          }\n        },\n        getItems: () => {\n          return [\n            { id: 'request-fullscreen', value: 'request-fullscreen' },\n            { id: 'exit-fullscreen', value: 'exit-fullscreen' },\n          ];\n        },\n      };\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"全屏展示",en:"Fullscreen"},filename:"basic.js",isNew:!1}],icon:"",id:"fullscreen",title:{en:"Fullscreen",zh:"Fullscreen 全屏展示"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*s66AQJ3FJMMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: { type: 'grid' },\n  behaviors: ['drag-canvas'],\n  plugins: [{ key: 'grid-line', type: 'grid-line', follow: false }],\n});\n\ngraph.render();\n\nwindow.addPanel((gui) => {\n  gui\n    .add({ follow: false }, 'follow')\n    .name('Follow')\n    .onChange((value) => {\n      graph.updatePlugin({\n        key: 'grid-line',\n        follow: value,\n      });\n    });\n});\n",title:{zh:"画布网格",en:"Grid Line"},filename:"basic.js",isNew:!1}],icon:"",id:"grid-line",title:{en:"Grid Line",zh:"Grid Line 网格线"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*5K19SrUgO6QAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [{ id: 'node-0', style: { x: 200, y: 150 } }],\n  },\n  node: {\n    style: {\n      size: 60,\n      labelText: 'Drag Me!',\n      labelPlacement: 'middle',\n      labelFill: '#fff',\n    },\n  },\n  behaviors: ['drag-element'],\n  plugins: [\n    {\n      type: 'history',\n      key: 'history',\n    },\n  ],\n});\n\ngraph.render().then(() => {\n  window.addPanel((gui) => {\n    const history = graph.getPluginInstance('history');\n    const config = {\n      undo: () => {\n        if (history.canUndo()) history.undo();\n      },\n      redo: () => {\n        if (history.canRedo()) history.redo();\n      },\n    };\n    gui.add(config, 'undo').name('⬅️ undo');\n    gui.add(config, 'redo').name('➡️ redo');\n  });\n});\n",title:{zh:"撤销重做",en:"Redo/Undo"},filename:"basic.js",isNew:!1}],icon:"",id:"history",title:{en:"History",zh:"History 撤销重做"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YXHtRZUKAZcAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/collection.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const groupedNodesByCluster = data.nodes.reduce((acc, node) => {\n      const cluster = node.data.cluster;\n      acc[cluster] ||= [];\n      acc[cluster].push(node.id);\n      return acc;\n    }, {});\n\n    const createStyle = (baseColor) => ({\n      fill: baseColor,\n      stroke: baseColor,\n      labelFill: '#fff',\n      labelPadding: 2,\n      labelBackgroundFill: baseColor,\n      labelBackgroundRadius: 5,\n    });\n\n    const graph = new Graph({\n      container: 'container',\n      data,\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n      node: {\n        palette: { field: 'cluster' },\n      },\n      layout: {\n        type: 'force',\n        preventOverlap: true,\n        linkDistance: (d) => {\n          if (d.source === 'node0' || d.target === 'node0') {\n            return 200;\n          }\n          return 80;\n        },\n      },\n      plugins: [\n        {\n          key: 'hull-a',\n          type: 'hull',\n          members: groupedNodesByCluster['a'],\n          labelText: 'cluster-a',\n          ...createStyle('#1783FF'),\n        },\n        {\n          key: 'hull-b',\n          type: 'hull',\n          members: groupedNodesByCluster['b'],\n          labelText: 'cluster-b',\n          ...createStyle('#00C9C9'),\n        },\n        {\n          key: 'hull-c',\n          type: 'hull',\n          members: groupedNodesByCluster['c'],\n          labelText: 'cluster-c',\n          ...createStyle('#F08F56'),\n        },\n        {\n          key: 'hull-d',\n          type: 'hull',\n          members: groupedNodesByCluster['d'],\n          labelText: 'cluster-d',\n          ...createStyle('#D580FF'),\n        },\n      ],\n      autoFit: 'center',\n    });\n\n    graph.render();\n  });\n",title:{zh:"用轮廓包裹节点集合",en:"Use hulls to wrap the node sets."},filename:"basic.js",isNew:!1}],icon:"",id:"hull",title:{en:"Hull",zh:"Hull 节点集轮廓包裹"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*u9w9T7X5fZoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'node-1', type: 'circle', data: { cluster: 'node-type1' } },\n    { id: 'node-2', type: 'rect', data: { cluster: 'node-type2' } },\n    { id: 'node-3', type: 'triangle', data: { cluster: 'node-type3' } },\n    { id: 'node-4', type: 'diamond', data: { cluster: 'node-type4' } },\n  ],\n  edges: [\n    { source: 'node-1', target: 'node-2', data: { cluster: 'edge-type1' } },\n    { source: 'node-1', target: 'node-4', data: { cluster: 'edge-type2' } },\n    { source: 'node-3', target: 'node-4' },\n    { source: 'node-2', target: 'node-4', data: { cluster: 'edge-type3' } },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: { size: 32 },\n    palette: {\n      field: 'cluster',\n    },\n  },\n  layout: {\n    type: 'force',\n  },\n  plugins: [\n    {\n      type: 'legend',\n      nodeField: 'cluster',\n      edgeField: 'cluster',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"默认图例",en:"Default legend"},filename:"basic.js",isNew:!1},{id:"click",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*YMxxTZwt54UAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: '1', type: 'circle', data: { cluster: 'node-type1' } },\n    { id: '2', type: 'rect', data: { cluster: 'node-type2' } },\n    { id: '3', type: 'triangle', data: { cluster: 'node-type3' } },\n    { id: '4', type: 'diamond', data: { cluster: 'node-type4' } },\n  ],\n  edges: [\n    { source: '1', target: '2', type: 'quadratic', data: { cluster: 'edge-type1' } },\n    { source: '1', target: '4', data: { cluster: 'edge-type2' } },\n    { source: '3', target: '4' },\n    { source: '2', target: '4', data: { cluster: 'edge-type3' } },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: { size: 32 },\n    palette: { field: 'cluster' },\n  },\n  edge: {\n    palette: { field: 'cluster' },\n  },\n  layout: {\n    type: 'force',\n  },\n  plugins: [\n    {\n      type: 'legend',\n      nodeField: 'cluster',\n      edgeField: 'cluster',\n      trigger: 'click',\n      gridRow: 1,\n      gridCol: 4,\n      itemLabelFontSize: 12,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"点击图例",en:"Click legend"},filename:"click.js",isNew:!1},{id:"style",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DgNhR5MeC9kAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    {\n      id: '1',\n      type: 'circle',\n      data: { cluster: 'node-type1' },\n    },\n    {\n      id: '2',\n      type: 'rect',\n      data: { cluster: 'node-type2' },\n    },\n    {\n      id: '3',\n      type: 'triangle',\n      data: { cluster: 'node-type3' },\n    },\n    {\n      id: '4',\n      type: 'diamond',\n      data: { cluster: 'node-type4' },\n    },\n  ],\n  edges: [\n    {\n      id: '1-2',\n      source: '1',\n      target: '2',\n      type: 'quadratic',\n      data: { cluster: 'edge-type1' },\n    },\n    {\n      id: '1-4',\n      source: '1',\n      target: '4',\n      data: { cluster: 'edge-type2' },\n    },\n    {\n      id: '3-4',\n      source: '3',\n      target: '4',\n    },\n    {\n      id: '2-4',\n      source: '2',\n      target: '4',\n      data: { cluster: 'edge-type3' },\n    },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  node: {\n    style: { size: 32 },\n    palette: { field: 'cluster' },\n  },\n  edge: {\n    palette: { field: 'cluster' },\n  },\n  layout: {\n    type: 'force',\n  },\n  plugins: [\n    {\n      type: 'legend',\n      nodeField: 'cluster',\n      edgeField: 'cluster',\n      titleText: 'Legend Title',\n      trigger: 'click',\n      position: 'top',\n      gridCol: 3,\n      itemLabelFontSize: 12,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"图例项样式",en:"Item style"},filename:"style.js",isNew:!1}],icon:"",id:"legend",title:{en:"Legend",zh:"Legend 图例"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*asv5Roh25YkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: { nodes: Array.from({ length: 20 }).map((_, i) => ({ id: `node${i}` })) },\n  behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'minimap',\n      size: [240, 160],\n    },\n  ],\n  node: {\n    palette: 'spectral',\n  },\n  layout: {\n    type: 'circular',\n  },\n  autoFit: 'view',\n});\n\ngraph.render();\n",title:{zh:"小地图",en:"Minimap"},filename:"basic.js",isNew:!1}],icon:"",id:"minimap",title:{en:"Minimap",zh:"Minimap 小地图"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*MU65RolCuPkAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: { type: 'grid' },\n  behaviors: ['drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'snapline',\n      key: 'snapline',\n      verticalLineStyle: { stroke: '#F08F56', lineWidth: 2 },\n      horizontalLineStyle: { stroke: '#17C76F', lineWidth: 2 },\n      autoSnap: false,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"对齐线",en:"Snapline"},filename:"basic.js",isNew:!1},{id:"autoSnap",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*67Y_RpCskBMAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: { type: 'grid' },\n  behaviors: ['drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'snapline',\n      key: 'snapline',\n      verticalLineStyle: { stroke: '#F08F56', lineWidth: 2 },\n      horizontalLineStyle: { stroke: '#17C76F', lineWidth: 2 },\n      offset: Infinity,\n      autoSnap: true,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"支持自动吸附",en:"Snapline with auto snap"},filename:"autoSnap.js",isNew:!1}],icon:"",id:"snapline",title:{en:"Snapline",zh:"Snapline 对齐线"},api:null,childrenKey:"demos",order:0},{demos:[{id:"time",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*94CATK7VwhQAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst startTime = new Date('2023-08-01').getTime();\nconst diff = 3600 * 24 * 1000;\nconst timebarData = [10, 2, 3, 4, 15, 10, 5, 0, 3, 1].map((value, index) => ({\n  time: new Date(startTime + index * diff),\n  value,\n  label: new Date(startTime + index * diff).toLocaleString(),\n}));\nconst graphData = {\n  nodes: new Array(49).fill(0).map((_, index) => ({\n    id: `node-${index}`,\n    data: {\n      timestamp: startTime + (index % 10) * diff,\n      value: index % 20,\n      label: new Date(startTime + (index % 10) * diff).toLocaleString(),\n    },\n  })),\n  edges: new Array(49).fill(0).map((_, i) => ({\n    id: `edge-${i}`,\n    source: `node-${i % 30}`,\n    target: `node-${(i % 20) + 29}`,\n    data: {\n      edgeType: 'e1',\n    },\n  })),\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data: graphData,\n  behaviors: ['drag-canvas', 'drag-element', 'zoom-canvas'],\n  layout: {\n    type: 'grid',\n    cols: 7,\n  },\n  plugins: [\n    {\n      type: 'timebar',\n      key: 'timebar',\n      data: timebarData,\n      width: 450,\n      loop: true,\n    },\n  ],\n  autoFit: 'view',\n  padding: [10, 0, 65, 0],\n});\n\ngraph.render();\n",title:{zh:"时间模式",en:"Time Mode"},filename:"time.js",isNew:!1},{id:"chart",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*RjCKS6xdRWwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst startTime = new Date('2023-08-01').getTime();\nconst diff = 3600 * 24 * 1000;\nconst timebarData = [10, 2, 3, 4, 15, 10, 5, 0, 3, 1].map((value, index) => ({\n  time: new Date(startTime + index * diff),\n  value,\n  label: new Date(startTime + index * diff).toLocaleString(),\n}));\nconst graphData = {\n  nodes: new Array(49).fill(0).map((_, index) => ({\n    id: `node-${index}`,\n    data: {\n      timestamp: startTime + (index % 10) * diff,\n      value: index % 20,\n      label: new Date(startTime + (index % 10) * diff).toLocaleString(),\n    },\n  })),\n  edges: new Array(49).fill(0).map((_, i) => ({\n    id: `edge-${i}`,\n    source: `node-${i % 30}`,\n    target: `node-${(i % 20) + 29}`,\n    data: {\n      edgeType: 'e1',\n    },\n  })),\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data: graphData,\n  behaviors: ['drag-canvas', 'drag-element', 'zoom-canvas'],\n  layout: {\n    type: 'grid',\n    cols: 7,\n  },\n  plugins: [\n    {\n      type: 'timebar',\n      key: 'timebar',\n      data: timebarData,\n      width: 450,\n      height: 100,\n      loop: true,\n      timebarType: 'chart',\n    },\n  ],\n  autoFit: 'view',\n  padding: [10, 0, 160, 0],\n});\n\ngraph.render();\n",title:{zh:"图表模式",en:"Chart Mode"},filename:"chart.js",isNew:!1}],icon:"",id:"timebar",title:{en:"Timebar",zh:"Timebar 时间条"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*IXshSoyeZHEAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'toolbar',\n      position: 'top-left',\n      onClick: (item) => {\n        alert('item clicked:' + item);\n      },\n      getItems: () => {\n        // G6 内置了 9 个 icon，分别是 zoom-in、zoom-out、redo、undo、edit、delete、auto-fit、export、reset\n        return [\n          { id: 'zoom-in', value: 'zoom-in' },\n          { id: 'zoom-out', value: 'zoom-out' },\n          { id: 'redo', value: 'redo' },\n          { id: 'undo', value: 'undo' },\n          { id: 'edit', value: 'edit' },\n          { id: 'delete', value: 'delete' },\n          { id: 'auto-fit', value: 'auto-fit' },\n          { id: 'export', value: 'export' },\n          { id: 'reset', value: 'reset' },\n        ];\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"工具栏",en:"ToolBar"},filename:"basic.js",isNew:!1},{id:"custom",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*U_72RJtvwEIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\n// Use your own iconfont.\nconst iconFont = document.createElement('script');\niconFont.src = '//at.alicdn.com/t/font_8d5l8fzk5b87iudi.js';\ndocument.head.appendChild(iconFont);\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'toolbar',\n      position: 'right-top',\n      onClick: (item) => {\n        alert('item clicked:' + item);\n      },\n      getItems: () => {\n        return [\n          { id: 'icon-xinjian', value: 'new' },\n          { id: 'icon-fenxiang', value: 'share' },\n          { id: 'icon-chexiao', value: 'undo' },\n        ];\n      },\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"自定义工具栏",en:"ToolBar"},filename:"custom.js",isNew:!1}],icon:"",id:"toolbar",title:{en:"ToolBar",zh:"Toolbar 工具栏"},api:null,childrenKey:"demos",order:0},{demos:[{id:"basic",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ErhbR7ErhRwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: '0', data: { label: 'node-0', description: 'This is node-0.' } },\n      { id: '1', data: { label: 'node-1', description: 'This is node-1.' } },\n      { id: '2', data: { label: 'node-2', description: 'This is node-2.' } },\n      { id: '3', data: { label: 'node-3', description: 'This is node-3.' } },\n      { id: '4', data: { label: 'node-4', description: 'This is node-4.' } },\n      { id: '5', data: { label: 'node-5', description: 'This is node-5.' } },\n    ],\n    edges: [\n      { source: '0', target: '1', data: { description: 'This is edge from node 0 to node 1.' } },\n      { source: '0', target: '2', data: { description: 'This is edge from node 0 to node 2.' } },\n      { source: '0', target: '3', data: { description: 'This is edge from node 0 to node 3.' } },\n      { source: '0', target: '4', data: { description: 'This is edge from node 0 to node 4.' } },\n      { source: '0', target: '5', data: { description: 'This is edge from node 0 to node 5.' } },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  plugins: [\n    {\n      type: 'tooltip',\n      getContent: (e, items) => {\n        let result = `<h4>Custom Content</h4>`;\n        items.forEach((item) => {\n          result += `<p>Type: ${item.data.description}</p>`;\n        });\n        return result;\n      },\n    },\n  ],\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"提示框",en:"Tooltip"},filename:"basic.js",isNew:!1},{id:"click",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ErhbR7ErhRwAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: '0', data: { label: 'node-0', description: 'This is node-0.' } },\n      { id: '1', data: { label: 'node-1', description: 'This is node-1.' } },\n      { id: '2', data: { label: 'node-2', description: 'This is node-2.' } },\n      { id: '3', data: { label: 'node-3', description: 'This is node-3.' } },\n      { id: '4', data: { label: 'node-4', description: 'This is node-4.' } },\n      { id: '5', data: { label: 'node-5', description: 'This is node-5.' } },\n    ],\n    edges: [\n      { source: '0', target: '1', data: { description: 'This is edge from node 0 to node 1.' } },\n      { source: '0', target: '2', data: { description: 'This is edge from node 0 to node 2.' } },\n      { source: '0', target: '3', data: { description: 'This is edge from node 0 to node 3.' } },\n      { source: '0', target: '4', data: { description: 'This is edge from node 0 to node 4.' } },\n      { source: '0', target: '5', data: { description: 'This is edge from node 0 to node 5.' } },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  plugins: [\n    {\n      type: 'tooltip',\n      trigger: 'click',\n      getContent: (e, items) => {\n        let result = `<h4>Custom Content</h4>`;\n        items.forEach((item) => {\n          result += `<p>Type: ${item.data.description}</p>`;\n        });\n        return result;\n      },\n    },\n  ],\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"点击触发",en:"Show on click"},filename:"click.js",isNew:!1},{id:"dual",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*DCZ_SbSHGnYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst graph = new Graph({\n  container: 'container',\n  data: {\n    nodes: [\n      { id: '0', data: { label: 'node-0', description: 'This is node-0.' } },\n      { id: '1', data: { label: 'node-1', description: 'This is node-1.' } },\n      { id: '2', data: { label: 'node-2', description: 'This is node-2.' } },\n      { id: '3', data: { label: 'node-3', description: 'This is node-3.' } },\n      { id: '4', data: { label: 'node-4', description: 'This is node-4.' } },\n      { id: '5', data: { label: 'node-5', description: 'This is node-5.' } },\n    ],\n    edges: [\n      { source: '0', target: '1', data: { description: 'This is edge from node 0 to node 1.' } },\n      { source: '0', target: '2', data: { description: 'This is edge from node 0 to node 2.' } },\n      { source: '0', target: '3', data: { description: 'This is edge from node 0 to node 3.' } },\n      { source: '0', target: '4', data: { description: 'This is edge from node 0 to node 4.' } },\n      { source: '0', target: '5', data: { description: 'This is edge from node 0 to node 5.' } },\n    ],\n  },\n  layout: {\n    type: 'grid',\n  },\n  plugins: [\n    function () {\n      return {\n        key: 'tooltip-click',\n        type: 'tooltip',\n        trigger: 'click',\n        getContent: (evt, items) => {\n          return `<div>click ${items[0].id}</div>`;\n        },\n        onOpenChange: (open) => {\n          const tooltip = this.getPluginInstance('tooltip-hover');\n          if (tooltip && open) tooltip.hide();\n        },\n      };\n    },\n    function () {\n      return {\n        key: 'tooltip-hover',\n        type: 'tooltip',\n        trigger: 'hover',\n        enable: (e) => {\n          const tooltip = this.getPluginInstance('tooltip-click');\n          return e.target.id !== tooltip.currentTarget;\n        },\n        getContent: (evt, items) => {\n          return `<div>hover ${items[0].id}</div>`;\n        },\n        onOpenChange: (open) => {\n          const tooltip = this.getPluginInstance('tooltip-click');\n          if (tooltip && open) {\n            tooltip.hide();\n          }\n        },\n      };\n    },\n  ],\n  behaviors: ['drag-canvas', 'drag-element'],\n});\n\ngraph.render();\n",title:{zh:"鼠标移入和点击同一元素时显示不同的提示框",en:"Dual tooltips"},filename:"dual.js",isNew:!1}],icon:"",id:"tooltip",title:{en:"Tooltip",zh:"Tooltip 提示框"},api:null,childrenKey:"demos",order:0},{demos:[{id:"text",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*GPRuRqBUIsoAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: { type: 'grid' },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'watermark',\n      text: 'G6: Graph Visualization',\n      textFontSize: 14,\n      textFontFamily: 'Microsoft YaHei',\n      fill: 'rgba(0, 0, 0, 0.1)',\n      rotate: Math.PI / 12,\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"文本水印",en:"Text Watermark"},filename:"text.js",isNew:!1},{id:"repeat",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*8NfwR5QEXvIAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [{ id: 'node-0' }, { id: 'node-1' }, { id: 'node-2' }, { id: 'node-3' }, { id: 'node-4' }, { id: 'node-5' }],\n  edges: [\n    { source: 'node-0', target: 'node-1' },\n    { source: 'node-0', target: 'node-2' },\n    { source: 'node-0', target: 'node-3' },\n    { source: 'node-0', target: 'node-4' },\n    { source: 'node-1', target: 'node-0' },\n    { source: 'node-2', target: 'node-0' },\n    { source: 'node-3', target: 'node-0' },\n    { source: 'node-4', target: 'node-0' },\n    { source: 'node-5', target: 'node-0' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  data,\n  layout: {\n    type: 'grid',\n  },\n  behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n  plugins: [\n    {\n      type: 'watermark',\n      width: 200,\n      height: 100,\n      rotate: Math.PI / 12,\n      imageURL: 'https://gw.alipayobjects.com/os/s/prod/antv/assets/image/logo-with-text-73b8a.svg',\n    },\n  ],\n});\n\ngraph.render();\n",title:{zh:"重复图片",en:"Repeat Image"},filename:"repeat.js",isNew:!1}],icon:"",id:"watermark",title:{en:"Watermark",zh:"Watermark 水印"},api:null,childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"transform",title:{zh:"数据处理",en:"Transform"},icon:"tag-flow",examples:[{demos:[{id:"bundle",screenshot:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*g2p_Qa_wZcIAAAAAAAAAAABkARQnAQ",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'A', style: { x: 50, y: 350 } },\n    { id: 'B', style: { x: 250, y: 150 } },\n    { id: 'C', style: { x: 450, y: 350 } },\n  ],\n  edges: [\n    { source: 'A', target: 'C' },\n    { source: 'C', target: 'A' },\n    ...Array.from({ length: 10 }).map((_, i) => ({\n      id: `edge:A-B${i}`,\n      source: 'A',\n      target: 'B',\n      data: {\n        label: `A->B:${i}`,\n      },\n    })),\n    ...Array.from({ length: 5 }).map((_, i) => ({\n      id: `edge:B-C${i}`,\n      source: 'B',\n      target: 'C',\n      data: {\n        label: `B->C:${i}`,\n      },\n    })),\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  autoFit: 'center',\n  data,\n  node: {\n    style: {\n      ports: [{ placement: 'center' }],\n      labelText: (d) => d.id,\n    },\n  },\n  edge: {\n    style: {\n      labelText: (d) => d?.data?.label || `${d.source}->${d.target}`,\n    },\n  },\n  behaviors: ['drag-element'],\n  transforms: ['process-parallel-edges'],\n});\n\ngraph.render();\n",title:{zh:"捆绑模式",en:"Bundle Mode"},filename:"bundle.js",isNew:!1},{id:"merge",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*3dsfSZunOjEAAAAAAAAAAAAAemJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nconst data = {\n  nodes: [\n    { id: 'A', style: { x: 50, y: 350 } },\n    { id: 'B', style: { x: 250, y: 150 } },\n    { id: 'C', style: { x: 450, y: 350 } },\n  ],\n  edges: [\n    { source: 'A', target: 'B' },\n    { source: 'B', target: 'A' },\n    { id: 'B-C:1', source: 'B', target: 'C' },\n    { id: 'B-C:2', source: 'B', target: 'C' },\n    { source: 'A', target: 'C' },\n  ],\n};\n\nconst graph = new Graph({\n  container: 'container',\n  autoFit: 'center',\n  data,\n  node: {\n    style: {\n      labelText: (d) => d.id,\n    },\n  },\n  edge: {\n    style: {\n      labelText: (d) => d?.data?.label || `${d.source}->${d.target}`,\n      startArrow: false,\n    },\n  },\n  transforms: [\n    {\n      type: 'process-parallel-edges',\n      mode: 'merge',\n      style: {\n        halo: true,\n        haloOpacity: 0.2,\n        haloStroke: 'red',\n        startArrow: true,\n      }\n    }\n  ],\n});\n\ngraph.render();\n",title:{zh:"合并模式",en:"Merge Mode"},filename:"merge.js",isNew:!1}],icon:"",id:"process-parallel-edges",title:{en:"Process Parallel Edges",zh:"Process Parallel Edges 平行边"},api:null,childrenKey:"demos",order:0}],childrenKey:"examples"},{id:"algorithm",title:{zh:"算法",en:"Algorithm"},icon:"gallery",examples:[{demos:[{id:"pattern-matching",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*a9eSQa4f4Y4AAAAAAAAAAAAADmJ7AQ/original",source:"import { GADDI } from '@antv/algorithm';\nimport { Graph } from '@antv/g6';\n\nconst pattern = {\n  nodes: [\n    {\n      id: 'pn0',\n      cluster: 'nodeType-0',\n    },\n    {\n      id: 'pn1',\n      cluster: 'nodeType-1',\n    },\n    {\n      id: 'pn2',\n      cluster: 'nodeType-2',\n    },\n  ],\n  edges: [\n    { source: 'pn1', target: 'pn0', cluster: 'edgeType-1' },\n    { source: 'pn1', target: 'pn2', cluster: 'edgeType-0' },\n    { source: 'pn2', target: 'pn0', cluster: 'edgeType-2' },\n  ],\n};\n\nfetch('https://assets.antv.antgroup.com/g6/gaddi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      node: {\n        style: {\n          labelPlacement: 'center',\n          labelText: (d) => d.label,\n          stroke: '#5F95FF',\n          lineWidth: 1,\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n          color: ['#5F95FF', '#61DDAA', '#65789B'],\n        },\n      },\n      edge: {\n        style: {\n          endArrow: true,\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n          color: ['#5F95FF', '#61DDAA', '#65789B'],\n        },\n      },\n      plugins: [\n        {\n          type: 'legend',\n          nodeField: 'cluster',\n          position: 'bottom',\n        },\n        {\n          key: 'hull-0',\n          type: 'hull',\n          members: [],\n        },\n        {\n          key: 'hull-1',\n          type: 'hull',\n          members: [],\n        },\n      ],\n    });\n    graph.render();\n\n    window.addPanel((gui) => {\n      gui.add(\n        {\n          match: () => {\n            const matches = GADDI(data, pattern, true, undefined, undefined, 'cluster', 'cluster');\n            matches.forEach((match, i) => {\n              graph.updatePlugin({\n                key: `hull-${i}`,\n                members: match.nodes.map((node) => node.id),\n              });\n            });\n            graph.render();\n          },\n        },\n        'match',\n      );\n    });\n  });\n",title:{zh:"图模式匹配",en:"Graph pattern matching"},filename:"pattern-matching.js",isNew:!1},{id:"shortest-path",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*wQy2TZkb-VgAAAAAAAAAAAAADmJ7AQ/original",source:"import { findShortestPath } from '@antv/algorithm';\nimport { CanvasEvent, Graph } from '@antv/g6';\n\nconst format = ({ nodes, edges }) => {\n  return {\n    nodes: nodes.map((node) => ({\n      ...node,\n      style: {\n        x: node.x,\n        y: node.y,\n      },\n    })),\n    edges,\n  };\n};\n\nfetch('https://gw.alipayobjects.com/os/bmw-prod/b0ca4b15-bd0c-43ec-ae41-c810374a1d55.json')\n  .then((res) => res.json())\n  .then(format)\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      animation: false,\n      data,\n      node: {\n        style: {\n          size: 12,\n        },\n      },\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', { type: 'click-select', multiple: true }],\n      autoFit: 'view',\n    });\n\n    graph.render();\n\n    const resetStates = () => {\n      graph.setElementState(Object.fromEntries([...data.nodes, ...data.edges].map((element) => [element.id, []])));\n    };\n\n    graph.on(CanvasEvent.CLICK, () => {\n      resetStates();\n    });\n\n    window.addPanel((gui) => {\n      gui.add(\n        {\n          Help: () => {\n            alert(\"Press 'shift' to select source and target nodes \\n按住 'shift' 选取起点和终点\");\n          },\n        },\n        'Help',\n      );\n      gui.add(\n        {\n          Search: () => {\n            const nodes = graph.getElementDataByState('node', 'selected');\n            if (nodes.length !== 2) {\n              alert('Please select 2 nodes!\\n请选择两个节点！');\n              return;\n            }\n            const [source, target] = nodes;\n            const { length, path } = findShortestPath(data, source.id, target.id);\n            if (length === Infinity) {\n              alert('No path found!\\n未找到路径！');\n              return;\n            }\n\n            const states = {};\n            data.nodes.forEach(({ id }) => {\n              if (path.includes(id)) states[id] = 'highlight';\n              else states[id] = 'inactive';\n            });\n\n            data.edges.forEach(({ id, source, target }) => {\n              const sourceIndex = path.indexOf(source);\n              const targetIndex = path.indexOf(target);\n              if (sourceIndex === -1 || targetIndex === -1) return;\n              if (Math.abs(sourceIndex - targetIndex) === 1) states[id] = 'highlight';\n              else states[id] = 'inactive';\n            });\n\n            graph.setElementState(states);\n            graph.frontElement(path);\n          },\n        },\n        'Search',\n      );\n    });\n  });\n",title:{zh:"最短路径",en:"Shortest path"},filename:"shortest-path.js",isNew:!1},{id:"label-propagation",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1QHsR4wHCKwAAAAAAAAAAAAADmJ7AQ/original",source:"import { labelPropagation } from '@antv/algorithm';\nimport { Graph } from '@antv/g6';\n\nconst colors = [\n  '#5F95FF',\n  '#61DDAA',\n  '#65789B',\n  '#F6BD16',\n  '#7262FD',\n  '#78D3F8',\n  '#9661BC',\n  '#F6903D',\n  '#008685',\n  '#F08BB4',\n];\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      layout: {\n        type: 'force',\n        linkDistance: 50,\n        animation: false,\n      },\n    });\n    \n    graph.render();\n\n    window.addPanel((gui) => {\n      gui.add(\n        {\n          Cluster: () => {\n            const clusteredData = labelPropagation(data, false);\n            const result = clusteredData.clusters\n              .map((cluster, i) => {\n                const color = colors[i % colors.length];\n                const nodes = cluster.nodes.map((node) => ({\n                  id: node.id,\n                  style: {\n                    fill: color,\n                  },\n                }));\n                return nodes;\n              })\n              .flat();\n            graph.updateNodeData(result);\n            graph.draw();\n          },\n        },\n        'Cluster',\n      );\n    });\n  });\n",title:{zh:"LP 自动聚类",en:"LP automatic clustering"},filename:"label-propagation.js",isNew:!1},{id:"louvain",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*1QHsR4wHCKwAAAAAAAAAAAAADmJ7AQ/original",source:"import { louvain } from '@antv/algorithm';\nimport { Graph } from '@antv/g6';\n\nconst colors = [\n  '#5F95FF',\n  '#61DDAA',\n  '#65789B',\n  '#F6BD16',\n  '#7262FD',\n  '#78D3F8',\n  '#9661BC',\n  '#F6903D',\n  '#008685',\n  '#F08BB4',\n];\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      data,\n      autoFit: 'view',\n      behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element'],\n      layout: {\n        type: 'force',\n        linkDistance: 50,\n        animation: false,\n      },\n    });\n    graph.render();\n\n    window.addPanel((gui) => {\n      gui.add(\n        {\n          Cluster: () => {\n            const clusteredData = louvain(data, false);\n            const result = clusteredData.clusters\n              .map((cluster, i) => {\n                const color = colors[i % colors.length];\n                const nodes = cluster.nodes.map((node) => ({\n                  id: node.id,\n                  style: {\n                    fill: color,\n                  },\n                }));\n                return nodes;\n              })\n              .flat();\n            graph.updateNodeData(result);\n            graph.draw();\n          },\n        },\n        'Cluster',\n      );\n    });\n  });\n",title:{zh:"LOUVAIN 自动聚类",en:"LOUVAIN automatic clustering"},filename:"louvain.js",isNew:!1}],icon:"",id:"case",title:{en:"Graph Algorithm Practice",zh:"图算法应用"},api:null,childrenKey:"demos",order:5}],childrenKey:"examples"},{id:"performance",title:{zh:"性能",en:"Performance"},icon:"net",examples:[{demos:[{id:"5000",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*4nfBQIM_MJYAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/5000.json')\n  .then((res) => res.json())\n  .then(async (data) => {\n    const graph = new Graph({\n      container: 'container',\n      animation: false,\n      data,\n      behaviors: ['zoom-canvas', 'drag-canvas', 'drag-element'],\n      autoFit: 'view',\n    });\n\n    await graph.render();\n  });\n",title:{zh:"5000+ 元素",en:"More than 5000 elements"},filename:"5000.js",isNew:!1},{id:"20000",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*oiL0R5rfaL8AAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/20000.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      animation: false,\n      autoFit: 'view',\n      data,\n      node: {\n        style: {\n          size: 8,\n        },\n        palette: {\n          type: 'group',\n          field: 'cluster',\n        },\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"约 20000 元素",en:"About 20000 elements"},filename:"20000.js",isNew:!1},{id:"60000",screenshot:"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*EG7WRrraMAsAAAAAAAAAAAAADmJ7AQ/original",source:"import { Graph } from '@antv/g6';\n\nfetch('https://assets.antv.antgroup.com/g6/60000.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const graph = new Graph({\n      container: 'container',\n      animation: false,\n      autoFit: 'view',\n      data,\n      node: {\n        style: {\n          size: 4,\n          batchKey: 'node',\n        },\n      },\n      behaviors: ['zoom-canvas', 'drag-canvas'],\n    });\n\n    graph.render();\n  });\n",title:{zh:"60000+ 元素",en:"More than 60000 elements"},filename:"60000.js",isNew:!1}],icon:"",id:"massive-data",title:{en:"Massive Data",zh:"大数据量"},api:null,childrenKey:"demos",order:0}],childrenKey:"examples"}]}},children:n})}}}]);